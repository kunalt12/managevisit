{"version":3,"sources":["scripts/app-a810c26e0b.js"],"names":["isObject","value","Object","isArray","Array","isFile","File","objectToFormData","obj","fd","pre","FormData","keys","forEach","prop","key","arrayKey","append","routeConfig","$urlRouterProvider","baSidebarServiceProvider","otherwise","angular","module","config","$stateProvider","state","url","template","controller","abstract","title","sidebarMeta","icon","order","data","mainmodule","childmodule","resolve","havePermission","checkUserPermission","templateUrl","when","name","App","filter","date","moment","fromNow","route_url","apiRoutUrl","site","document","location","hostname","origin","logoURL","profile_url","api_url","constant","checkLogin","$rootScope","$q","$cookies","$state","AuthenticationFactory","deferred","defer","setTimeout","token","get","auth_user","success","response","reject","goto","promise","permissionModule","permission","Notification","permissions","length","access","error","nothavepermission","checkPermission","role","message","has_permission","go","logout","remove","$httpProvider","ivhTreeviewOptionsProvider","$validationProvider","$locationProvider","chosenProvider","$sceDelegateProvider","defaults","useXDomain","headers","common","withCredentials","interceptors","push","resourceUrlWhitelist","set","idAttribute","labelAttribute","childrenAttribute","selectedAttribute","useCheckboxes","setErrorHTML","msg","showSuccessMessage","setOption","scroll_to_highlighted","run","editableOptions","theme","submitButtonTitle","submitButtonAriaLabel","cancelButtonTitle","cancelButtonAriaLabel","clearButtonTitle","clearButtonAriaLabel","$scope","$http","$config","$location","$timeout","$injector","$sce","$window","NotificationsFactory","logoImage","notification_msg_string_limit","$on","event","toState","toParams","fromState","fromParams","$","animate","scrollTop","curState","current","JSON","parse","mobile","image","profilePicture","id","params","toTrustedHTML1","html","trustAsHtml","indexOf","hasRole","values","makeid","text","possible","i","charAt","Math","floor","random","checkManualValidation","form","validate","appName","res","err","helptextData","showModal","buttonClicked","toggleModal","btnClicked","helpText","route_name","help_text","goBack","history","back","initialise","refreshOpts","interval","paused","notification_old_count","notification_old_data","refreshList","headerNotification","imagePath","dummyImage","count","notifications","setLastRefreshed","eventArgs","lastRefresh","markReadTopNotification","markReadNotification","randomString","chars","pass","x","baConfigProvider","colorHelper","$provide","decorator","uiViewScrollDecorator","$delegate","$anchorScroll","baUtil","uiViewElement","hasAttr","configProvider","conf","blur","colors","default","basic","defaultText","border","borderDark","primary","colorScheme","info","warning","danger","primaryLight","tint","infoLight","successLight","warningLight","dangerLight","primaryDark","shade","infoDark","successDark","warningDark","dangerDark","dashboard","blueStone","dashboardColors","surfieGreen","silverTree","gossip","white","changeTheme","merge","changeColors","$get","provider","mix","color1","color2","weight","d2h","d","toString","h2d","h","parseInt","result","color1Part","substr","color2Part","resultPart","slice","IMAGES_ROOT","resWidthCollapseSidebar","resWidthHideSidebar","images","root","profile","amMap","amChart","color","themeRun","layoutPaths","preloader","baSidebarService","themeLayoutSettings","whatToWait","loadAmCharts","unshift","loadImg","all","then","$pageFinishedLoading","$baSidebarService","baConfig","isMobile","test","navigator","userAgent","toLowerCase","mobileClass","blurClass","element","body","addClass","service","directive","$templateCache","restrict","require","scope","acOutsideClick","initialValue","placeholder","validator","outerHTML","link","iElement","iAttrs","ele","onClick","contains","parent","target","keyDown","e","keyCode","which","addEventListener","removeEventListener","$elem","attrs","ctrl","regReplace","preset","slug","company-name","only-numbers","numbers","only-letters","only-letters-space","letters","email","alpha-numeric","latin-alpha-numeric","on","RegExp","$setViewValue","val","replace","$render","attr","ngConfirmClick","clickAction","confirmedClick","bind","window","confirm","$eval","focus","$element","$attrs","$transclude","$watch","stateNgModel","newValue","oldValue","range2","year","Date","getFullYear","yearName","Number","yearData","months2","range","mnthName","months","month","getMonth","disableData","transaction","sender","id_proof_issue_year","disabled","range1","months1","id_proof_expire_year","user","transclude","visible","modal","$apply","$parent","$filter","$browser","ngModelCtrl","listener","$parsers","viewValue","$viewValue","tel","trim","match","city","number","this","replace_string","input","txt","toUpperCase","makeSsn","ssn","ngModel","$formatters","cursorPosition","selectionStart","oldLength","nonDigits","intValue","setSelectionRange","fromUser","transformedInput","el","files","elem","validImage","bool","$setValidity","validFormats","ext","lastIndexOf","$validators","validFile","substring","factory","ApiManagementsFactory","validation","required","minlength","maxlength","api_key","duplicate","status","ipaddress","addRecord","post","getRecord","updateRecord","checkSlug","showDataTable","method","param","Content-Type","deleteRecord","delete","request","Authorization","new_token","put","responseError","rejection","refreshToken","invalidEmail","password","confirm_password","login","formData","undefined","forgotPassword","resetPassword","Contactmanagement","organization_id","visitor_type","organization","first_name","last_name","phone_number","address","address1","gender","dob","country_id","zip_code","getAllRecord","checkRecordByPhone","DashboardsFactory","task","getCalenderRecord","getTourDataTable","DefaulttasksFactory","getRecords","getAllRecords","LocationsFactory","description","MealcategoriesFactory","MealsFactory","MealservicelocationsFactory","MealservicetypesFactory","cost","MomentosFactory","OrganizationsFactory","RolesFactory","getAllRole","getRole","role_id","getRolePermisssions","addRole","updateRole","changeUserRole","roleList","getAllPermission","SettingsFactory","admin_email","confirm_link_expired","getAllSettings","ToursFactory","start_date","transport_id","tourtype_id","location_id","meal_id","catering_manager","meal_service_type_id","meal_service_location_id","contact_manager","specific_item","people","senior","adults","children","note","feedback","manager","budget","expense_field","viewRecord","viewFeedback","addFeedback","actionRecord","resend","deleteVisitor","addTask","updateTask","getOrganization","actionTask","deleteTask","tourDocument","deleteDocument","tourNote","deleteNote","TourtypesFactory","TransportsFactory","UsersFactory","user_type","pdfFile","maxSize","new_password","getTourManager","editProfile","getVolunteers","getCountry","updatePassword","_method","updateAvailability","changePassword","resendEmail","showAvailabilitiesDataTable","VisitorsFactory","AddApiManagementsCtrl","fileReader","$uibModal","$compile","$stateParams","pageName","btnName","isSubmitted","errorMessage","formscope","statusOption","changeKey","add_data","ApiManagementsCtrl","DTOptionsBuilder","DTColumnBuilder","reloadData","dtInstance","rerender","createdRow","row","dataIndex","contents","reload","actionRoles","type","full","statusAction","indexNumber","ind","settings","_iDisplayStart","dtOptions","newOptions","withDataProp","withOption","callback","withPaginationType","withDOM","dtColumns","newColumn","withTitle","renderWith","withClass","notSortable","EditApiManagementsCtrl","urlID","AddContactmanagementsCtrl","genderOption","label","OrganizationOption","VisitorOption","concat","countries","country_name","EditContactmanagementsCtrl","ListContactmanagementsCtrl","genderRender","ViewContactmanagementsCtrl","ngDialog","showStatus","selected","organizationType","DashboardCtrl","charts","countData","totalTour","tourFilterData","tourCountData","Today_Total_Volunteer","today_total_volunteer","tours","nameView","actionTours","setPerson","mealOptions","meals","momentosOption","tour_momentos","AddDefaulttasksCtrl","EditDefaulttasksCtrl","ListDefaulttasksCtrl","ForgotPasswordCtrl","action","forgotSubmit","loginProgress","ResetPasswordCtrl","setExpression","confirmPassword","setDefaultMsg","resetSubmit","password_confirmation","LoginPageCtrl","admin","isFormSubmit","loginSubmit","valid","submit","stringify","NotificationsCtrl","changeDateFormat","created_at","ProfileModalCtrl","$uibModalInstance","ok","close","ProfilePageCtrl","picture","removePicture","noPicture","uploadPicture","fileInput","getElementById","click","socialProfiles","href","unconnect","item","open","animation","getFile","readAsDataUrl","file","switches","AddRolesCtrl","role_type","is_editable","roleMessage","submitRole","EditRolesCtrl","roleId","RolesCtrl","showPermissions","getPermissions","SettingsCtrl","updateSetting","AcknowledgeCtrl","editableThemes","DTColumnDefBuilder","activeTaskList","addTaskBtn","minDateMoment","subtract","visitors","mealsType","selectedMeals","showTable","smartTablePageSize","TransportOption","TourTypeOption","OrganizationTypeOption","mealsTypeOption","locationsTypeOption","mealServiceTypeOption","mealServiceLocationsOption","usersOption","showMealsTypeOption","showMealServiceTypeOption","showMealServiceLocationsOption","showCateringManager","showOrganizationTypeOption","showVisitorOption","showGenderOption","activeTask","tour_tasks","tour_meals","each","tour_visitors","is_tour_admin","visitor","contactManagerDetails","countryName","country","fullAddress","tasks","approveRejectTour","tour_id","comment","visitorOptions","visitorColumnDefs","newColumnDef","AddCommentModalCtrl","AddDocumentModalCtrl","docLink","docTitle","docName","titleName","userName","formdocscope","loginID","created_by","expression","validMsg","AddMealModalCtrl","mealData","formTitle","old_meal_id","selectedMealId","isDisabled","inArray","availability","checkNumber","meal_txt","option","mealservice_txt","meallocation_txt","catering_manager_txt","AddNoteModalCtrl","notesInfo","notesName","formnotescope","AddTaskModalCtrl","AddToursCtrl","sDate","startDate","format","edittourtype","organizationOption","residentSelected","originalObject","managersOption","taskList","splice","connect","size","taskName","addVisitor","organizationName","organizationNameData","visitorInfo","isEdit","duplicateVisitor","editVisitor","visitorData","index","removeVisitor","addMeals","backdrop","editMeals","uniqueIds","removeIndex","removeMeal","mealsId","mailModal","tourStatus","mailInfo","sendMail","mailSubject","mailContent","documents","docList","notes","addDocument","duplicateDocTitle","duplicateDocLink","editDocument","docData","removeDoc","docId","addNote","editNote","noteData","removeNotes","noteId","documentOptions","dtColumnDefs","notesOptions","notesColumnDefs","AddVisitorModalCtrl","visitorUser","organizationNameOption","checkPhoneNumber","search_key","search_value","gender_txt","organization_txt","visitor_txt","momentos","addMomento","middle_name","$broadcast","showDropdownFirstName","showDropdownLastName","showDropdownEmail","showDropdownMobile","searching","textNoResults","closePopup","searchResult1","hoverRow","currentIndex","filed","selectResult","searchMobileResult","visitorSelectedFirst","visitorSelectedLast","visitorSelectedEmail","visitorSelectedMobile","MomentosOption","EditToursCtrl","$route","addVisitoritem","console","log","visitorTourID","queryData","visitor_id","visitorsOption","tour_documents","tour_notes","deleteDocLInk","addToDoItem","clickPlus","userRoleID","documentDataFlag","statusPending","statusAcknowledge","statusApproved","statusRejected","statusCompleted","tourStatusOption","tour_notes_created","tour_docs_created","tour_visitors_edit","deleteDoc","FeedbackCtrl","rating","filledForm","displayForm","filled","setRating","ListToursCtrl","filterData","loginUserID","filerdatatable","searchData","reLink","acknowledge","deleteBtn","resendmailModal","tourId","commentforacknowledge","sendackmailModal","filerData","TourMailModalCtrl","displayEditor","donotsendMail","ViewToursCtrl","smartTablePageSize1","userID","tourCompleted","editTourBtn","changeStatus","updatedStatus","volunteersOption","showUsers","user_id","visitortypes","total_guest","activity","tour_history","visitorcategory","join","inserted","tour_name","user_name","tour_tapes","checkTask","$data","removeUser","taskId","cancelRow","task_name","historyOptions","historyColumnDefs","AvailabilitiesCtrl","statueRender","AddUsersCtrl","userTypeOption","currentDate","ChangePasswordCtrl","changepassformscope","change_password","EditUsersCtrl","UserMailModalCtrl","ViewUsersCtrl","showGender","gender_text","imageUrl","editProfileCtrl","formscopestatus","change_availability","UsersCtrl","userId","users","roleRender","split","toastrLibConfig","toastrConfig","extend","closeButton","closeHtml","timeOut","autoDismiss","containerId","maxOpened","newestOnTop","positionClass","preventDuplicates","preventOpenDuplicates","animatedChange","changeValue","oldvalue","j","next","find","autoExpand","$event","height","scrollHeight","autoFocus","$parse","model","select","assign","includeWithScope","ionSlider","min","max","prefix","maxPostfix","prettify","prettifySeparator","grid","gridMargin","postfix","step","hideMinMax","hideFromTo","from","to","disable","onChange","onFinish","timeout","ionRangeSlider","prettify_enabled","prettify_separator","update","ngFileSelect","srcElement","scrollPosition","maxHeight","prevScrollTop","trackWidth","minWidth","width","prevTrackWidth","resize","zoomIn","delay","removeClass","baProgressModal","methods","progress","opened","setProgress","Error","getProgress","keyboard","isDescendant","child","node","parentNode","hexToRGB","hex","alpha","r","g","b","attrName","onLoad","reader","onError","onProgress","total","loaded","getReader","FileReader","onload","onerror","onprogress","readAsDataURL","src","img","Image","AmCharts","ready","stopableInterval","start","calback","time","startInterval","cancel","AddLocationsCtrl","statusData","EditLocationsCtrl","ListLocationsCtrl","AddMealcategoriesCtrl","EditMealcategoriesCtrl","ListMealcategoriesCtrl","AddMealsCtrl","EditMealsCtrl","ListMealsCtrl","AddMealservicelocationsCtrl","EditMealservicelocationsCtrl","ListMealservicelocationsCtrl","AddMealservicetypesCtrl","EditMealservicetypesCtrl","ListMealservicetypesCtrl","typeName","AddMomentosCtrl","EditMomentosCtrl","ListMomentosCtrl","AddOrganizationsCtrl","EditOrganizationsCtrl","ListOrganizationsCtrl","AddTourtypesCtrl","EditTourtypesCtrl","ListTourtypesCtrl","taksAction","defaulttask","ViewTourtypesCtrl","statuses","tourtype","removeTask","checkStatus","AddTransportsCtrl","EditTransportsCtrl","ListTransportsCtrl","AddVisitorsCtrl","EditVisitorsCtrl","ListVisitorsCtrl","DashboardCalendarCtrl","calendarData","end","fullCalendar","header","left","center","right","defaultDate","selectable","selectHelper","addPermition","_d","timeFormat","editable","eventLimit","events","eventClick","dashboardCalendar","baPanel","baPanelClass","baPanelTitle","titleTpl","baPanelBlur","baPanelBlurHelper","bodyBgSize","bodyBgLoad","getBodyBgImageSizes","recalculatePanelStyle","css","backgroundSize","round","backgroundPosition","positionX","positionY","$isMobile","computedStyle","getComputedStyle","backgroundImage","elemW","documentElement","clientWidth","elemH","clientHeight","finalHeight","finalWidth","imgRatio","containerRatio","baPanelSelf","BaSidebarCtrl","menuItems","getMenuItems","defaultSidebarState","stateRef","hoverItem","showHoverElem","hoverElemHeight","currentTarget","menuTopValue","hoverElemTop","getBoundingClientRect","top","canSidebarBeHidden","setMenuCollapsed","baSidebar","layoutSizes","jqWindow","_onWindowClick","$evt","originalEvent","$sidebarEventProcessed","isMenuCollapsed","_onWindowResize","newMenuCollapsed","shouldMenuBeCollapsed","newMenuHeight","_calculateMenuHeight","menuHeight","childNodes","off","staticMenuItems","addStaticItem","apply","arguments","_factory","defineMenuItemStates","s","map","meta","level","sort","a","innerWidth","states","subMenu","isCollapsed","toggleMenuCollapsed","getAllStateRefsRecursive","_iterateSubItems","currentItem","subItem","baSidebarToggleMenu","baSidebarCollapseMenu","baSidebarTogglingItem","BaSidebarTogglingItemCtrl","_isState","subItemsStateRefs","some","subItemState","vm","menuItem","$$menuItem","$$expandSubmenu","warn","$$collapseSubmenu","$expand","$collapse","$toggle","hasClass","baUiSrefTogglingSubmenu","slideDown","slideUp","baUiSrefToggler","baWizard","controllerAs","baWizardCtrl","calcProgress","tabNum","tabs","addTab","tab","setPrev","selectTab","isAvailiable","t","tIndex","isFirstTab","isLastTab","nextTab","previousTab","baWizardStep","wizard","isSelected","$setSubmitted","isComplete","$valid","prevTab","pTab","backTop","position","speed","contentTop","activePageTitle","MsgCenterCtrl","0","1","2","3","messages","getMessage","msgCenter","pageTop","progressBarRound","animateBar","circle","setAttribute","PI","baProgressDialog","widgets","appImage","kameleonImg","plainText","String","baSwitcher","switcherStyle","switcherValue","o","fn","n","c","bottom","scroll","fadeIn","fadeOut","duration","jQuery"],"mappings":"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","file":"scripts/app-a810c26e0b.js","sourcesContent":["/**\n * @author v.lugovsky\n * created on 16.12.2015\n */\n(function () {\n  'use strict';\n\n  angular.module('BlurAdmin.pages', [\n    'ui.router',\n\n    // 'BlurAdmin.pages.ui',\n    // 'BlurAdmin.pages.components',\n    // 'BlurAdmin.pages.form',\n    // 'BlurAdmin.pages.tables',\n    // 'BlurAdmin.pages.charts',\n    // 'BlurAdmin.pages.maps',\n    // 'BlurAdmin.pages.profile',\n\n    'BlurAdmin.pages.dashboard',\n    'BlurAdmin.pages.users',\n    'BlurAdmin.pages.categories',\n    'BlurAdmin.pages.login',\n    'BlurAdmin.pages.roles',\n    'BlurAdmin.pages.contactmanagements',\n    'BlurAdmin.pages.tours',\n    'BlurAdmin.pages.settings',\n    'BlurAdmin.pages.notifications',\n    'BlurAdmin.pages.forgotpassword',\n    'BlurAdmin.pages.useravailabilities',\n    'BlurAdmin.pages.ApiManagements',\n  ]).config(routeConfig);\n\n  /** @ngInject */\n  function routeConfig($urlRouterProvider, baSidebarServiceProvider) {\n    $urlRouterProvider.otherwise('/dashboard');\n\n    /*baSidebarServiceProvider.addStaticItem({\n      title: 'Pages',\n      icon: 'ion-document',\n      subMenu: [{\n        title: 'Sign In',\n        fixedHref: 'auth.html',\n        blank: true\n      }, {\n        title: 'Sign Up',\n        fixedHref: 'reg.html',\n        blank: true\n      }, {\n        title: 'User Profile',\n        stateRef: 'profile'\n      }, {\n        title: '404 Page',\n        fixedHref: '404.html',\n        blank: true\n      }]\n    });\n    \n    baSidebarServiceProvider.addStaticItem({\n      title: 'Menu Level 1',\n      icon: 'ion-ios-more',\n      subMenu: [{\n        title: 'Menu Level 1.1',\n        disabled: true\n      }, {\n        title: 'Menu Level 1.2',\n        subMenu: [{\n          title: 'Menu Level 1.2.1',\n          disabled: true\n        }]\n      }]\n    });*/\n  }\n\n})();\n\n/**\n * @author v.lugovsky\n * created on 15.12.2015\n */\n(function () {\n  'use strict';\n\n  angular.module('BlurAdmin.theme', [\n      'toastr',\n      'chart.js',\n      'angular-chartist',\n      'angular.morris-chart',\n      'textAngular',\n      'BlurAdmin.theme.components',\n      'BlurAdmin.theme.inputs'\n  ]);\n\n})();\n\n/**\n * @author v.lugovsky\n * created on 16.12.2015\n */\n(function () {\n  'use strict';\n\n  angular.module('BlurAdmin.pages.ApiManagements', [])\n      .config(routeConfig);\n\n  /** @ngInject */\n  function routeConfig($stateProvider) {\n      $stateProvider\n        .state('ApiManagements', {\n          url: '/ApiManagements',\n          template : '<ui-view  autoscroll=\"true\" autoscroll-body-top></ui-view>',\n          controller: 'ApiManagementsCtrl',\n          abstract: false,\n          title: 'API Managements',\n          sidebarMeta: {\n            icon: 'fa fa-cog',\n            order: 497,\n          },\n          data: {\n            mainmodule: 'api_managements',\n            childmodule: 'view'\n          },\n          resolve: {\n              havePermission : checkUserPermission('api_managements', 'view')\n          }\n        })\n        .state('ApiManagements.list', {\n          url: '/list',\n          templateUrl: 'app/pages/ApiManagements/view.html',\n          title: 'API Managements',\n          controller: 'ApiManagementsCtrl',\n          sidebarMeta: {\n            order: 1,\n          },\n          resolve: {\n              havePermission : checkUserPermission('api_managements', 'view')\n          }\n        }).state('ApiManagements.add', {\n          url: '/add',\n          templateUrl: 'app/pages/ApiManagements/add.html',\n          title: 'Add API',\n          controller: 'AddApiManagementsCtrl',\n          sidebarMeta: {\n            order: 2,\n          },\n          resolve: {\n              havePermission : checkUserPermission('api_managements', 'create')\n          }\n        }).state('ApiManagements.edit', {\n          url: '/edit/:id',\n          templateUrl: 'app/pages/ApiManagements/add.html',\n          title: 'Edit API',\n          controller: 'EditApiManagementsCtrl',\n          resolve: {\n              havePermission : checkUserPermission('api_managements', 'update')\n          }\n        });\n    // $urlRouterProvider.when('/users','/users');\n  }\n})();\n/**\n * @author v.lugovsky\n * created on 16.12.2015\n */\n(function () {\n  'use strict';\n\n  angular.module('BlurAdmin.pages.categories', [\n    'BlurAdmin.pages.categories.meals',\n    'BlurAdmin.pages.categories.transports',\n    'BlurAdmin.pages.categories.visitors',\n    'BlurAdmin.pages.categories.organizations',\n    'BlurAdmin.pages.categories.tourtypes',\n    'BlurAdmin.pages.categories.locations',\n    'BlurAdmin.pages.categories.mealservicetypes',\n    'BlurAdmin.pages.categories.mealservicelocations',\n    // 'BlurAdmin.pages.categories.mealcategories',\n    'BlurAdmin.pages.categories.momentos'\n  ]).config(routeConfig);\n\n  /** @ngInject */\n  function routeConfig($stateProvider) {\n    $stateProvider\n        .state('categories', {\n          url: '/categories',\n          template : '<ui-view autoscroll=\"true\" autoscroll-body-top></ui-view>',\n          abstract: true,\n          title: 'Manage Values',\n          sidebarMeta: {\n            icon: 'ion-android-laptop',\n            order: 100,\n          },\n          data: {\n            mainmodule: 'categories',\n            childmodule: 'view'\n          }\n        }).state('mealsvalue', {\n          url: '/categories',\n          template : '<ui-view autoscroll=\"true\" autoscroll-body-top></ui-view>',\n          abstract: true,\n          title: 'Manage Meals',\n          sidebarMeta: {\n            icon: 'ion-android-laptop',\n            order: 99,\n          },\n          data: {\n            mainmodule: 'categories',\n            childmodule: 'view'\n          }\n        });\n    }\n})();\n/**\n * @author v.lugovsky\n * created on 16.12.2015\n */\n(function () {\n  'use strict';\n\n  angular.module('BlurAdmin.pages.contactmanagements', ['ui.select', 'ngSanitize'])\n      .config(routeConfig);\n\n  /** @ngInject */\n  function routeConfig($stateProvider, $urlRouterProvider) {\n    $stateProvider\n        .state('contactmanagements', {\n          url: '/contactmanagements',\n          template : '<ui-view  autoscroll=\"true\" autoscroll-body-top></ui-view>',\n          controller: 'ListContactmanagementsCtrl',\n          abstract: false,\n          title: 'Contacts',\n          sidebarMeta: {\n            icon: 'ion-person-stalker',\n            order: 3,\n          },\n          data: {\n            mainmodule: 'contactmanagements',\n            childmodule: 'view'\n          },\n        }).state('contactmanagements.list', {\n          url: '/list',\n          templateUrl: 'app/pages/contactmanagements/view.html',\n          title: 'Contacts',\n          controller: 'ListContactmanagementsCtrl',\n          sidebarMeta: {\n            order: 1,\n          },\n          data: {\n            mainmodule: 'contactmanagements',\n            childmodule: 'view'\n          },\n          resolve: {\n              havePermission : checkUserPermission('contactmanagements', 'view')\n          }\n        }).state('contactmanagements.add', {\n          url: '/add',\n          templateUrl: 'app/pages/contactmanagements/add.html',\n          title: 'Add Contact',\n          controller: 'AddContactmanagementsCtrl',\n          sidebarMeta: {\n            order: 2,\n          },\n          data: {\n            mainmodule: 'contactmanagements',\n            childmodule: 'create'\n          },\n          resolve: {\n              havePermission : checkUserPermission('contactmanagements', 'create')\n          }\n        }).state('contactmanagements.edit', {\n          url: '/edit/:id',\n          templateUrl: 'app/pages/contactmanagements/add.html',\n          title: 'Contacts',\n          controller: 'EditContactmanagementsCtrl',\n          data: {\n            mainmodule: 'contactmanagements',\n            childmodule: 'update'\n          },\n          resolve: {\n              havePermission : checkUserPermission('contactmanagements', 'update')\n          }\n      }).state('contactmanagements.viewdetails', {\n          url: '/view/:id',\n          templateUrl: 'app/pages/contactmanagements/viewdetails.html',\n          title: 'Contacts',\n          controller: 'ViewContactmanagementsCtrl',\n          data: {\n            mainmodule: 'contactmanagements',\n            childmodule: 'view'\n          },\n          resolve: {\n              havePermission : checkUserPermission('contactmanagements', 'view')\n          }\n      });\n    $urlRouterProvider.when('/users','/users');\n  }\n})();\n/**\n * @author v.lugovsky\n * created on 16.12.2015\n */\n(function () {\n  'use strict';\n\n  angular.module('BlurAdmin.pages.dashboard', [])\n      .config(routeConfig);\n\n  /** @ngInject */\n  function routeConfig($stateProvider) {\n    $stateProvider\n        .state('dashboard', {\n          url: '/dashboard',\n          templateUrl: 'app/pages/dashboard/dashboard.html',\n          title: 'Dashboard',\n          controller: 'DashboardCtrl',\n          sidebarMeta: {\n            icon: 'ion-android-home',\n            order: 0,\n          },\n          resolve: {\n              havePermission : checkUserPermission('dashboard', 'view')\n          }\n        });\n  }\n\n})();\n\n/**\n * @author v.lugovsky\n * created on 16.12.2015\n */\n(function () {\n  'use strict';\n\n  angular.module('BlurAdmin.pages.defaulttasks', ['ui.select', 'ngSanitize'])\n      .config(routeConfig);\n\n  /** @ngInject */\n  function routeConfig($stateProvider, $urlRouterProvider) {\n    $stateProvider\n        .state('defaulttasks', {\n          url: '/defaulttasks',\n          template : '<ui-view  autoscroll=\"true\" autoscroll-body-top></ui-view>',\n          controller: 'ListDefaulttasksCtrl',\n          abstract: false,\n          title: 'Default Tour Tasks',\n          sidebarMeta: {\n            icon: 'ion-person-stalker',\n            order: 10,\n          },\n        }).state('defaulttasks.list', {\n          url: '/list',\n          templateUrl: 'app/pages/defaulttasks/view.html',\n          title: 'Default Tour Tasks',\n          controller: 'ListDefaulttasksCtrl',\n          sidebarMeta: {\n            order: 500,\n          },\n          resolve: {\n              havePermission : checkUserPermission('defaulttasks', 'view')\n          }\n        }).state('defaulttasks.add', {\n          url: '/add',\n          templateUrl: 'app/pages/defaulttasks/add.html',\n          title: 'Default Tour Tasks',\n          controller: 'AddDefaulttasksCtrl',\n          resolve: {\n              havePermission : checkUserPermission('defaulttasks', 'create')\n          }\n        }).state('defaulttasks.edit', {\n          url: '/edit/:id',\n          templateUrl: 'app/pages/defaulttasks/add.html',\n          title: 'Default Tour Tasks',\n          controller: 'EditDefaulttasksCtrl',\n          resolve: {\n              havePermission : checkUserPermission('defaulttasks', 'update')\n          }\n      })/*.state('defaulttasks.viewdetails', {\n          url: '/view/:id',\n          templateUrl: 'app/pages/defaulttasks/viewdetails.html',\n          title: 'Default Tour Tasks',\n          controller: 'ViewDefaulttasksCtrl',\n          resolve: {\n              havePermission : checkUserPermission('defaulttasks', 'view')\n          }\n      })*/;\n    $urlRouterProvider.when('/defaulttasks','/defaulttasks');\n  }\n})();\n/**\n * @author v.lugovsky\n * created on 16.12.2015\n */\n(function () {\n  'use strict';\n\n  angular.module('BlurAdmin.pages.forgotpassword', [])\n      .config(routeConfig);\n\n  /** @ngInject */\n  function routeConfig($stateProvider) {\n    $stateProvider\n        .state('forgotpassword', {\n                url: '/forgot-password',\n                title: 'Forgot Password',\n                templateUrl: 'app/pages/forgotpassword/view.html',\n                controller: 'ForgotPasswordCtrl'\n            }).state({\n              name: 'reset-password',\n              url: '/password/reset/:token',\n              templateUrl: 'app/pages/forgotpassword/reset.html',\n              controller: 'ResetPasswordCtrl'\n          });\n  }\n})();\n/**\n * @author v.lugovsky\n * created on 16.12.2015\n */\n(function() {\n    'use strict';\n\n    angular.module('BlurAdmin.pages.login', [])\n        .config(routeConfig);\n\n\n    /** @ngInject */\n    function routeConfig($stateProvider) {\n        $stateProvider\n            .state('login', {\n                url: '/login',\n                title: 'Login',\n                templateUrl: 'app/pages/login/login.html',\n                controller: 'LoginPageCtrl'\n            });\n    }\n\n})();\n/**\n * @author v.lugovsky\n * created on 16.12.2015\n */\n(function () {\n  'use strict';\n\n  angular.module('BlurAdmin.pages.notifications', [])\n      .config(routeConfig);\n\n  /** @ngInject */\n  function routeConfig($stateProvider) {\n    $stateProvider\n        .state('notifications', {\n          url: '/notifications',\n          templateUrl: 'app/pages/notifications/view.html',\n          controller: 'NotificationsCtrl',\n          title: 'Notifications',\n          sidebarMeta: {\n            icon: 'fa fa-bell',\n            order: 498,\n          },\n          data: {\n            mainmodule: 'notifications',\n            childmodule: 'view'\n          },\n          resolve: {\n              havePermission : checkUserPermission('notifications', 'view')\n          }\n        });\n  }\n})();\n/**\n * @author v.lugovsky\n * created on 16.12.2015\n */\n(function () {\n  'use strict';\n\n  angular.module('BlurAdmin.pages.profile', [])\n      .config(routeConfig);\n\n  /** @ngInject */\n  function routeConfig($stateProvider) {\n    $stateProvider\n        .state('profile', {\n          url: '/profile',\n          title: 'Profile',\n          templateUrl: 'app/pages/profile/profile.html',\n          controller: 'ProfilePageCtrl',\n        });\n  }\n\n})();\n\n/**\n * @author v.lugovsky\n * created on 16.12.2015\n */\n(function () {\n  'use strict';\n\n  angular.module('BlurAdmin.pages.roles', [])\n      .config(routeConfig);\n\n  /** @ngInject */\n  function routeConfig($stateProvider, $urlRouterProvider) {\n    $stateProvider\n        .state('roles', {\n          url: '/roles',\n          template : '<ui-view  autoscroll=\"true\" autoscroll-body-top></ui-view>',\n          // templateUrl: 'app/pages/roles/view.html',\n          controller: 'RolesCtrl',\n          title: 'Roles',\n          abstract: false,\n          sidebarMeta: {\n            icon: 'fa fa-user-secret',\n            order: 1,\n          },\n          data: {\n            mainmodule: 'roles',\n            childmodule: 'view'\n          },\n          resolve: {\n              havePermission : checkUserPermission('roles', 'view')\n          }\n        })\n        .state('roles.list', {\n          url: '/list',\n          templateUrl: 'app/pages/roles/view.html',\n          title: 'Roles',\n          controller: 'RolesCtrl',\n          sidebarMeta: {\n            order: 1,\n          },\n          resolve: {\n              havePermission : checkUserPermission('roles', 'view')\n          }\n        })\n        .state('roles.add', {\n          url: '/add',\n          templateUrl: 'app/pages/roles/add.html',\n          title: 'Add Role',\n          controller: 'AddRolesCtrl',\n          sidebarMeta: {\n            order: 2,\n          },\n          resolve: {\n              havePermission : checkUserPermission('roles', 'create')\n          }\n        })\n        .state('roles.edit', {\n          url: '/edit/:id',\n          templateUrl: 'app/pages/roles/add.html',\n          title: 'Roles',\n          controller: 'EditRolesCtrl',\n          resolve: {\n              havePermission : checkUserPermission('roles', 'update')\n          }\n        });\n    $urlRouterProvider.when('/roles','/roles/add/id');\n  }\n})();\n/**\n * @author v.lugovsky\n * created on 16.12.2015\n */\n(function () {\n  'use strict';\n\n  angular.module('BlurAdmin.pages.settings', [])\n      .config(routeConfig);\n\n  /** @ngInject */\n  function routeConfig($stateProvider) {\n    $stateProvider\n        .state('settings', {\n          url: '/settings',\n          templateUrl: 'app/pages/settings/view.html',\n          controller: 'SettingsCtrl',\n          // abstract: true,\n          title: 'Settings',\n          sidebarMeta: {\n            icon: 'fa fa-cog',\n            order: 500,\n          },\n          data: {\n            mainmodule: 'global_settings',\n            childmodule: 'view'\n          },\n          resolve: {\n              havePermission : checkUserPermission('global_settings', 'view')\n          }\n        });\n  }\n})();\n/**urlRouterProvider\n * @author v.lugovsky\n * created on 16.12.2015\n */\n(function () {\n  'use strict';\n\n  angular.module('BlurAdmin.pages.tours', ['ui.select', 'ngSanitize'])\n      .config(routeConfig);\n\n  /** @ngInject */\n  function routeConfig($stateProvider, $urlRouterProvider) {\n    $stateProvider\n        .state('tours', {\n          url: '/tours',\n          template : '<ui-view  autoscroll=\"true\" autoscroll-body-top></ui-view>',\n          controller: 'ListToursCtrl',\n          abstract: false,\n          title: 'Tours',\n          sidebarMeta: {\n            icon: 'fa fa-bus',\n            order: 4,\n          },\n          data: {\n            mainmodule: 'tours',\n            childmodule: 'view'\n          },\n        }).state('tours.list', {\n          url: '/list?id=',\n          templateUrl: 'app/pages/tours/view.html',\n          title: 'Tours',\n          controller: 'ListToursCtrl',\n          sidebarMeta: {\n            order: 0,\n          },\n          data: {\n            mainmodule: 'tours',\n            childmodule: 'view'\n          },\n          resolve: {\n              havePermission : checkUserPermission('tours', 'view')\n          }\n        }).state('tours.add', {\n          url: '/add?date=',\n          templateUrl: 'app/pages/tours/add.html',\n          title: 'Add Tour',\n          controller: 'AddToursCtrl',\n          sidebarMeta: {\n            order: 1,\n          },\n          data: {\n            mainmodule: 'tours',\n            childmodule: 'create'\n          },\n          resolve: {\n              havePermission : checkUserPermission('tours', 'create')\n          }\n        }).state('tours.edit', {\n          url: '/edit/:id',\n          templateUrl: 'app/pages/tours/add.html',\n          title: 'Tours',\n          controller: 'EditToursCtrl',\n          data: {\n            mainmodule: 'tours',\n            childmodule: 'update'\n          },\n          resolve: {\n              havePermission : checkUserPermission('tours', 'update')\n          }\n      }).state('tours.viewdetails', {\n          url: '/view/:id',\n          templateUrl: 'app/pages/tours/viewdetails.html',\n          title: 'Tour',\n          controller: 'ViewToursCtrl',\n          data: {\n            mainmodule: 'tours',\n            childmodule: 'view'\n          },\n          resolve: {\n              havePermission : checkUserPermission('tours', 'view')\n          }\n      })\n      .state('tours.acknowledgedetails', {\n          url: '/acknowledge/:id',\n          templateUrl: 'app/pages/tours/acknowledge.html',\n          title: 'Tours',\n          controller: 'AcknowledgeCtrl'\n      })\n      .state('tours.feedback', {\n          url: '/feedback/:id',\n          templateUrl: 'app/pages/tours/feedback.html',\n          title: 'Tours',\n          controller: 'FeedbackCtrl'\n      });\n    $urlRouterProvider.when('/tours','/tours');\n  }\n})();\n/**\n * @author v.lugovsky\n * created on 16.12.2015\n */\n(function () {\n  'use strict';\n\n  angular.module('BlurAdmin.pages.useravailabilities', [])\n      .config(routeConfig);\n\n  /** @ngInject */\n  function routeConfig($stateProvider) {\n    $stateProvider\n        .state('availability', {\n          url: '/availability',\n          templateUrl: 'app/pages/useravailabilities/view.html',\n          controller: 'AvailabilitiesCtrl',\n          title: 'Availabilities',\n          sidebarMeta: {\n            icon: 'fa fa-cog',\n            order: 499,\n          },\n          data: {\n            mainmodule: 'availabilities',\n            childmodule: 'view'\n          },\n          resolve: {\n              havePermission : checkUserPermission('availabilities', 'view')\n          }\n        });\n  }\n})();\n/**\n * @author v.lugovsky\n * created on 16.12.2015\n */\n(function () {\n  'use strict';\n\n  angular.module('BlurAdmin.pages.users', ['ui.select', 'ngSanitize'])\n      .config(routeConfig);\n  /** @ngInject */\n  function routeConfig($stateProvider, $urlRouterProvider) {\n\n    $stateProvider\n        .state('users', {\n          url: '/users',\n          template : '<ui-view  autoscroll=\"true\" autoscroll-body-top></ui-view>',\n          controller: 'UsersCtrl',\n          abstract: false,\n          title: 'Users',\n          data: {\n            mainmodule: 'users',\n            childmodule: 'view'\n          },\n          sidebarMeta: {\n            icon: 'ion-person-stalker',\n            order: 2,\n          }          \n        }).state('users.list', {\n          url: '/list',\n          templateUrl: 'app/pages/users/view.html',\n          title: 'Users',\n          controller: 'UsersCtrl',\n          sidebarMeta: {\n            order: 1,\n          },\n          resolve: {\n              havePermission : checkUserPermission('users', 'view')\n          }\n        }).state('users.add', {\n          url: '/add',\n          templateUrl: 'app/pages/users/add.html',\n          title: 'Add User',\n          controller: 'AddUsersCtrl',\n          sidebarMeta: {\n            order: 2,\n          },\n          resolve: {\n              havePermission : checkUserPermission('users', 'create')\n          }\n        }).state('users.edit', {\n          url: '/edit/:id',\n          templateUrl: 'app/pages/users/add.html',\n          title: 'User',\n          controller: 'EditUsersCtrl',\n          resolve: {\n              havePermission : checkUserPermission('users', 'update')\n          }\n        }).state('users.viewdetails', {\n          url: '/view/:id',\n          templateUrl: 'app/pages/users/viewdetails.html',\n          title: 'User',\n          controller: 'ViewUsersCtrl',\n          resolve: {\n              havePermission : checkUserPermission('users', 'view')\n          }\n        }).state('users.edit-profile', {\n          url: '/editprofile',\n          templateUrl: 'app/pages/users/editprofile.html',\n          title: 'Profile',\n          controller: 'editProfileCtrl',\n          data: {\n            mainmodule: 'users',\n            childmodule: 'editprofile'\n          },\n          resolve: {\n              havePermission : checkUserPermission('users', 'editprofile')\n          }\n        });\n    $urlRouterProvider.when('/users','/users');\n  }\n})();\n/**\n * @author v.lugovksy\n * created on 16.12.2015\n */\n/**\n * @author v.lugovsky\n * created on 16.12.2015\n */\n(function () {\n  'use strict';\n\n  angular.module('BlurAdmin.theme.components', []);\n\n})();\n\n/**\n * @author v.lugovsky\n * created on 10.12.2016\n */\n(function () {\n  'use strict';\n\n  angular.module('BlurAdmin.theme.inputs', []);\n\n})();\n\n/**\n * @author v.lugovsky\n * created on 16.12.2015\n */\n(function () {\n  'use strict';\n\n  angular.module('BlurAdmin.pages.categories.locations', [])\n      .config(routeConfig);\n\n  /** @ngInject */\n  function routeConfig($stateProvider, $urlRouterProvider) {\n    $stateProvider\n        .state('categories.locations', {\n          url: '/locations',\n          template : '<ui-view  autoscroll=\"true\" autoscroll-body-top></ui-view>',\n          abstract: true,\n          controller: 'ListLocationsCtrl',\n          title: 'Info Session',\n          sidebarMeta: {\n            order: 4,\n          },\n          data: {\n            mainmodule: 'locations',\n            childmodule: 'view'\n          },\n        }).state('categories.locations.list', {\n          url: '/list',\n          templateUrl: 'app/pages/categories/locations/view.html',\n          title: 'Info Session',\n          controller: 'ListLocationsCtrl',\n          sidebarMeta: {\n            order: 500,\n          },\n          resolve: {\n              havePermission : checkUserPermission('locations', 'view')\n          }\n        }).state('categories.locations.add', {\n          url: '/add',\n          templateUrl: 'app/pages/categories/locations/add.html',\n          title: 'Info Session',\n          controller: 'AddLocationsCtrl',\n          sidebarMeta: {\n            order: 500,\n          },\n          resolve: {\n              havePermission : checkUserPermission('locations', 'create')\n          }\n        }).state('categories.locations.edit', {\n          url: '/edit/:id',\n          templateUrl: 'app/pages/categories/locations/add.html',\n          title: 'Info Session',\n          controller: 'EditLocationsCtrl',\n          sidebarMeta: {\n            order: 500,\n          },\n          resolve: {\n              havePermission : checkUserPermission('locations', 'update')\n          }\n        });\n    $urlRouterProvider.when('/categories/locations','/categories/locations/list');\n  }\n})();\n/**\n * @author v.lugovsky\n * created on 16.12.2015\n */\n(function () {\n  'use strict';\n\n  angular.module('BlurAdmin.pages.categories.mealcategories', [])\n      .config(routeConfig);\n\n  /** @ngInject */\n  function routeConfig($stateProvider, $urlRouterProvider) {\n    $stateProvider\n        .state('mealsvalue.mealcategories', {\n          url: '/mealcategories',\n          template : '<ui-view  autoscroll=\"true\" autoscroll-body-top></ui-view>',\n          abstract: true,\n          controller: 'ListMealcategoriesCtrl',\n          title: 'Categories',\n          sidebarMeta: {\n            order: 9,\n          },\n          data: {\n            mainmodule: 'mealcategories',\n            childmodule: 'view'\n          },\n        }).state('mealsvalue.mealcategories.list', {\n          url: '/list',\n          templateUrl: 'app/pages/categories/mealcategories/view.html',\n          title: 'Categories',\n          controller: 'ListMealcategoriesCtrl',\n          sidebarMeta: {\n            order: 1,\n          },\n          resolve: {\n              havePermission : checkUserPermission('mealcategories', 'view')\n          }\n        }).state('mealsvalue.mealcategories.add', {\n          url: '/add',\n          templateUrl: 'app/pages/categories/mealcategories/add.html',\n          title: 'Category',\n          controller: 'AddMealcategoriesCtrl',\n          sidebarMeta: {\n            order: 2,\n          },\n          resolve: {\n              havePermission : checkUserPermission('mealcategories', 'create')\n          }\n        }).state('mealsvalue.mealcategories.edit', {\n          url: '/edit/:id',\n          templateUrl: 'app/pages/categories/mealcategories/add.html',\n          title: 'Category',\n          controller: 'EditMealcategoriesCtrl',\n          sidebarMeta: {\n            order: 3,\n          },\n          resolve: {\n              havePermission : checkUserPermission('mealcategories', 'update')\n          }\n        });\n    $urlRouterProvider.when('/categories/mealcategories','/categories/mealcategories/list');\n  }\n})();\n/**\n * @author v.lugovsky\n * created on 16.12.2015\n */\n(function () {\n  'use strict';\n\n  angular.module('BlurAdmin.pages.categories.meals', [])\n      .config(routeConfig);\n\n  /** @ngInject */\n  function routeConfig($stateProvider, $urlRouterProvider) {\n    $stateProvider\n        .state('mealsvalue.meals', {\n          url: '/meals',\n          template : '<ui-view  autoscroll=\"true\" autoscroll-body-top></ui-view>',\n          abstract: true,\n          controller: 'ListMealsCtrl',\n          title: 'Meals',\n          sidebarMeta: {\n            order: 6,\n          },\n          data: {\n            mainmodule: 'meals',\n            childmodule: 'view'\n          },\n        }).state('mealsvalue.meals.list', {\n          url: '/list',\n          templateUrl: 'app/pages/categories/meals/view.html',\n          title: 'Meals',\n          controller: 'ListMealsCtrl',\n          sidebarMeta: {\n            order: 500,\n          },\n          resolve: {\n              havePermission : checkUserPermission('meals', 'view')\n          }\n        }).state('mealsvalue.meals.add', {\n          url: '/add',\n          templateUrl: 'app/pages/categories/meals/add.html',\n          title: 'Meals',\n          controller: 'AddMealsCtrl',\n          sidebarMeta: {\n            order: 500,\n          },\n          resolve: {\n              havePermission : checkUserPermission('meals', 'create')\n          }\n        }).state('mealsvalue.meals.edit', {\n          url: '/edit/:id',\n          templateUrl: 'app/pages/categories/meals/add.html',\n          title: 'Meals',\n          controller: 'EditMealsCtrl',\n          sidebarMeta: {\n            order: 500,\n          },\n          resolve: {\n              havePermission : checkUserPermission('meals', 'update')\n          }\n        });\n    $urlRouterProvider.when('/categories/meals','/categories/meals/list');\n  }\n})();\n/**\n * @author v.lugovsky\n * created on 16.12.2015\n */\n(function () {\n  'use strict';\n\n  angular.module('BlurAdmin.pages.categories.mealservicelocations', [])\n      .config(routeConfig);\n\n  /** @ngInject */\n  function routeConfig($stateProvider, $urlRouterProvider) {\n    $stateProvider\n        .state('mealsvalue.mealservicelocations', {\n          url: '/mealservicelocations',\n          template : '<ui-view  autoscroll=\"true\" autoscroll-body-top></ui-view>',\n          abstract: true,\n          controller: 'ListMealservicelocationsCtrl',\n          title: 'Service Locations',\n          sidebarMeta: {\n            order: 7,\n          },\n          data: {\n            mainmodule: 'mealservicelocations',\n            childmodule: 'view'\n          },\n        }).state('mealsvalue.mealservicelocations.list', {\n          url: '/list',\n          templateUrl: 'app/pages/categories/mealservicelocations/view.html',\n          title: 'Service Locations',\n          controller: 'ListMealservicelocationsCtrl',\n          sidebarMeta: {\n            order: 1,\n          },\n          resolve: {\n              havePermission : checkUserPermission('mealservicelocations', 'view')\n          }\n        }).state('mealsvalue.mealservicelocations.add', {\n          url: '/add',\n          templateUrl: 'app/pages/categories/mealservicelocations/add.html',\n          title: 'Service Location',\n          controller: 'AddMealservicelocationsCtrl',\n          sidebarMeta: {\n            order: 2,\n          },\n          resolve: {\n              havePermission : checkUserPermission('mealservicelocations', 'create')\n          }\n        }).state('mealsvalue.mealservicelocations.edit', {\n          url: '/edit/:id',\n          templateUrl: 'app/pages/categories/mealservicelocations/add.html',\n          title: 'Service Location',\n          controller: 'EditMealservicelocationsCtrl',\n          sidebarMeta: {\n            order: 3,\n          },\n          resolve: {\n              havePermission : checkUserPermission('mealservicelocations', 'update')\n          }\n        });\n    $urlRouterProvider.when('/categories/mealservicelocations','/categories/mealservicelocations/list');\n  }\n})();\n/**\n * @author v.lugovsky\n * created on 16.12.2015\n */\n(function () {\n  'use strict';\n\n  angular.module('BlurAdmin.pages.categories.mealservicetypes', [])\n      .config(routeConfig);\n\n  /** @ngInject */\n  function routeConfig($stateProvider, $urlRouterProvider) {\n    $stateProvider\n        .state('mealsvalue.mealservicetypes', {\n          url: '/mealservicetypes',\n          template : '<ui-view  autoscroll=\"true\" autoscroll-body-top></ui-view>',\n          abstract: true,\n          controller: 'ListMealservicetypesCtrl',\n          title: 'Service Types',\n          sidebarMeta: {\n            order: 8,\n          },\n          data: {\n            mainmodule: 'mealservicetypes',\n            childmodule: 'view'\n          },\n        }).state('mealsvalue.mealservicetypes.list', {\n          url: '/list',\n          templateUrl: 'app/pages/categories/mealservicetypes/view.html',\n          title: 'Service Types',\n          controller: 'ListMealservicetypesCtrl',\n          sidebarMeta: {\n            order: 1,\n          },\n          resolve: {\n              havePermission : checkUserPermission('mealservicetypes', 'view')\n          }\n        }).state('mealsvalue.mealservicetypes.add', {\n          url: '/add',\n          templateUrl: 'app/pages/categories/mealservicetypes/add.html',\n          title: 'Service Type',\n          controller: 'AddMealservicetypesCtrl',\n          sidebarMeta: {\n            order: 2,\n          },\n          resolve: {\n              havePermission : checkUserPermission('mealservicetypes', 'create')\n          }\n        }).state('mealsvalue.mealservicetypes.edit', {\n          url: '/edit/:id',\n          templateUrl: 'app/pages/categories/mealservicetypes/add.html',\n          title: 'Service Type',\n          controller: 'EditMealservicetypesCtrl',\n          sidebarMeta: {\n            order: 3,\n          },\n          resolve: {\n              havePermission : checkUserPermission('mealservicetypes', 'update')\n          }\n        });\n    $urlRouterProvider.when('/categories/mealservicetypes','/categories/mealservicetypes/list');\n  }\n})();\n/**\n * @author v.lugovsky\n * created on 16.12.2015\n */\n(function () {\n  'use strict';\n\n  angular.module('BlurAdmin.pages.categories.momentos', [])\n      .config(routeConfig);\n\n  /** @ngInject */\n  function routeConfig($stateProvider, $urlRouterProvider) {\n    $stateProvider\n        .state('categories.momentos', {\n          url: '/momentos',\n          template : '<ui-view  autoscroll=\"true\" autoscroll-body-top></ui-view>',\n          abstract: true,\n          controller: 'ListMomentosCtrl',\n          title: 'Momentos',\n          sidebarMeta: {\n            order: 6,\n          },\n          data: {\n            mainmodule: 'momentos',\n            childmodule: 'view'\n          },\n        }).state('categories.momentos.list', {\n          url: '/list',\n          templateUrl: 'app/pages/categories/momentos/view.html',\n          title: 'Momentos',\n          controller: 'ListMomentosCtrl',\n          sidebarMeta: {\n            order: 500,\n          },\n          resolve: {\n              havePermission : checkUserPermission('momentos', 'view')\n          }\n        }).state('categories.momentos.add', {\n          url: '/add',\n          templateUrl: 'app/pages/categories/momentos/add.html',\n          title: 'Momento',\n          controller: 'AddMomentosCtrl',\n          sidebarMeta: {\n            order: 500,\n          },\n          resolve: {\n              havePermission : checkUserPermission('momentos', 'create')\n          }\n        }).state('categories.momentos.edit', {\n          url: '/edit/:id',\n          templateUrl: 'app/pages/categories/momentos/add.html',\n          title: 'Momento',\n          controller: 'EditMomentosCtrl',\n          sidebarMeta: {\n            order: 500,\n          },\n          resolve: {\n              havePermission : checkUserPermission('momentos', 'update')\n          }\n        });\n    $urlRouterProvider.when('/categories/momentos','/categories/momentos/list');\n  }\n})();\n/**\n * @author v.lugovsky\n * created on 16.12.2015\n */\n(function () {\n  'use strict';\n\n  angular.module('BlurAdmin.pages.categories.organizations', [])\n      .config(routeConfig);\n\n  /** @ngInject */\n  function routeConfig($stateProvider, $urlRouterProvider) {\n    $stateProvider\n        .state('categories.organizations', {\n          url: '/organizations',\n          template : '<ui-view  autoscroll=\"true\" autoscroll-body-top></ui-view>',\n          abstract: true,\n          controller: 'ListOrganizationsCtrl',\n          title: 'Organization Types',\n          sidebarMeta: {\n            order: 2,\n          },\n          data: {\n            mainmodule: 'organizations',\n            childmodule: 'view'\n          },\n        }).state('categories.organizations.list', {\n          url: '/list',\n          templateUrl: 'app/pages/categories/organizations/view.html',\n          title: 'Organization Types',\n          controller: 'ListOrganizationsCtrl',\n          sidebarMeta: {\n            order: 500,\n          },\n          resolve: {\n              havePermission : checkUserPermission('organizations', 'view')\n          }\n        }).state('categories.organizations.add', {\n          url: '/add',\n          templateUrl: 'app/pages/categories/organizations/add.html',\n          title: 'Organization Types',\n          controller: 'AddOrganizationsCtrl',\n          sidebarMeta: {\n            order: 500,\n          },\n          resolve: {\n              havePermission : checkUserPermission('organizations', 'create')\n          }\n        }).state('categories.organizations.edit', {\n          url: '/edit/:id',\n          templateUrl: 'app/pages/categories/organizations/add.html',\n          title: 'Organization Types',\n          controller: 'EditOrganizationsCtrl',\n          sidebarMeta: {\n            order: 500,\n          },\n          resolve: {\n              havePermission : checkUserPermission('organizations', 'update')\n          }\n        });\n    $urlRouterProvider.when('/categories/organizations','/categories/organizations/list');\n  }\n})();\n/**\n * @author v.lugovsky\n * created on 16.12.2015\n */\n(function () {\n  'use strict';\n\n  angular.module('BlurAdmin.pages.categories.tourtypes', [])\n      .config(routeConfig);\n\n  /** @ngInject */\n  function routeConfig($stateProvider, $urlRouterProvider) {\n    $stateProvider\n        .state('categories.tourtypes', {\n          url: '/tourtypes',\n          template : '<ui-view  autoscroll=\"true\" autoscroll-body-top></ui-view>',\n          abstract: true,\n          controller: 'ListTourtypesCtrl',\n          title: 'Tour Types',\n          sidebarMeta: {\n            order: 3,\n          },\n          data: {\n            mainmodule: 'tourtypes',\n            childmodule: 'view'\n          },\n        }).state('categories.tourtypes.list', {\n          url: '/list',\n          templateUrl: 'app/pages/categories/tourtypes/view.html',\n          title: 'Tour Types',\n          controller: 'ListTourtypesCtrl',\n          sidebarMeta: {\n            order: 500,\n          },\n          resolve: {\n              havePermission : checkUserPermission('tourtypes', 'view')\n          }\n        }).state('categories.tourtypes.add', {\n          url: '/add',\n          templateUrl: 'app/pages/categories/tourtypes/add.html',\n          title: 'Tour Types',\n          controller: 'AddTourtypesCtrl',\n          sidebarMeta: {\n            order: 500,\n          },\n          resolve: {\n              havePermission : checkUserPermission('tourtypes', 'create')\n          }\n        }).state('categories.tourtypes.edit', {\n          url: '/edit/:id',\n          templateUrl: 'app/pages/categories/tourtypes/add.html',\n          title: 'Tour Types',\n          controller: 'EditTourtypesCtrl',\n          sidebarMeta: {\n            order: 500,\n          },\n          resolve: {\n              havePermission : checkUserPermission('tourtypes', 'update')\n          }\n        }).state('categories.tourtypes.view', {\n          url: '/view/:id',\n          templateUrl: 'app/pages/categories/tourtypes/taskdetails.html',\n          title: 'Default Tour Task',\n          controller: 'ViewTourtypesCtrl',\n          sidebarMeta: {\n            order: 500,\n          },\n          resolve: {\n              havePermission : checkUserPermission('tourtypes', 'update')\n          }\n        });\n    $urlRouterProvider.when('/categories/tourtypes','/categories/tourtypes/list');\n  }\n})();\n/**\n * @author v.lugovsky\n * created on 16.12.2015\n */\n(function () {\n  'use strict';\n\n  angular.module('BlurAdmin.pages.categories.transports', [])\n      .config(routeConfig);\n\n  /** @ngInject */\n  function routeConfig($stateProvider, $urlRouterProvider) {\n    $stateProvider\n        .state('categories.transports', {\n          url: '/transports',\n          template : '<ui-view  autoscroll=\"true\" autoscroll-body-top></ui-view>',\n          abstract: true,\n          controller: 'ListTransportsCtrl',\n          title: 'Transports',\n          sidebarMeta: {\n            order: 1,\n          },\n          data: {\n            mainmodule: 'transports',\n            childmodule: 'view'\n          },\n        }).state('categories.transports.list', {\n          url: '/list',\n          templateUrl: 'app/pages/categories/transports/view.html',\n          title: 'Transports',\n          controller: 'ListTransportsCtrl',\n          sidebarMeta: {\n            order: 500,\n          },\n          resolve: {\n              havePermission : checkUserPermission('transports', 'view')\n          }\n        }).state('categories.transports.add', {\n          url: '/add',\n          templateUrl: 'app/pages/categories/transports/add.html',\n          title: 'Transports',\n          controller: 'AddTransportsCtrl',\n          sidebarMeta: {\n            order: 500,\n          },\n          resolve: {\n              havePermission : checkUserPermission('transports', 'create')\n          }\n        }).state('categories.transports.edit', {\n          url: '/edit/:id',\n          templateUrl: 'app/pages/categories/transports/add.html',\n          title: 'Transports',\n          controller: 'EditTransportsCtrl',\n          sidebarMeta: {\n            order: 500,\n          },\n          resolve: {\n              havePermission : checkUserPermission('transports', 'update')\n          }\n        });\n    $urlRouterProvider.when('/categories/transports','/categories/transports/list');\n  }\n})();\n/**\n * @author v.lugovsky\n * created on 16.12.2015\n */\n(function () {\n  'use strict';\n\n  angular.module('BlurAdmin.pages.categories.visitors', [])\n      .config(routeConfig);\n\n  /** @ngInject */\n  function routeConfig($stateProvider, $urlRouterProvider) {\n    $stateProvider\n        .state('categories.visitors', {\n          url: '/visitors',\n          template : '<ui-view  autoscroll=\"true\" autoscroll-body-top></ui-view>',\n          abstract: true,\n          controller: 'ListVisitorsCtrl',\n          title: 'Visitor Types',\n          sidebarMeta: {\n            order: 5,\n          },\n          data: {\n            mainmodule: 'visitors',\n            childmodule: 'view'\n          },\n        }).state('categories.visitors.list', {\n          url: '/list',\n          templateUrl: 'app/pages/categories/visitors/view.html',\n          title: 'Visitor Types',\n          controller: 'ListVisitorsCtrl',\n          sidebarMeta: {\n            order: 500,\n          },\n          resolve: {\n              havePermission : checkUserPermission('visitors', 'view')\n          }\n        }).state('categories.visitors.add', {\n          url: '/add',\n          templateUrl: 'app/pages/categories/visitors/add.html',\n          title: 'Visitor Types',\n          controller: 'AddVisitorsCtrl',\n          sidebarMeta: {\n            order: 500,\n          },\n          resolve: {\n              havePermission : checkUserPermission('visitors', 'create')\n          }\n        }).state('categories.visitors.edit', {\n          url: '/edit/:id',\n          templateUrl: 'app/pages/categories/visitors/add.html',\n          title: 'Visitor Types',\n          controller: 'EditVisitorsCtrl',\n          sidebarMeta: {\n            order: 500,\n          },\n          resolve: {\n              havePermission : checkUserPermission('visitors', 'update')\n          }\n        });\n    $urlRouterProvider.when('/categories/visitors','/categories/visitors/list');\n  }\n})();\n'use strict';\n\nvar App = angular.module('BlurAdmin', [\n    'ngAnimate',\n    'ui.bootstrap',\n    'ui.utils',\n    'ui.sortable',\n    'ui.router',\n    'ngRoute',\n    'ngTouch',\n    'toastr',\n    'smart-table',\n    \"xeditable\",\n    'ui.slimscroll',\n    'ngJsTree',\n    'angular-progress-button-styles',\n    'datatables', 'datatables.light-columnfilter',\n    'validation', 'validation.rule',\n    'ui-notification',\n    'ngCookies',\n    'ivh.treeview',\n    'ngDialog',\n    'moment-picker', 'angularMoment',\n    'ngFileUpload',\n    'angucomplete-alt',\n    'localytics.directives',\n    'cc.autorefresh',\n    'jkAngularRatingStars',\n\n    'BlurAdmin.theme',\n    'BlurAdmin.pages'\n]).filter('fromNow', function() {\n    return function(date) {\n        return moment(date).fromNow();\n    }\n});\n\nvar route_url = \"\";\nvar apiRoutUrl = \"\";\nvar site = 'localhost';\nif (document.location.hostname == \"localhost\") {\n    route_url = document.location.origin;\n    apiRoutUrl = 'http://localhost/';\n    var logoURL = apiRoutUrl + 'TourManagement/public/src/assets/img/newlogo.png'\n    site = 'localhost';\n} else if (document.location.hostname == \"devgulp.managevisit.com\") {\n    route_url = document.location.origin;\n    apiRoutUrl = 'https://devgulp.managevisit.com/';\n    var logoURL = apiRoutUrl + 'public/assets/img/newlogo.png'\n    site = 'devgulp.managevisit.com';\n} /*  else {\n    route_url = document.location.origin + \"/rajan\";\n    apiRoutUrl = 'http://180.211.99.165:8080/rajan/';\n    var logoURL = apiRoutUrl + 'TourManagement/public/assets/img/newlogo.png'\n    site = '180';    \n}\n*/\n\nApp.value('base_url', route_url + \"/\");\n\nvar config = {};\nif (document.location.hostname == \"devgulp.managevisit.com\") {\n    config.profile_url = apiRoutUrl + \"upload/profile/\";\n    config.api_url = apiRoutUrl + \"index.php/api/\";\n}\nelse {\n    config.profile_url = apiRoutUrl + \"TourManagement/public/upload/profile/\";\n    config.api_url = apiRoutUrl + \"TourManagement/public/index.php/api/\";\n}\n\nApp.constant('$config', config);\n\nvar checkLogin = function() {\n    return ['$rootScope', '$q', '$cookies', '$state', 'AuthenticationFactory', function($rootScope, $q, $cookies, $state, AuthenticationFactory) {\n        var deferred = $q.defer();\n        setTimeout(function() {\n            var token = $cookies.get(\"token\");\n            if (token) {\n                if (typeof $rootScope.auth_user == \"undefined\") {\n                    AuthenticationFactory.checkLogin().success(function(response) {\n                        $rootScope.auth_user = response;\n                        deferred.reject({ goto: 'root' });\n                    });\n                } else {\n                    deferred.reject({ goto: 'root' });\n                }\n            } else {\n                deferred.resolve();\n            }\n        }, 100);\n        return deferred.promise;\n    }]\n}\n\nvar checkUserPermission = function(permissionModule, permission) {\n    return ['$rootScope', '$q', '$cookies', '$state', 'AuthenticationFactory', 'Notification', function($rootScope, $q, $cookies, $state, AuthenticationFactory, Notification) {\n        var deferred = $q.defer();\n        setTimeout(function() {\n            var token = $cookies.get(\"token\");\n            if (token) {\n                if (Object.keys($rootScope.permissions || {}).length) {\n                    var access = $rootScope.havePermission(permissionModule, permission);\n                    if (!access) {\n                        deferred.reject();\n                        Notification.error($rootScope.nothavepermission);\n                        //  $state.go('dashboard');\n                    } else {\n                        deferred.resolve();\n                    }\n                } else {\n                    AuthenticationFactory.checkPermission(permission + \".\" + permissionModule).success(function(response) {\n                        $rootScope.permissions = response.permissions;\n                        $rootScope.role = response.role;\n                        $rootScope.nothavepermission = response.message;\n\n                        if (!response.has_permission) {\n                            Notification.error(response.message);\n                            $state.go('dashboard');\n                            deferred.reject();\n                        } else {\n                            deferred.resolve();\n                        }\n                    }).error(function(error) {\n                        Notification.error(error.error);\n                        deferred.reject();\n                        $rootScope.logout();\n                    });\n                }\n            } else {\n                deferred.reject();\n                $cookies.remove('authUser');\n                $cookies.remove('token');\n                $state.go(\"login\");\n            }\n        }, 100);\n        return deferred.promise;\n    }];\n};\n\nApp.config([\n    '$stateProvider',\n    '$urlRouterProvider',\n    '$httpProvider',\n    'ivhTreeviewOptionsProvider',\n    '$validationProvider',\n    '$locationProvider',\n    'chosenProvider',\n    '$sceDelegateProvider',\n    function($stateProvider,\n        $urlRouterProvider,\n        $httpProvider,\n        ivhTreeviewOptionsProvider,\n        $validationProvider,\n        $locationProvider,\n        chosenProvider,\n        $sceDelegateProvider) {\n\n        $httpProvider.defaults.useXDomain = true;\n        delete $httpProvider.defaults.headers.common['X-Requested-With'];\n        $httpProvider.defaults.headers.common['Content-Type'] = 'application/json';\n        $httpProvider.defaults.withCredentials = false;\n        $httpProvider.interceptors.push('authInterceptor');\n\n        // $httpProvider.defaults.headers.common = {};\n        // $httpProvider.defaults.headers.post = {};\n        // $httpProvider.defaults.headers.put = {};\n        // $httpProvider.defaults.headers.patch = {};\n\n        $sceDelegateProvider.resourceUrlWhitelist(['self', /^http?:\\/\\/(localhost:3000\\.)?/]);\n\n        ivhTreeviewOptionsProvider.set({\n            idAttribute: 'value',\n            labelAttribute: 'description',\n            childrenAttribute: 'childern',\n            selectedAttribute: 'selected',\n            useCheckboxes: true\n        });\n\n        $validationProvider.setErrorHTML(function(msg) {\n            return \"<label style='color:red;' class=\\\"colorred control-label has-error\\\">\" + msg + \"</label>\";\n        });\n        $validationProvider.showSuccessMessage = false; // or true(default)\n\n        /*angular.extend($validationProvider, {\n            validCallback: function(element) {\n                $(element).parents('.form-group:first').removeClass('has-error');\n            },\n            invalidCallback: function(element) {\n                $(element).parents('.form-group:first').addClass('has-error');\n            },\n            resetCallback: function(element) {\n                $(element).parents('.form-group:first').removeClass('has-error');\n            }\n        });*/\n\n        chosenProvider.setOption({\n            scroll_to_highlighted: false\n        });\n    }\n]);\n\nApp.run(function(editableOptions) {\n    editableOptions.theme = 'bs3'; // bootstrap3 theme. Can be also 'bs2', 'default'\n    editableOptions.submitButtonTitle = 'Submit';\n    editableOptions.submitButtonAriaLabel = 'Submit';\n    editableOptions.cancelButtonTitle = 'Cancel';\n    editableOptions.cancelButtonAriaLabel = 'Cancel';\n    editableOptions.clearButtonTitle = 'Clear';\n    editableOptions.clearButtonAriaLabel = 'Clear';\n});\n\nApp.controller('rootCtrl', [\n    '$rootScope',\n    '$scope',\n    '$http',\n    '$state',\n    '$cookies',\n    'AuthenticationFactory',\n    'Notification',\n    '$config',\n    '$location',\n    '$timeout',\n    '$injector',\n    '$sce',\n    '$window',\n    'NotificationsFactory',\n    function(\n        $rootScope,\n        $scope,\n        $http,\n        $state,\n        $cookies,\n        AuthenticationFactory,\n        Notification,\n        $config,\n        $location,\n        $timeout,\n        $injector,\n        $sce,\n        $window,\n        NotificationsFactory\n    ) {\n        $rootScope.state = $state;\n        $rootScope.logoImage = 'assets/img/newlogo.png';\n\n        // Set the notification message string limit \n        $rootScope.notification_msg_string_limit = 30;\n\n        $rootScope.$on('$stateChangeSuccess', function(event, toState, toParams, fromState, fromParams) {\n            $(\"html, body\").animate({\n                scrollTop: 0\n            }, 700);\n            \n            $rootScope.curState = toState;\n            if ($rootScope.state.current.name != \"login\" && $cookies.get('authUser')) {\n                $rootScope.auth_user = JSON.parse($cookies.get('authUser'));\n\n                if (!$rootScope.auth_user.mobile) {\n                    $state.go(\"users.edit-profile\");\n                }\n\n                // Set Profile image\n                if ($rootScope.auth_user.image) {\n                    $rootScope.profilePicture = $config.profile_url + $rootScope.auth_user.id + '/' + $rootScope.auth_user.image;\n                } else {\n                    $rootScope.profilePicture = $config.profile_url + '/noImage.png';\n                }\n            }\n        });\n\n        $rootScope.$on('$stateChangeError', function(event, toState, toParams, fromState, fromParams, error) {\n            if (error && error.goto) {\n                $state.go(error.goto, error.params || {});\n            }\n        });\n\n        $rootScope.permissions = {};\n\n        $scope.toTrustedHTML1 = function(html) {\n            return $sce.trustAsHtml(html);\n        };\n\n        $rootScope.havePermission = function(permissionModule, permission) {\n            var access = (Object.keys($rootScope.permissions || {}).indexOf(permissionModule) !== -1) && $rootScope.permissions[permissionModule][permission];\n            return access;\n        };\n\n\n        $rootScope.hasRole = function(role) {\n            return (Object.values($rootScope.role || {}).indexOf(role) !== -1);\n        };\n\n        $rootScope.makeid = function(value) {\n            var text = \"\";\n            var possible = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz_0123456789!@#$\";\n\n            for (var i = 0; i < value; i++)\n                text += possible.charAt(Math.floor(Math.random() * possible.length));\n\n            return text;\n        };\n\n        // Call from index.html in head tag in init mode while loading the app.\n        // $rootScope.checkForValidCompany = function() {\n        //     var company_name = $location.path().split(\"/\")[1];\n\n        //     if (company_name) {\n        //         $cookies.put('company_slug', company_name);\n        //     }\n        //     if ($rootScope.state.current.name != \"login\" && $cookies.get('authUser')) {\n        //         $rootScope.auth_user = JSON.parse($cookies.get('authUser'));\n        //         if (company_name !== '' && company_name !== $rootScope.auth_user.company_slug) {\n        //             $rootScope.logout();\n        //             //$location.path($rootScope.auth_user.company_slug).replace();\n        //         }\n        //     }\n        // };\n\n        var $validationProvider = $injector.get('$validation');\n        $scope.checkManualValidation = function(form, name) {\n            $validationProvider.validate(form[name]);\n        }\n\n        $rootScope.appName = \"Tour Management\";\n        $rootScope.logout = function() {\n            var data = {\n                \"token\": $cookies.get('token')\n            };\n\n            AuthenticationFactory.logout(data).success(function(res) {\n                $cookies.remove('token');\n                $cookies.remove('authUser');\n                Notification.success(res.message);\n                $state.go(\"login\");\n            }).error(function(err) {\n                $cookies.remove('token');\n                $cookies.remove('authUser');\n                if (err.error)\n                    Notification.success(err.error);\n                $state.go(\"login\");\n            });\n        };\n\n        // $scope.helpText = [];\n        // $http.get($config.api_url + 'gethelptext').success(function(data) {\n        //     $scope.helpText = data;\n        // });\n\n        $scope.helptextData = \"\";\n        $scope.showModal = false;\n        $scope.buttonClicked = \"\";\n        $scope.toggleModal = function(btnClicked) {\n            for (var i = 0; i < $scope.helpText.length; i++) {\n                if ($rootScope.state.current.name == $scope.helpText[i].route_name) {\n                    $scope.helptextData = $scope.helpText[i].route_name + \" - \" + $sce.trustAsHtml($scope.helpText[i].help_text);\n                }\n            }\n            $scope.buttonClicked = btnClicked;\n            $scope.showModal = !$scope.showModal;\n        };\n\n        $scope.goBack = function() {\n            $window.history.back();\n        };\n\n        /**\n         * Get Notification for header \n         * Call API every 1 min if user have login\n         */\n        $rootScope.initialise = function() {\n            $scope.refreshOpts = {\n                interval: 10000,\n                paused: false\n            };\n        }\n        $scope.notification_old_count = 0;\n        $scope.notification_old_data = [];\n\n        $scope.refreshList = function() {\n            NotificationsFactory.headerNotification().success(function(response) {\n                $scope.imagePath = $config.profile_url;\n                $scope.dummyImage = $config.profile_url + '/noImage.png';\n\n                if ($scope.notification_old_count != response.count) {\n                    $scope.notification_old_data = response.notifications;\n                    $scope.notification_old_count = response.count;\n                }\n\n                // $scope.notification_old_count = response.count;\n            }).error(function(error) {\n\n            });\n        };\n\n        $scope.setLastRefreshed = function(eventArgs) {\n            $scope.lastRefresh = eventArgs.when;\n        }\n\n        // Mark as read to Message or notification\n        $scope.markReadTopNotification = function() {\n            // $rootScope.initialise();\n            $scope.notification_old_count = 0;\n            // set the top 10 mark as read \n            NotificationsFactory.markReadNotification().success(function(response) {}).error(function(error) {\n                $scope.notification_old_count = 0;\n                $scope.notification_old_data = [];\n            });\n        };\n        $rootScope.initialise();\n\n\n        $scope.randomString = function(length) {\n            var chars = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890\";\n            var pass = \"\";\n            for (var x = 0; x < length; x++) {\n                var i = Math.floor(Math.random() * chars.length);\n                pass += chars.charAt(i);\n            }\n            return pass;\n        };\n    }\n]);\n\n/**\n * Created by k.danovsky on 13.05.2016.\n */\n\n(function () {\n  'use strict';\n\n  angular.module('BlurAdmin.theme')\n    .config(config);\n\n    \n\n  /** @ngInject */\n  function config(baConfigProvider, colorHelper, $provide) {\n    $provide.decorator('$uiViewScroll', uiViewScrollDecorator);\n    // baConfigProvider.changeTheme({blur: true});\n    //\n    //baConfigProvider.changeColors({\n    //  default: 'rgba(#000000, 0.2)',\n    //  defaultText: '#ffffff',\n    //  dashboard: {\n    //    white: '#ffffff',\n    //  },\n    //});\n  }\n\n  /** @ngInject */\n  function uiViewScrollDecorator($delegate, $anchorScroll, baUtil) {\n    return function (uiViewElement) {\n      if (baUtil.hasAttr(uiViewElement, \"autoscroll-body-top\")) {\n        $anchorScroll();\n      } else {\n        $delegate(uiViewElement);\n      }\n    };\n  }\n})();\n\n/**\n * Created by k.danovsky on 13.05.2016.\n */\n\n(function () {\n  'use strict';\n\n  var basic = {\n    default: '#ffffff',\n    defaultText: '#666666',\n    border: '#dddddd',\n    borderDark: '#aaaaaa',\n  };\n\n  // main functional color scheme\n  var colorScheme = {\n    primary: '#209e91',\n    info: '#2dacd1',\n    success: '#90b900',\n    warning: '#dfb81c',\n    danger: '#e85656',\n  };\n\n  // dashboard colors for charts\n  var dashboardColors = {\n    blueStone: '#005562',\n    surfieGreen: '#0e8174',\n    silverTree: '#6eba8c',\n    gossip: '#b9f2a1',\n    white: '#10c4b5',\n  };\n\n  angular.module('BlurAdmin.theme')\n    .provider('baConfig', configProvider);\n\n  /** @ngInject */\n  function configProvider(colorHelper) {\n    var conf = {\n      theme: {\n        blur: false,\n      },\n      colors: {\n        default: basic.default,\n        defaultText: basic.defaultText,\n        border: basic.border,\n        borderDark: basic.borderDark,\n\n        primary: colorScheme.primary,\n        info: colorScheme.info,\n        success: colorScheme.success,\n        warning: colorScheme.warning,\n        danger: colorScheme.danger,\n\n        primaryLight: colorHelper.tint(colorScheme.primary, 30),\n        infoLight: colorHelper.tint(colorScheme.info, 30),\n        successLight: colorHelper.tint(colorScheme.success, 30),\n        warningLight: colorHelper.tint(colorScheme.warning, 30),\n        dangerLight: colorHelper.tint(colorScheme.danger, 30),\n\n        primaryDark: colorHelper.shade(colorScheme.primary, 15),\n        infoDark: colorHelper.shade(colorScheme.info, 15),\n        successDark: colorHelper.shade(colorScheme.success, 15),\n        warningDark: colorHelper.shade(colorScheme.warning, 15),\n        dangerDark: colorHelper.shade(colorScheme.danger, 15),\n\n        dashboard: {\n          blueStone: dashboardColors.blueStone,\n          surfieGreen: dashboardColors.surfieGreen,\n          silverTree: dashboardColors.silverTree,\n          gossip: dashboardColors.gossip,\n          white: dashboardColors.white,\n        },\n      }\n    };\n\n    conf.changeTheme = function(theme) {\n      angular.merge(conf.theme, theme)\n    };\n\n    conf.changeColors = function(colors) {\n      angular.merge(conf.colors, colors)\n    };\n\n    conf.$get = function () {\n      delete conf.$get;\n      return conf;\n    };\n    return conf;\n  }\n})();\n\n/**\n * @author v.lugovsky\n * created on 15.12.2015\n */\n(function () {\n  'use strict';\n\n  var IMAGES_ROOT = 'assets/img/';\n\n  angular.module('BlurAdmin.theme')\n    .constant('layoutSizes', {\n      resWidthCollapseSidebar: 1200,\n      resWidthHideSidebar: 500\n    })\n    .constant('layoutPaths', {\n      images: {\n        root: IMAGES_ROOT,\n        profile: IMAGES_ROOT + 'app/profile/',\n        amMap: 'assets/img/theme/vendor/ammap//dist/ammap/images/',\n        amChart: 'assets/img/theme/vendor/amcharts/dist/amcharts/images/'\n      }\n    })\n    .constant('colorHelper', {\n      tint: function(color, weight) {\n        return mix('#ffffff', color, weight);\n      },\n      shade: function(color, weight) {\n        return mix('#000000', color, weight);\n      },\n    });\n\n  function shade(color, weight) {\n    return mix('#000000', color, weight);\n  }\n\n  function tint(color, weight) {\n    return mix('#ffffff', color, weight);\n  }\n\n  //SASS mix function\n  function mix(color1, color2, weight) {\n    // convert a decimal value to hex\n    function d2h(d) {\n      return d.toString(16);\n    }\n    // convert a hex value to decimal\n    function h2d(h) {\n      return parseInt(h, 16);\n    }\n\n    var result = \"#\";\n    for(var i = 1; i < 7; i += 2) {\n      var color1Part = h2d(color1.substr(i, 2));\n      var color2Part = h2d(color2.substr(i, 2));\n      var resultPart = d2h(Math.floor(color2Part + (color1Part - color2Part) * (weight / 100.0)));\n      result += ('0' + resultPart).slice(-2);\n    }\n    return result;\n  }\n})();\n\n/**\n * @author v.lugovksy\n * created on 15.12.2015\n */\n(function () {\n  'use strict';\n\n  angular.module('BlurAdmin.theme')\n    .run(themeRun);\n\n  /** @ngInject */\n  function themeRun($timeout, $rootScope, layoutPaths, preloader, $q, baSidebarService, themeLayoutSettings) {\n    var whatToWait = [\n      preloader.loadAmCharts(),\n      $timeout(3000)\n    ];\n\n    var theme = themeLayoutSettings;\n    if (theme.blur) {\n      if (theme.mobile) {\n        whatToWait.unshift(preloader.loadImg(layoutPaths.images.root + 'blur-bg-mobile.jpg'));\n      } else {\n        whatToWait.unshift(preloader.loadImg(layoutPaths.images.root + 'blur-bg.jpg'));\n        whatToWait.unshift(preloader.loadImg(layoutPaths.images.root + 'blur-bg-blurred.jpg'));\n      }\n    }\n\n    $q.all(whatToWait).then(function () {\n      $rootScope.$pageFinishedLoading = true;\n    });\n\n    $timeout(function () {\n      if (!$rootScope.$pageFinishedLoading) {\n        $rootScope.$pageFinishedLoading = true;\n      }\n    }, 7000);\n\n    $rootScope.$baSidebarService = baSidebarService;\n  }\n\n})();\n/**\n * Created by k.danovsky on 12.05.2016.\n */\n\n(function () {\n  'use strict';\n\n  angular.module('BlurAdmin.theme')\n    .service('themeLayoutSettings', themeLayoutSettings);\n\n  /** @ngInject */\n  function themeLayoutSettings(baConfig) {\n    var isMobile = (/android|webos|iphone|ipad|ipod|blackberry|windows phone/).test(navigator.userAgent.toLowerCase());\n    var mobileClass = isMobile ? 'mobile' : '';\n    var blurClass = baConfig.theme.blur ? 'blur-theme' : '';\n    angular.element(document.body).addClass(mobileClass).addClass(blurClass);\n\n    return {\n      blur: baConfig.theme.blur,\n      mobile: isMobile,\n    }\n  }\n\n})();\n\n/*********************************************************\n    - Author: Sebastian Cubillos\n    - Github: @tianes\n    - More Gists: https://gist.github.com/tianes/\n    - Contact: sebastian@cubillos.org\n    - Article: https://goo.gl/oOzNXU\n**********************************************************/\n\nApp.directive('acOutsideClick', ['$http', '$config', '$timeout', '$templateCache', function($http, $config, $timeout, $templateCache) {\n\n    var TEMPLATE_URL = '';\n\n    // Set the default template for this directive\n    /*$templateCache.put(TEMPLATE_URL,\n        '<div class=\"angucomplete-holder\" ng-class=\"{\\'angucomplete-dropdown-visible\\': showDropdown}\">' +\n        '  <input id=\"{{id}}_value\" name=\"{{inputName}}\" tabindex=\"{{fieldTabindex}}\" ng-class=\"{\\'angucomplete-input-not-empty\\': notEmpty}\" ng-model=\"searchStr\" ng-disabled=\"disableInput\" type=\"{{inputType}}\" placeholder=\"{{placeholder}}\" maxlength=\"{{maxlength}}\" ng-focus=\"onFocusHandler()\" class=\"{{inputClass}}\" ng-focus=\"resetHideResults()\" ng-blur=\"hideResults($event)\" autocapitalize=\"off\" autocorrect=\"off\" autocomplete=\"off\" ng-change=\"inputChangeHandler(searchStr)\"/>' +\n        '  <div id=\"{{id}}_dropdown\" class=\"angucomplete-dropdown\" ng-show=\"showDropdown\">' +\n        '    <div class=\"angucomplete-searching\" ng-show=\"searching\" ng-bind=\"textSearching\"></div>' +\n        '    <div class=\"angucomplete-searching\" ng-show=\"!searching && (!results || results.length == 0)\" ng-bind=\"textNoResults\"></div>' +\n        '    <div class=\"angucomplete-row\" ng-repeat=\"result in results\" ng-click=\"selectResult(result)\" ng-mouseenter=\"hoverRow($index)\" ng-class=\"{\\'angucomplete-selected-row\\': $index == currentIndex}\">' +\n        '      <div ng-if=\"imageField\" class=\"angucomplete-image-holder\">' +\n        '        <img ng-if=\"result.image && result.image != \\'\\'\" ng-src=\"{{result.image}}\" class=\"angucomplete-image\"/>' +\n        '        <div ng-if=\"!result.image && result.image != \\'\\'\" class=\"angucomplete-image-default\"></div>' +\n        '      </div>' +\n        '      <div class=\"angucomplete-title\" ng-if=\"matchClass\" ng-bind-html=\"result.title\"></div>' +\n        '      <div class=\"angucomplete-title\" ng-if=\"!matchClass\">{{ result.title }}</div>' +\n        '      <div ng-if=\"matchClass && result.description && result.description != \\'\\'\" class=\"angucomplete-description\" ng-bind-html=\"result.description\"></div>' +\n        '      <div ng-if=\"!matchClass && result.description && result.description != \\'\\'\" class=\"angucomplete-description\">{{result.description}}</div>' +\n        '    </div>' +\n        '  </div>' +\n        '</div>'\n    );*/\n\n    /*$templateCache.put(TEMPLATE_URL,\n        '<div class=\"angucomplete-holder\" ng-class=\"{\\'angucomplete-dropdown-visible\\': showDropdown{{id}}}\">' +\n        '{{outerHTML}}' +\n        '<div id=\"{{id}}_dropdown\" class=\"angucomplete-dropdown\" ng-show=\"showDropdown{{id}}\">  ' +\n        '    <div class=\"angucomplete-searching\" ng-show=\"!searchResult1 || searchResult1.length == 0\">{{textNoResults}}</div> ' +\n        '    <div class=\"angucomplete-row\" ng-repeat=\"result in searchResult1\" ng-click=\"selectResult(result)\" ng-mouseenter=\"hoverRow($index)\" ng-class=\"{\\'angucomplete-selected-row\\': $index == currentIndex}\"> ' +\n        '        <div class=\"angucomplete-title\"ng-bind-html=\"result.name\"></div> ' +\n        '        <div ng-if=\"result.mobile && result.mobile != \\'\\'\" class=\"angucomplete-description\" ng-bind-html=\"result.mobile\"></div> ' +\n        '    </div> ' +\n        '</div>' +\n        '</div>'\n    );*/\n\n    return {\n        restrict: 'EA',\n        require: '^?form',\n        scope: {\n            acOutsideClick: '&',\n            initialValue: \"@\",\n            name: '@',\n            id: '@',\n            placeholder: '@',\n            validator: '@',\n            chars: '@',\n            data: '@',\n            outerHTML: '@'\n        },\n        /*templateUrl: function(element, attrs) {\n            // console.log('attrs ====', attrs);\n            console.log('attrs ====', element, element[0].outerHTML);\n            // return attrs.templateUrl || TEMPLATE_URL;\n        },*/\n        link: function(scope, iElement, iAttrs) {\n            var ele = $(iElement);\n\n            var onClick = function(event) {\n                if (!$.contains(ele.parent(), event.target)) {\n                    scope.acOutsideClick();\n                    $timeout(function() {});\n                }\n            };\n\n            var keyDown = function(e) {\n                var keyCode = e.keyCode || e.which;\n\n                if (keyCode == 9) {\n                    scope.acOutsideClick();\n                    $timeout(function() {});\n                }\n            };\n\n            document.body.addEventListener('click', onClick);\n            document.body.addEventListener('keydown', keyDown);\n\n            scope.$on('$destroy', function() {\n                document.body.removeEventListener('click', onClick);\n                document.body.removeEventListener('keydown', keyDown);\n            });\n        }\n    };\n}]);\n/*********************************************************\n    - Author: Sebastian Cubillos\n    - Github: @tianes\n    - More Gists: https://gist.github.com/tianes/\n    - Contact: sebastian@cubillos.org\n    - Article: https://goo.gl/oOzNXU\n**********************************************************/\n\nApp.directive('chars', function () {\n    /* RegEx Examples:\n        - email: \"0-9a-zA-Z@._\\-\"\n        - numbers only: \"0-9\"\n        - letters only: \"a-zA-Z\"\n        Email Usage Example:\n        <input type=\"text\" name=\"email\" ng-model=\"user.email\" chars=\"0-9a-zA-Z@._\\-\" />\n    */\n    'use strict';\n    return {\n        require: 'ngModel',\n        restrict: 'A',\n        link: function ($scope, $elem, attrs, ctrl) {\n            var regReplace,\n                preset = {\n                    'slug': 'a-z0-9._-',\n                    'text': 'A-Z a-z\\')(.,- 0-9',\n                    'company-name': 'A-Z a-z.,- 0-9',\n                    'only-numbers': '0-9.',\n                    'numbers': '0-9',\n                    'only-letters': 'A-Za-z',\n                    'only-letters-space': 'A-Z a-z',\n                    'letters': 'a-z 0-9._-', /*'letters': 'A-Za-z\\\\s',*/\n                    'email': '\\\\wÑñ@._\\\\-',\n                    'alpha-numeric': '\\\\w\\\\s',\n                    'latin-alpha-numeric': '\\\\w\\\\sÑñáéíóúüÁÉÍÓÚÜ'\n                },\n                filter = preset[attrs.chars] || attrs.chars;\n\n            $elem.on('input', function () {\n                regReplace = new RegExp('[^' + filter + ']', 'ig');\n                ctrl.$setViewValue($elem.val().replace(regReplace, ''));\n                ctrl.$render();\n            });\n        }\n    };\n});\nApp.directive('ngConfirmClick', [\n    function(){\n        return {\n            link: function (scope, element, attr) {\n                var msg = attr.ngConfirmClick || \"Are you sure?\";\n                var clickAction = attr.confirmedClick;\n                element.bind('click',function (event) {\n                    if ( window.confirm(msg) ) {\n                        scope.$eval(clickAction)\n                    }\n                });\n            }\n        };\n}]);\n\nApp.directive('focusMe', function($timeout) {\n  return {\n    link: function(scope, element, attrs) {\n      $timeout(function() {\n        element[0].focus(); \n      }, 150);\n    }\n  };\n});\nApp.directive('myYear', ['$http', '$config', function($http, $config) {\n    return {\n        restrict: 'E',\n        template: '<select inherit-select-classes=\"true\" chosen ng-selected=\"true\" ng-options=\"city.value as city.text for city in range2\"></select>',\n        replace: true,\n        controller: function($scope, $element, $attrs, $transclude, $http) {\n            $scope.$watch($scope.stateNgModel, function(newValue, oldValue) {\n                $scope.range2 = [{ value: null, text: \"Select year\" }];\n\n                var year = new Date().getFullYear();\n                $scope.range2.push(year);\n                for (var i = 0; i < 30; i++) {\n                    var yearName = Number(year) + Number(i);\n                    var yearData = {\n                        value: yearName,\n                        text: yearName\n                    };\n                    $scope.range2.push(yearData);\n                }\n            });\n        },\n        link: function(scope, iElement, iAttrs) {\n            scope.range2 = [{ value: null, text: \"Select year\" }];\n        }\n    };\n}]);\n\nApp.directive('myMonth', ['$http', '$config', function($http, $config) {\n    return {\n        restrict: 'E',\n        template: '<select inherit-select-classes=\"true\" chosen ng-selected=\"true\" ng-options=\"month.value as month.text for month in months2\"></select>',\n        replace: true,\n        controller: function($scope, $element, $attrs, $transclude, $http) {\n            $scope.$watch($scope.stateNgModel, function(newValue, oldValue) {\n                $scope.months2 = [\n                    { value: null, text: \"Select month\" },\n                    { value: 1, text: '1 - Jan' },\n                    { value: 2, text: '2 - Feb' },\n                    { value: 3, text: '3 - Mar' },\n                    { value: 4, text: '4 - Apr' },\n                    { value: 5, text: '5 - May' },\n                    { value: 6, text: '6 - Jun' },\n                    { value: 7, text: '7 - Jul' },\n                    { value: 8, text: '8 - Aug' },\n                    { value: 9, text: '9 - Sep' },\n                    { value: 10, text: '10 - Oct' },\n                    { value: 11, text: '11 - Nov' },\n                    { value: 12, text: '12 - Dec' }\n                ];\n\n                // for(var i=1;i<12;i++) {\n                //     var yearData = {\n                //         value: i, text: i\n                //     };\n                //     $scope.months2.push(yearData);\n                // }\n            });\n        },\n        link: function(scope, iElement, iAttrs) {\n            scope.months2 = [{ value: null, text: \"Select month\" }];\n        }\n    };\n}]);\n\nApp.directive('issueYear', ['$http', '$config', function($http, $config) {\n    return {\n        restrict: 'E',\n        template: '<select inherit-select-classes=\"true\" chosen ng-selected=\"true\" ng-options=\"city.value as city.text for city in range\"></select>',\n        replace: true,\n        controller: function($scope, $element, $attrs, $transclude, $http) {\n            $scope.$watch($scope.stateNgModel, function(newValue, oldValue) {\n                $scope.range = [{ value: null, text: \"Year\" }];\n\n                var year = new Date().getFullYear();\n                $scope.range.push(year);\n                for (var i = -40; i <= 0; i++) {\n                    var yearName = Number(year) + Number(i);\n                    var yearData = {\n                        value: yearName,\n                        text: yearName\n                    };\n                    $scope.range.push(yearData);\n                }\n            });\n        },\n        link: function(scope, iElement, iAttrs) {\n            scope.range = [{ value: null, text: \"Year\" }];\n        }\n    };\n}]);\n\nApp.directive('issueMonth', ['$http', '$config', function($http, $config) {\n    return {\n        restrict: 'E',\n        template: '<select inherit-select-classes=\"true\" chosen ng-selected=\"true\" ng-options=\"month.value as month.text disable when month.disabled for month in months\"></select>',\n        replace: true,\n        controller: function($scope, $element, $attrs, $transclude, $http) {\n            $scope.$watch(\"transaction.sender.id_proof_issue_year\", function(newValue, oldValue) {\n                $scope.mnthName = ['1 - Jan', '2 - Feb', '3 - Mar', '4 - Apr', '5 - May', '6 - Jun', '7 - Jul', '8 - Aug', '9 - Sep', '10 - Oct', '11 - Nov', '12 - Dec']\n                $scope.months = [{ value: null, text: \"Month\" }];\n\n                var year = new Date().getFullYear();\n                var month = Number(new Date().getMonth()) + Number(1);\n\n                for (var i = 0; i < 12; i++) {\n                    var disableData = false;\n                    if (year == $scope.transaction.sender.id_proof_issue_year) {\n                        if (i >= month) {\n                            disableData = true;\n                        }\n                    }\n\n                    var yearData = { value: Number(i) + Number(1), text: $scope.mnthName[i], disabled: disableData };\n                    $scope.months.push(yearData);\n                }\n            });\n        },\n        link: function(scope, iElement, iAttrs) {\n            scope.months = [{ value: null, text: \"Month\" }];\n        }\n    };\n}]);\n\nApp.directive('expireYear', ['$http', '$config', function($http, $config) {\n    return {\n        restrict: 'E',\n        template: '<select inherit-select-classes=\"true\" chosen ng-selected=\"true\" ng-options=\"city.value as city.text for city in range1\"></select>',\n        replace: true,\n        controller: function($scope, $element, $attrs, $transclude, $http) {\n            $scope.$watch($scope.stateNgModel, function(newValue, oldValue) {\n                $scope.range1 = [{ value: null, text: \"Year\" }];\n\n                var year = new Date().getFullYear();\n                $scope.range1.push(year);\n                for (var i = 0; i < 40; i++) {\n                    var yearName = Number(year) + Number(i);\n                    var yearData = {\n                        value: yearName,\n                        text: yearName\n                    };\n                    $scope.range1.push(yearData);\n                }\n            });\n        },\n        link: function(scope, iElement, iAttrs) {\n            scope.range1 = [{ value: null, text: \"Year\" }];\n        }\n    };\n}]);\n\nApp.directive('expireMonth', ['$http', '$config', function($http, $config) {\n    return {\n        restrict: 'E',\n        template: '<select inherit-select-classes=\"true\" chosen ng-selected=\"true\" ng-options=\"month.value as month.text disable when month.disabled for month in months1\"></select>',\n        replace: true,\n        controller: function($scope, $element, $attrs, $transclude, $http) {\n            if ($scope.transaction) {\n                $scope.$watch(\"transaction.sender.id_proof_expire_year\", function(newValue, oldValue) {\n                    $scope.mnthName = ['1 - Jan', '2 - Feb', '3 - Mar', '4 - Apr', '5 - May', '6 - Jun', '7 - Jul', '8 - Aug', '9 - Sep', '10 - Oct', '11 - Nov', '12 - Dec']\n                    $scope.months1 = [{ value: null, text: \"Month\" }];\n\n                    var year = new Date().getFullYear();\n                    var month = new Date().getMonth();\n\n                    for (var i = 0; i < 12; i++) {\n                        var disableData = false;\n                        if (year == $scope.transaction.sender.id_proof_expire_year) {\n                            if (i < month) {\n                                disableData = true;\n                            }\n                        }\n\n                        var yearData = { value: Number(i) + Number(1), text: $scope.mnthName[i], disabled: disableData };\n                        $scope.months1.push(yearData);\n                    }\n                });\n            }\n            if ($scope.user) {\n                $scope.$watch(\"user.id_proof_expire_year\", function(newValue, oldValue) {\n                    $scope.mnthName = ['1 - Jan', '2 - Feb', '3 - Mar', '4 - Apr', '5 - May', '6 - Jun', '7 - Jul', '8 - Aug', '9 - Sep', '10 - Oct', '11 - Nov', '12 - Dec']\n                    $scope.months1 = [{ value: null, text: \"Month\" }];\n\n                    var year = new Date().getFullYear();\n                    var month = new Date().getMonth();\n\n                    for (var i = 0; i < 12; i++) {\n                        var disableData = false;\n                        if (year == $scope.user.id_proof_expire_year) {\n                            if (i < month) {\n                                disableData = true;\n                            }\n                        }\n\n                        var yearData = { value: Number(i) + Number(1), text: $scope.mnthName[i], disabled: disableData };\n                        $scope.months1.push(yearData);\n                    }\n                });\n            }\n        },\n        link: function(scope, iElement, iAttrs) {\n            scope.months1 = [{ value: null, text: \"Month\" }];\n        }\n    };\n}]);\n\nApp.directive('reportYear', ['$http', '$config', function($http, $config) {\n    return {\n        restrict: 'E',\n        template: '<select inherit-select-classes=\"true\" chosen ng-selected=\"true\" ng-options=\"city.value as city.text for city in range\"></select>',\n        replace: true,\n        controller: function($scope, $element, $attrs, $transclude, $http) {\n            $scope.$watch($scope.stateNgModel, function(newValue, oldValue) {\n                $scope.range = [{ value: null, text: \"Year\" }];\n\n                var year = new Date().getFullYear();\n                $scope.range.push(year);\n                for (var i = 0; i <= 30; i++) {\n                    var yearName = Number(year) - Number(i);\n                    var yearData = {\n                        value: yearName,\n                        text: yearName\n                    };\n                    $scope.range.push(yearData);\n                }\n            });\n        },\n        link: function(scope, iElement, iAttrs) {\n            scope.range = [{ value: null, text: \"Year\" }];\n        }\n    };\n}]);\n\nApp.directive('reportMonth', ['$http', '$config', function($http, $config) {\n    return {\n        restrict: 'E',\n        template: '<select inherit-select-classes=\"true\" chosen ng-selected=\"true\" ng-options=\"month.value as month.text for month in months\"></select>',\n        replace: true,\n        controller: function($scope, $element, $attrs, $transclude, $http) {\n            $scope.$watch($scope.stateNgModel, function(newValue, oldValue) {\n                $scope.mnthName = ['1 - Jan', '2 - Feb', '3 - Mar', '4 - Apr', '5 - May', '6 - Jun', '7 - Jul', '8 - Aug', '9 - Sep', '10 - Oct', '11 - Nov', '12 - Dec']\n                $scope.months = [{ value: null, text: \"Month\" }];\n                var year = new Date().getFullYear();\n                var month = Number(new Date().getMonth()) + Number(1);\n\n                for (var i = 0; i < 12; i++) {\n                    var yearData = { value: Number(i) + Number(1), text: $scope.mnthName[i] };\n                    $scope.months.push(yearData);\n                }\n            });\n        },\n        link: function(scope, iElement, iAttrs) {\n            scope.months = [{ value: null, text: \"Month\" }];\n        }\n    };\n}]);\n\nApp.directive('modal', function() {\n    return {\n        template: '<div class=\"modal fade\">' +\n            '<div class=\"modal-dialog\">' +\n            '<div class=\"modal-content\">' +\n            '<div class=\"modal-header\">' +\n            '<button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-hidden=\"true\">&times;</button>' +\n            '<h4 class=\"modal-title\">Help Text</h4>' +\n            '</div>' +\n            '<div class=\"modal-body\" ng-transclude></div>' +\n            '</div>' +\n            '</div>' +\n            '</div>',\n        restrict: 'E',\n        transclude: true,\n        replace: true,\n        scope: true,\n        link: function postLink(scope, element, attrs) {\n            scope.$watch(attrs.visible, function(value) {\n                if (value == true)\n                    $(element).modal('show');\n                else\n                    $(element).modal('hide');\n            });\n\n            $(element).on('shown.bs.modal', function() {\n                scope.$apply(function() {\n                    scope.$parent[attrs.visible] = true;\n                });\n            });\n\n            $(element).on('hidden.bs.modal', function() {\n                scope.$apply(function() {\n                    scope.$parent[attrs.visible] = false;\n                });\n            });\n        }\n    };\n});\nApp.directive('phoneInput', function($filter, $browser) {\n    return {\n        require: 'ngModel',\n        link: function($scope, $element, $attrs, ngModelCtrl) {\n            var listener = function() {\n                var value = $element.val().replace(/[^0-9]/g, '');\n                $element.val($filter('tel')(value, false));\n            };\n\n            // This runs when we update the text field\n            ngModelCtrl.$parsers.push(function(viewValue) {\n                return viewValue.replace(/[^0-9]/g, '').slice(0, 10);\n            });\n\n            // This runs when the model gets updated on the scope directly and keeps our view in sync\n            ngModelCtrl.$render = function() {\n                $element.val($filter('tel')(ngModelCtrl.$viewValue, false));\n            };\n\n            $element.bind('change', listener);\n            $element.bind('keydown', function(event) {\n                var key = event.keyCode;\n                // If the keys include the CTRL, SHIFT, ALT, or META keys, or the arrow keys, do nothing.\n                // This lets us support copy and paste too\n                if (key == 91 || (15 < key && key < 19) || (37 <= key && key <= 40)) {\n                    return;\n                }\n                $browser.defer(listener); // Have to do this or changes don't get picked up properly\n            });\n\n            $element.bind('paste cut', function() {\n                $browser.defer(listener);\n            });\n        }\n\n    };\n});\n\nApp.filter('tel', function() {\n    return function(tel) {\n        if (!tel) { return ''; }\n\n        var value = tel.toString().trim().replace(/^\\+/, '');\n\n        if (value.match(/[^0-9]/)) {\n            return tel;\n        }\n\n        var country, city, number;\n\n        switch (value.length) {\n            case 1:\n            case 2:\n            case 3:\n                city = value;\n                break;\n\n            default:\n                city = value.slice(0, 3);\n                number = value.slice(3);\n        }\n\n        if (number) {\n            if (number.length > 3) {\n                number = number.slice(0, 3) + '-' + number.slice(3, 7);\n            } else {\n                number = number;\n            }\n\n            return (\"(\" + city + \") \" + number).trim();\n        } else {\n            return \"(\" + city;\n        }\n\n    };\n});\n\nApp.directive('disallowSpaces', function() {\n    return {\n        restrict: 'A',\n\n        link: function($scope, $element) {\n            $element.bind('input', function() {\n                $(this).val($(this).val().replace(/ /g, ''));\n            });\n        }\n    };\n});\n\nApp.filter('replace_string', function() {\n    return function(replace_string) {\n        if (!replace_string) { return ''; }\n\n        var value = replace_string.toString().trim().replace('_', ' ').replace('_', ' ');\n        return value;\n    };\n});\n\nApp.filter('titleCase', function() {\n    return function(input) {\n        input = input || '';\n        return input.replace(/\\w\\S*/g, function(txt){return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();});\n    };\n});\n\nApp.directive('ssn', function() {\n    function makeSsn(value) {\n        var result = value;\n\n        var ssn = value ? value.toString() : '';\n        if (ssn.length > 3) {\n            result = ssn.substr(0, 3) + '-';\n            if (ssn.length > 5) {\n                result += ssn.substr(3, 2) + '-';\n                result += ssn.substr(5, 4);\n            } else {\n                result += ssn.substr(3);\n            }\n        }\n\n        return result;\n    }\n\n    return {\n        restrict: 'A',\n        require: 'ngModel',\n        link: function(scope, element, attrs, ngModel) {\n            ngModel.$formatters.push(function(value) {\n                return makeSsn(value);\n            });\n\n            // clean output as digits\n            ngModel.$parsers.push(function(value) {\n                var cursorPosition = element[0].selectionStart;\n                var oldLength = value.toString().length;\n                var nonDigits = /[^0-9]/g;\n                var intValue = value.replace(nonDigits, '');\n                if (intValue.length > 9) {\n                    intValue = intValue.substr(0, 9);\n                }\n                var newValue = makeSsn(intValue);\n                ngModel.$setViewValue(newValue);\n                ngModel.$render();\n                element[0].setSelectionRange(cursorPosition + newValue.length - oldLength, cursorPosition + newValue.length - oldLength);\n                return intValue;\n            });\n        }\n    };\n});\n\nApp.directive('numbersOnly', function () {\n    return {\n        require: 'ngModel',\n        link: function (scope, element, attr, ngModelCtrl) {\n            function fromUser(text) {\n                if (text) {\n                    var transformedInput = text.replace(/[^0-9]/g, '');\n\n                    if (transformedInput !== text) {\n                        ngModelCtrl.$setViewValue(transformedInput);\n                        ngModelCtrl.$render();\n                    }\n                    return transformedInput;\n                }\n                return undefined;\n            }            \n            ngModelCtrl.$parsers.push(fromUser);\n        }\n    };\n});\n\nApp.directive('myDate', function($filter, $browser) {\n    return {\n        require: 'ngModel',\n        link: function($scope, $element, $attrs, ngModelCtrl) {\n            var listener = function() {\n                var value = $element.val().replace(/[^0-9]/g, '');\n                $element.val($filter('date')(value, false));\n            };\n\n            // This runs when we update the text field\n            ngModelCtrl.$parsers.push(function(viewValue) {\n                return viewValue.replace(/[^0-9]/g, '').slice(0, 10);\n            });\n\n            // This runs when the model gets updated on the scope directly and keeps our view in sync\n            ngModelCtrl.$render = function() {\n                $element.val($filter('date')(ngModelCtrl.$viewValue, false));\n            };\n\n            $element.bind('change', listener);\n            $element.bind('keydown', function(event) {\n                var key = event.keyCode;\n                // If the keys include the CTRL, SHIFT, ALT, or META keys, or the arrow keys, do nothing.\n                // This lets us support copy and paste too\n                if (key == 91 || (15 < key && key < 19) || (37 <= key && key <= 40)) {\n                    return;\n                }\n                $browser.defer(listener); // Have to do this or changes don't get picked up properly\n            });\n\n            $element.bind('paste cut', function() {\n                $browser.defer(listener);\n            });\n        }\n\n    };\n});\n\nApp.filter('date', function() {\n    return function(tel) {\n        if (!tel) { return ''; }\n\n        var value = tel.toString().trim().replace(/^\\+/, '');\n\n        if (value.match(/[^0-9]/)) {\n            return tel;\n        }\n\n        var country, city, number;\n\n        switch (value.length) {\n            case 1:\n            case 2:\n            case 3:\n                city = value;\n                break;\n\n            default:\n                city = value.slice(0, 4);\n                number = value.slice(4);\n        }\n\n        if (number) {\n            if (number.length > 3) {\n                number = number.slice(0, 2) + '-' + number.slice(2, 4);\n            } else {\n                number = number;\n            }\n\n            return (city + \"-\" + number).trim();\n        } else {\n            return city;\n        }\n\n    };\n});\nApp.directive('validFile', function () {\n    return {\n        require: 'ngModel',\n        link: function (scope, el, attrs, ngModel) {\n\n            ngModel.$render = function () {\n                if (el[0].files && el[0].files.length) {\n                    ngModel.$setViewValue(el[0].files[0]);\n                    //scope.upload();\n                }\n            };\n\n            el.bind('change', function () {\n                scope.$apply(function () {\n                    ngModel.$render();\n                });\n            });\n\n        }\n    }\n});\n\n\nApp.directive('validPdf', function () {\n    return {\n        require: 'ngModel',\n        link: function (scope, elem, attrs, ngModel) {\n            var validFormats = ['pdf'];\n            elem.bind('change', function () {\n                validImage(false);\n                scope.$apply(function () {\n                    ngModel.$render();\n                });\n            });\n            ngModel.$render = function () {\n                ngModel.$setViewValue(elem.val());\n            };\n            function validImage(bool) {\n                ngModel.$setValidity('extension', bool);\n            }\n            ngModel.$parsers.push(function(value) {\n                var ext = value.substr(value.lastIndexOf('.')+1);\n                if(ext=='') return;\n                if(validFormats.indexOf(ext) == -1){\n                    return value;\n                }\n                validImage(true);\n                return value;\n            });\n        }\n    }\n});\n\n/*App.directive('pdfFile', function () {\nreturn {\n    require: 'ngModel',\n    link: function (scope, elem, attrs, ngModel) {\n        var validFormats = ['pdf'];\n        elem.bind('change', function () {\n            validImage(false);\n            scope.$apply(function () {\n                ngModel.$render();\n            });\n        });\n        ngModel.$render = function () {\n            ngModel.$setViewValue(elem.val());\n        };\n        function validImage(bool) {\n            ngModel.$setValidity('extension', bool);\n        }\n        ngModel.$parsers.push(function(value) {\n            var ext = value.substr(value.lastIndexOf('.')+1);\n            if(ext=='') return;\n            if(validFormats.indexOf(ext) == -1){\n                return value;\n            }\n            validImage(true);\n            console.log(value);\n            return value;\n        });\n    }\n  };\n});*/\n\nApp.directive('pdfFile', function validFile() {\n    var validFormats = ['pdf'];\n    return {\n        require: 'ngModel',\n        link: function (scope, elem, attrs, ctrl) {\n            ctrl.$validators.validFile = function() {\n                elem.on('change', function () {\n                   var value = elem.val(),\n                       ext = value.substring(value.lastIndexOf('.') + 1).toLowerCase();\n                   if(validFormats.indexOf(ext) !== -1) {\n                       return true;\n                   }\n                   else {\n                       return false;\n                   }\n                });\n           };\n        }\n    };\n});\n/**\n * @author v.lugovksy\n * created on 16.12.2015\n */\n(function() {\n    'use strict';\n    angular.module('BlurAdmin').factory('ApiManagementsFactory', ['$http', '$q', '$config', function($http, $q, $config) {\n        var ApiManagementsFactory = {};\n\n        ApiManagementsFactory.validation = {\n            name: { required: \"Company name is required\", minlength: \"Company name is too short\", maxlength: \"Company name is too long\" },\n            api_key: { required: \"API key is required\", minlength: \"API key is too short\", maxlength: \"API key is too long\" },\n            slug: { required: \"Slug is required\", minlength: \"Slug is too short\", maxlength: \"Slug is too long\", duplicate: \"Slug is already exist please chose other slug.\" },\n            status: { required: \"Please select status\" },\n            ipaddress: { required: \"Ip address is required\" }\n        };\n\n        ApiManagementsFactory.addRecord = function(data) {\n            return $http.post($config.api_url + \"apimanagements\", data);\n        };\n\n        ApiManagementsFactory.getRecord = function(id) {\n            return $http.get($config.api_url + \"apimanagements/\" + id + \"/edit\");\n        };\n\n        ApiManagementsFactory.updateRecord = function(id, data) {\n            return $http.post($config.api_url + \"apimanagements/\" + id, data);\n        };\n\n        ApiManagementsFactory.checkSlug = function(data) {\n            return $http.post($config.api_url + \"apimanagements/check-slug\", data);\n        };\n\n        ApiManagementsFactory.showDataTable = function(data) {\n            return $http({\n                method: 'POST',\n                url: $config.api_url + 'apimanagements/get-apimanagements-list',\n                data: $.param(data),\n                headers: { 'Content-Type': 'application/x-www-form-urlencoded' }\n            });\n        };\n        \n        ApiManagementsFactory.deleteRecord = function(data) {\n            return $http.delete($config.api_url + \"apimanagements/\"+data);\n        };\n        \n        return ApiManagementsFactory;\n    }]);\n})();\n/**\n * @author v.lugovksy\n * created on 16.12.2015\n */\n(function () {\n  'use strict';\n  angular.module('BlurAdmin').factory('authInterceptor', ['$rootScope', '$q', '$window', '$cookies', '$injector', function($rootScope, $q, $window, $cookies, $injector) {\n\n    // angular.module('BlurAdmin').factory('authInterceptor', function ($rootScope, $q, $window, $cookies, $injector) {\n        return {\n            request: function (config) {\n                config.headers = config.headers || {};\n                if ($cookies.get('token')) {\n                    config.headers.Authorization = 'Bearer ' + $cookies.get('token');\n                }\n                return config;\n            },\n            response: function (response) {\n                var new_token = response.headers('authorization');\n                if (new_token != null) {\n                    new_token = new_token.replace('Bearer ', '');\n                    $cookies.put(\"token\", new_token);\n                }\n\n                if (response.status === 200) {\n                    return response || $q.when(response);\n                }\n                else {\n                    $rootScope.logout();\n                }\n\n            },\n            // optional method\n            responseError: function (rejection) {\n                var $state = $injector.get(\"$state\");\n                \n                if ($state.current.name != 'login' && rejection.config.url.indexOf('logout') == -1 && rejection.config.url.indexOf('refresh-token') == -1) {\n                // if ($state.current.name != 'login' && rejection.status !== 400) {\n                    \n                    // do something on error\n                    if (rejection.status === 400) {\n                        $rootScope.logout();\n                        return $q.reject(rejection);\n                    }\n\n                    /* Validation Error or Server Internal Error handling*/\n                    if (rejection.status === 422 || rejection.status === 501) {\n                        var new_token = rejection.headers('authorization');\n                        if (new_token !== null) {\n                            new_token = new_token.replace('Bearer ', '');\n                            $cookies.put(\"token\", new_token);\n                        }\n                        if (rejection.status === 501) {\n                            var Notification = $injector.get(\"Notification\");\n                            Notification.error(rejection.data.error);\n                            $rootScope.logout();\n                            return $q.reject(rejection);\n                        }\n                    }\n\n                    // If the error is 401 related\n                    if (rejection.status === 401)\n                    {        \n                        // We're going to get attempt to refresh the token on the\n                        // server, if we're within the ttl_refresh period.\n                        var deferred = $q.defer();\n                        // We inject $http, otherwise we will get a circular ref\n\n                        $injector.get(\"AuthenticationFactory\").refreshToken().then(function(response){\n                            $cookies.put('token', response.data.token);\n                            deferred.resolve(response);\n                        }, deferred.reject);\n\n                        return deferred.promise.then(function() {\n                            return $injector.get(\"$http\")(rejection.config);\n                        });\n                    }\n\n                    return $q.reject(rejection);\n                }\n\n                return $q.reject(rejection);\n            }\n        };\n  }]);\n})();\n/**\n * @author v.lugovksy\n * created on 16.12.2015\n */\n(function () {\n  'use strict';\n  angular.module('BlurAdmin').factory('AuthenticationFactory', ['$http', '$q', '$config', '$cookies', function($http, $q, $config, $cookies) {\n        var AuthenticationFactory = {};\n\n        AuthenticationFactory.validation = {\n            email: { required: \"Email is required\", invalidEmail: \"Email is not valid\", minlength: \"Email is too short\", maxlength: \"Email is too long\" },\n            password: { required: \"Password is required\", minlength: \"Password is too short\", maxlength: \"Password is too long\" },\n            confirm_password: { required: \"Confirm password is required\" },\n        };\n\n        /**\n         * Login\n         */\n        AuthenticationFactory.login = function(data) {\n            // var formData = objectToFormData(data);\n            // return $http.post($config.api_url + \"login\", formData, { headers: {'Content-Type': undefined }});\n            return $http.post($config.api_url + \"login\", data);\n        };\n\n        /**\n         * Invalid the token\n         */\n        AuthenticationFactory.logout = function(data) {\n            var formData = objectToFormData(data);\n            return $http.post($config.api_url + \"logout\", formData, { headers: {'Content-Type': undefined }});\n            // return $http.post($config.api_url + \"logout\", data);\n        };\n\n        /*\n        * Forgot Password\n        */\n        AuthenticationFactory.forgotPassword = function(data) {\n            return $http.post($config.api_url + \"password/email\", data);\n        };\n\n        /*\n        * Reset Password\n        */\n        AuthenticationFactory.resetPassword = function(data) {\n            return $http.post($config.api_url + \"password/reset\", data);\n        };\n\n        /**\n         * Refresh Token \n         */\n        AuthenticationFactory.refreshToken = function() {\n            return $http.post($config.api_url + \"refresh-token\", {}, {\n                headers: {\n                    Authorization: $cookies.get(\"token\")\n                }\n            });\n        };\n\n        /**\n         * Check Permission of Current User\n         */\n        AuthenticationFactory.checkPermission = function(permission) {\n            // var pp = { permission: permission };\n            // var formData = objectToFormData(pp);\n            // return $http.post($config.api_url + \"check-permission\", formData, { headers: {'Content-Type': undefined }});\n            // return $http.post($config.api_url + \"check-permission\", { permission: objectToFormData(permission) }, { headers: {'Content-Type': undefined }});\n            return $http.post($config.api_url + \"check-permission\", { permission: permission });\n        }\n\n        AuthenticationFactory.checkLogin = function(){\n            return $http.get($config.api_url + \"check-for-login\");\n        }\n\n        return AuthenticationFactory;\n    }]);\n})();\n/**\n * @author v.lugovksy\n * created on 16.12.2015\n */\n(function () {\n  'use strict';\nangular.module('BlurAdmin').factory('Contactmanagement', ['$http', '$q', '$config', function($http, $q, $config) {\n    var Contactmanagement = {};\n\n    Contactmanagement.validation = {\n        organization_id: { required: \"Please select organization type\" },\n        visitor_type: { required: \"Please select visitor type\" },\n        organization: { required: \"Organization is required\", minlength: \"Organization is too short\", maxlength: \"Organization is too long\" },\n        first_name: { required: \"First name is required\", minlength: \"First name is too short\", maxlength: \"First name is too long\" },\n        last_name: { required: \"Last name is required\", minlength: \"Last name is too short\", maxlength: \"Last name is too long\" },\n        email: { required: \"Email is required\", invalidEmail: \"Email is not valid\", minlength: \"Email is too short\", maxlength: \"Email is too long\" },\n        phone_number: { required: \"Phone number is required\", minlength: \"Phone number is too short\", maxlength: \"Phone number is too long\" },\n        mobile: { required: \"Mobile number is required\", minlength: \"Mobile number is too short\", maxlength: \"Mobile number is too long\" },\n        address: { required: \"Street 1 is required\", minlength: \"Street 1 is too short\", maxlength: \"Street 1 is too long\" },\n        address1: { required: \"Street 2 is required\", minlength: \"Street 2 is too short\", maxlength: \"Street 2 is too long\" },\n        gender: { required: \"Please select gender\"},\n        dob: { required: \"Birth date is required\"},\n        country_id: { required: \"Please select country\"},\n        state: { required: \"State is required\", minlength: \"State is too short\", maxlength: \"State is too long\" },\n        city: { required: \"City is required\", minlength: \"City is too short\", maxlength: \"City is too long\" },\n        zip_code: { required: \"Zip code is required\", minlength: \"Zip code is too short\", maxlength: \"Zip code is too long\" },\n        status: { required: \"Please select status\" }\n    };\n\n    Contactmanagement.addRecord = function(data) {\n        // var formData = objectToFormData(data);\n        return $http.post($config.api_url + \"contactmanagements\", data);\n    };\n\n    Contactmanagement.getRecord = function (id) {\n        return $http.get($config.api_url + \"contactmanagements/\" + id + \"/edit\");\n    };\n\n    Contactmanagement.getAllRecord = function (id) {\n        return $http.get($config.api_url + \"contactmanagements\");\n    };\n\n    Contactmanagement.updateRecord = function (id, data) {\n        // var formData = objectToFormData(data);        \n        return $http.post($config.api_url + \"contactmanagements/\"+id, data);\n    };\n\n    Contactmanagement.checkRecordByPhone = function (data) {\n        // var formData = objectToFormData(data);        \n        return $http.post($config.api_url + \"contactmanagements/checkvitisitorphone\", data);\n    };\n\n    Contactmanagement.showDataTable = function(data) {\n        // return $http.get($config.api_url + \"contactmanagements/get-contactmanagements-list\");\n        return $http({\n            method: 'POST',\n            url: $config.api_url + 'contactmanagements/get-contactmanagements-list',\n            data: $.param(data),\n            headers: { 'Content-Type': 'application/x-www-form-urlencoded' }\n        });\n    };\n\n    Contactmanagement.deleteRecord = function(data) {\n            return $http.delete($config.api_url + \"contactmanagements/\"+data);\n        };\n\n    return Contactmanagement;\n}]);\n})();\n/**\n * @author v.lugovksy\n * created on 16.12.2015\n */\n(function() {\n    'use strict';\n    angular.module('BlurAdmin').factory('DashboardsFactory', ['$http', '$q', '$config', function($http, $q, $config) {\n        var DashboardsFactory = {};\n\n        DashboardsFactory.validation = {\n            task: { required: \"Task is required\", minlength: \"Task is too short\", maxlength: \"Task is too long\" },\n            status: { required: \"Please select status\" }\n        };\n\n        DashboardsFactory.getRecord = function() {\n            return $http.get($config.api_url + \"dashboard\");\n        };\n\n        DashboardsFactory.getCalenderRecord = function() {\n            return $http.get($config.api_url + \"dashboard/calender-data\");\n        };\n\n        DashboardsFactory.getTourDataTable = function(data) {\n            return $http({\n                method: 'POST',\n                url: $config.api_url + 'dashboard/upcoming-tour',\n                data: $.param(data),\n                headers: { 'Content-Type': 'application/x-www-form-urlencoded' }\n            });\n        };\n\n        return DashboardsFactory;\n    }]);\n})();\n/**\n * @author v.lugovksy\n * created on 16.12.2015\n */\n(function () {\n  'use strict';\nangular.module('BlurAdmin').factory('DefaulttasksFactory', ['$http', '$q', '$config', function($http, $q, $config) {\n    var DefaulttasksFactory = {};\n\n    DefaulttasksFactory.validation = {\n        task: { required: \"Task is required\", minlength: \"Task is too short\", maxlength: \"Task is too long\" },\n        status: { required: \"Please select status\" }\n    };\n\n    DefaulttasksFactory.addRecord = function(data) {\n        var formData = objectToFormData(data);\n        return $http.post($config.api_url + \"defaulttasks\", data /*formData, { headers: {'Content-Type': undefined }}*/);\n    };\n\n    DefaulttasksFactory.getRecord = function (id) {\n        return $http.get($config.api_url + \"defaulttasks/\" + id + \"/edit\");\n    };\n\n    DefaulttasksFactory.getRecords = function (id) {\n        return $http.get($config.api_url + \"defaulttasks/\" + id);\n    };\n\n    DefaulttasksFactory.getAllRecords = function () {\n        return $http.get($config.api_url + \"defaulttasks/getalldata\");\n    };\n\n    DefaulttasksFactory.updateRecord = function (id, data) {\n        var formData = objectToFormData(data);        \n        return $http.post($config.api_url + \"defaulttasks/\"+id, data /*formData, { headers: {'Content-Type': undefined }}*/);\n    };\n\n    DefaulttasksFactory.showDataTable = function(data) {\n        // return $http.get($config.api_url + \"defaulttasks/get-defaulttasks-list\");\n        return $http({\n            method: 'POST',\n            url: $config.api_url + 'defaulttasks/get-defaulttasks-list',\n            data: $.param(data),\n            headers: { 'Content-Type': 'application/x-www-form-urlencoded' }\n        });\n    };\n\n    DefaulttasksFactory.deleteRecord = function(data) {\n        return $http.delete($config.api_url + \"defaulttasks/\"+data);\n    };\n\n    return DefaulttasksFactory;\n}]);\n})();\n/**\n * @author v.lugovksy\n * created on 16.12.2015\n */\n(function () {\n  'use strict';\nangular.module('BlurAdmin').factory('LocationsFactory', ['$http', '$q', '$config', function($http, $q, $config) {\n    var LocationsFactory = {};\n\n    LocationsFactory.validation = {\n        name: { required: \"Name is required\", minlength: \"Name is too short\", maxlength: \"Name is too long\" },\n        description: { required: \"Description is required\" },\n        status: { required: \"Please select status\" }\n    };\n\n    LocationsFactory.addRecord = function(data) {\n        var formData = objectToFormData(data);\n        return $http.post($config.api_url + \"locations\", data /*formData, { headers: {'Content-Type': undefined }}*/);\n    };\n\n    LocationsFactory.getRecord = function (id) {\n        return $http.get($config.api_url + \"locations/\" + id + \"/edit\");\n    };\n\n    LocationsFactory.getRecords = function () {\n        return $http.get($config.api_url + \"locations\");\n    };\n\n    LocationsFactory.getAllRecords = function () {\n        return $http.get($config.api_url + \"locations/getalldata\");\n    };\n\n    LocationsFactory.updateRecord = function (id, data) {\n        var formData = objectToFormData(data);        \n        return $http.post($config.api_url + \"locations/\"+id, data /*formData, { headers: {'Content-Type': undefined }}*/);\n    };\n\n    LocationsFactory.showDataTable = function(data) {\n        // return $http.get($config.api_url + \"locations/get-locations-list\");\n        return $http({\n            method: 'POST',\n            url: $config.api_url + 'locations/get-locations-list',\n            data: $.param(data),\n            headers: { 'Content-Type': 'application/x-www-form-urlencoded' }\n        });\n    };\n\n    LocationsFactory.deleteRecord = function(data) {\n        return $http.delete($config.api_url + \"locations/\"+data);\n    };\n\n    return LocationsFactory;\n}]);\n})();\n/**\n * @author v.lugovksy\n * created on 16.12.2015\n */\n(function () {\n  'use strict';\n    angular.module('BlurAdmin').factory('MealcategoriesFactory', ['$http', '$q', '$config', function($http, $q, $config) {\n        var MealcategoriesFactory = {};\n\n        MealcategoriesFactory.validation = {\n            name: { required: \"Name is required\", minlength: \"Name is too short\", maxlength: \"Name is too long\" },\n            description: { required: \"Description is required\" },\n            status: { required: \"Please select status\" }\n        };\n\n        MealcategoriesFactory.addRecord = function(data) {\n            var formData = objectToFormData(data);\n            return $http.post($config.api_url + \"mealcategories\", data /*formData, { headers: {'Content-Type': undefined }}*/);\n        };\n\n        MealcategoriesFactory.getRecord = function (id) {\n            return $http.get($config.api_url + \"mealcategories/\" + id + \"/edit\");\n        };\n\n        MealcategoriesFactory.getRecords = function () {\n            return $http.get($config.api_url + \"mealcategories\");\n        };\n\n        MealcategoriesFactory.getAllRecords = function () {\n            return $http.get($config.api_url + \"mealcategories/getalldata\");\n        };\n\n        MealcategoriesFactory.updateRecord = function (id, data) {\n            var formData = objectToFormData(data);        \n            return $http.post($config.api_url + \"mealcategories/\"+id, data /*formData, { headers: {'Content-Type': undefined }}*/);\n        };\n\n        MealcategoriesFactory.showDataTable = function(data) {\n            // return $http.get($config.api_url + \"mealcategories/get-mealcategories-list\");\n            return $http({\n                method: 'POST',\n                url: $config.api_url + 'mealcategories/get-mealcategories-list',\n                data: $.param(data),\n                headers: { 'Content-Type': 'application/x-www-form-urlencoded' }\n            });\n        };\n\n        return MealcategoriesFactory;\n    }]);\n})();\n/**\n * @author v.lugovksy\n * created on 16.12.2015\n */\n(function () {\n  'use strict';\n    angular.module('BlurAdmin').factory('MealsFactory', ['$http', '$q', '$config', function($http, $q, $config) {\n        var MealsFactory = {};\n\n        MealsFactory.validation = {\n            name: { required: \"Name is required\", minlength: \"Name is too short\", maxlength: \"Name is too long\" },\n            description: { required: \"Description is required\" },\n            status: { required: \"Please select status\" }\n        };\n\n        MealsFactory.addRecord = function(data) {\n            var formData = objectToFormData(data);\n            return $http.post($config.api_url + \"meals\", data /*formData, { headers: {'Content-Type': undefined }}*/);\n        };\n\n        MealsFactory.getRecord = function (id) {\n            return $http.get($config.api_url + \"meals/\" + id + \"/edit\");\n        };\n\n        MealsFactory.getRecords = function () {\n            return $http.get($config.api_url + \"meals\");\n        };\n\n        MealsFactory.getAllRecords = function () {\n            return $http.get($config.api_url + \"meals/getalldata\");\n        };\n        \n        MealsFactory.updateRecord = function (id, data) {\n            var formData = objectToFormData(data);        \n            return $http.post($config.api_url + \"meals/\"+id, data /*formData, { headers: {'Content-Type': undefined }}*/);\n        };\n\n        MealsFactory.showDataTable = function(data) {\n            // return $http.get($config.api_url + \"meals/get-meals-list\");\n            return $http({\n                method: 'POST',\n                url: $config.api_url + 'meals/get-meals-list',\n                data: $.param(data),\n                headers: { 'Content-Type': 'application/x-www-form-urlencoded' }\n            });\n        };\n\n        MealsFactory.deleteRecord = function(data) {\n            return $http.delete($config.api_url + \"meals/\"+data);\n        };\n\n        return MealsFactory;\n    }]);\n})();\n/**\n * @author v.lugovksy\n * created on 16.12.2015\n */\n(function () {\n  'use strict';\n    angular.module('BlurAdmin').factory('MealservicelocationsFactory', ['$http', '$q', '$config', function($http, $q, $config) {\n        var MealservicelocationsFactory = {};\n\n        MealservicelocationsFactory.validation = {\n            name: { required: \"Name is required\", minlength: \"Name is too short\", maxlength: \"Name is too long\" },\n            description: { required: \"Description is required\" },\n            status: { required: \"Please select status\" }\n        };\n\n        MealservicelocationsFactory.addRecord = function(data) {\n            var formData = objectToFormData(data);\n            return $http.post($config.api_url + \"mealservicelocations\", data /*formData, { headers: {'Content-Type': undefined }}*/);\n        };\n\n        MealservicelocationsFactory.getRecord = function (id) {\n            return $http.get($config.api_url + \"mealservicelocations/\" + id + \"/edit\");\n        };\n\n        MealservicelocationsFactory.getRecords = function () {\n            return $http.get($config.api_url + \"mealservicelocations\");\n        };\n\n        MealservicelocationsFactory.getAllRecords = function () {\n            return $http.get($config.api_url + \"mealservicelocations/getalldata\");\n        };\n\n        MealservicelocationsFactory.updateRecord = function (id, data) {\n            var formData = objectToFormData(data);        \n            return $http.post($config.api_url + \"mealservicelocations/\"+id, data /*formData, { headers: {'Content-Type': undefined }}*/);\n        };\n\n        MealservicelocationsFactory.showDataTable = function(data) {\n            // return $http.get($config.api_url + \"mealservicelocations/get-mealservicelocations-list\");\n            return $http({\n                method: 'POST',\n                url: $config.api_url + 'mealservicelocations/get-mealservicelocations-list',\n                data: $.param(data),\n                headers: { 'Content-Type': 'application/x-www-form-urlencoded' }\n            });\n        };\n\n        MealservicelocationsFactory.deleteRecord = function(data) {\n            return $http.delete($config.api_url + \"mealservicelocations/\"+data);\n        };\n\n        return MealservicelocationsFactory;\n    }]);\n})();\n/**\n * @author v.lugovksy\n * created on 16.12.2015\n */\n(function () {\n  'use strict';\n    angular.module('BlurAdmin').factory('MealservicetypesFactory', ['$http', '$q', '$config', function($http, $q, $config) {\n        var MealservicetypesFactory = {};\n\n        MealservicetypesFactory.validation = {\n            name: { required: \"Name is required\", minlength: \"Name is too short\", maxlength: \"Name is too long\" },\n            cost: { required: \"Cost is required\", minlength: \"Cost is too short\", maxlength: \"Cost is too long\" },\n            description: { required: \"Description is required\" },\n            status: { required: \"Please select status\" }\n        };\n\n        MealservicetypesFactory.addRecord = function(data) {\n            var formData = objectToFormData(data);\n            return $http.post($config.api_url + \"mealservicetypes\", data /*formData, { headers: {'Content-Type': undefined }}*/);\n        };\n\n        MealservicetypesFactory.getRecord = function (id) {\n            return $http.get($config.api_url + \"mealservicetypes/\" + id + \"/edit\");\n        };\n\n        MealservicetypesFactory.getRecords = function () {\n            return $http.get($config.api_url + \"mealservicetypes\");\n        };\n\n        MealservicetypesFactory.getAllRecords = function () {\n            return $http.get($config.api_url + \"mealservicetypes/getalldata\");\n        };\n\n        MealservicetypesFactory.updateRecord = function (id, data) {\n            var formData = objectToFormData(data);        \n            return $http.post($config.api_url + \"mealservicetypes/\"+id, data /*formData, { headers: {'Content-Type': undefined }}*/);\n        };\n\n        MealservicetypesFactory.showDataTable = function(data) {\n            // return $http.get($config.api_url + \"mealservicetypes/get-mealservicetypes-list\");\n            return $http({\n                method: 'POST',\n                url: $config.api_url + 'mealservicetypes/get-mealservicetypes-list',\n                data: $.param(data),\n                headers: { 'Content-Type': 'application/x-www-form-urlencoded' }\n            });\n        };\n\n        MealservicetypesFactory.deleteRecord = function(data) {\n            return $http.delete($config.api_url + \"mealservicetypes/\"+data);\n        };\n        return MealservicetypesFactory;\n    }]);\n})();\n/**\n * @author v.lugovksy\n * created on 16.12.2015\n */\n(function() {\n    'use strict';\n    angular.module('BlurAdmin').factory('MomentosFactory', ['$http', '$q', '$config', function($http, $q, $config) {\n        var MomentosFactory = {};\n\n        MomentosFactory.validation = {\n            name: { required: \"Name is required\", minlength: \"Name is too short\", maxlength: \"Name is too long\" },\n            description: { required: \"Description is required\" },\n            status: { required: \"Please select status\" }\n        };\n\n        MomentosFactory.addRecord = function(data) {\n            var formData = objectToFormData(data);\n            return $http.post($config.api_url + \"momento\", data /*formData, { headers: { 'Content-Type': undefined } }*/);\n        };\n\n        MomentosFactory.getRecord = function(id) {\n            return $http.get($config.api_url + \"momento/\" + id + \"/edit\");\n        };\n\n        MomentosFactory.getRecords = function() {\n            return $http.get($config.api_url + \"momento\");\n        };\n\n        MomentosFactory.getAllRecords = function () {\n            return $http.get($config.api_url + \"momento/getalldata\");\n        };\n\n        MomentosFactory.updateRecord = function(id, data) {\n            var formData = objectToFormData(data);\n            return $http.post($config.api_url + \"momento/\" + id, data /*formData, { headers: { 'Content-Type': undefined } }*/);\n        };\n\n        MomentosFactory.showDataTable = function(data) {\n            return $http({\n                method: 'POST',\n                url: $config.api_url + 'momento/get-momento-list',\n                data: $.param(data),\n                headers: { 'Content-Type': 'application/x-www-form-urlencoded' }\n            });\n        };\n\n        MomentosFactory.deleteRecord = function(data) {\n            return $http.delete($config.api_url + \"momento/\"+data);\n        };\n\n        return MomentosFactory;\n    }]);\n})();\n/**\n * @author v.lugovksy\n * created on 16.12.2015\n */\n(function() {\n    'use strict';\n    angular.module('BlurAdmin').factory('NotificationsFactory', ['$http', '$q', '$config', function($http, $q, $config) {\n        var NotificationsFactory = {};\n\n        NotificationsFactory.validation = {\n            name: { required: \"Name is required\", minlength: \"Name is too short\", maxlength: \"Name is too long\" },\n            description: { required: \"Description is required\" },\n            status: { required: \"Please select status\" }\n        };\n\n        NotificationsFactory.addRecord = function(data) {\n            var formData = objectToFormData(data);\n            return $http.post($config.api_url + \"notifications\", formData, { headers: { 'Content-Type': undefined } });\n        };\n\n        NotificationsFactory.getRecord = function(id) {\n            return $http.get($config.api_url + \"notifications/\" + id + \"/edit\");\n        };\n\n        NotificationsFactory.getRecords = function() {\n            return $http.get($config.api_url + \"notifications\");\n        };\n\n        NotificationsFactory.updateRecord = function(id, data) {\n            var formData = objectToFormData(data);\n            return $http.post($config.api_url + \"notifications/\" + id, formData, { headers: { 'Content-Type': undefined } });\n        };\n\n        NotificationsFactory.showDataTable = function(data) {\n            // return $http.get($config.api_url + \"notifications/get-notifications-list\");\n            return $http({\n                method: 'POST',\n                url: $config.api_url + 'notifications/get-notifications-list',\n                data: $.param(data),\n                headers: { 'Content-Type': 'application/x-www-form-urlencoded' }\n            });\n        };\n\n        NotificationsFactory.headerNotification = function(id) {\n            return $http.get($config.api_url + \"notifications/get-recent-notifications\");\n        };\n\n        NotificationsFactory.markReadNotification = function(data) {\n            return $http.post($config.api_url + \"notifications/mark-read-to-notification\", data);\n        };\n\n        return NotificationsFactory;\n    }]);\n})();\n/**\n * @author v.lugovksy\n * created on 16.12.2015\n */\n(function () {\n  'use strict';\n    angular.module('BlurAdmin').factory('OrganizationsFactory', ['$http', '$q', '$config', function($http, $q, $config) {\n        var OrganizationsFactory = {};\n\n        OrganizationsFactory.validation = {\n            name: { required: \"Name is required\", minlength: \"Name is too short\", maxlength: \"Name is too long\" },\n            description: { required: \"Description is required\" },\n            status: { required: \"Please select status\" }\n        };\n\n        OrganizationsFactory.addRecord = function(data) {\n            /*var formData = objectToFormData(data);\n            return $http.post($config.api_url + \"organizations\", formData, { headers: {'Content-Type': undefined }});*/\n            return $http.post($config.api_url + \"organizations\", data);\n        };\n\n        OrganizationsFactory.getRecord = function (id) {\n            return $http.get($config.api_url + \"organizations/\" + id + \"/edit\");\n        };\n\n        OrganizationsFactory.getRecords = function () {\n            return $http.get($config.api_url + \"organizations\");\n        };\n\n        OrganizationsFactory.getAllRecords = function () {\n            return $http.get($config.api_url + \"organizations/getalldata\");\n        };\n\n        OrganizationsFactory.updateRecord = function (id, data) {\n            /*var formData = objectToFormData(data);        \n            return $http.post($config.api_url + \"organizations/\"+id, formData, { headers: {'Content-Type': undefined }});*/\n            return $http.post($config.api_url + \"organizations/\"+id, data);\n        };\n\n        OrganizationsFactory.showDataTable = function(data) {\n            // return $http.get($config.api_url + \"organizations/get-organizations-list\");\n            return $http({\n                method: 'POST',\n                url: $config.api_url + 'organizations/get-organizations-list',\n                data: $.param(data),\n                headers: { 'Content-Type': 'application/x-www-form-urlencoded' }\n            });\n        };\n\n        OrganizationsFactory.deleteRecord = function(data) {\n            return $http.delete($config.api_url + \"organizations/\"+data);\n        };\n\n        return OrganizationsFactory;\n    }]);\n})();\n/**\n * @author v.lugovksy\n * created on 16.12.2015\n */\n(function () {\n  'use strict';\nangular.module('BlurAdmin').factory('RolesFactory', ['$http', '$q', '$config', function($http, $q, $config) {\n    var RolesFactory = {};\n\n    RolesFactory.validation = {\n            name: {required: \"Role name is required\", minlength : \"Role name is too short\", maxlength : \"Role name is too long\"},\n            description: {required: \"Role description is required\",minlength : \"Role description is too short\", maxlength : \"Role description is too long\"}\n        };\n\n        RolesFactory.getAllRole = function () {\n            return $http.get($config.api_url + \"roles\");\n        };\n\n        RolesFactory.getRole = function (role_id) {\n            return $http.get($config.api_url + \"roles/\" + role_id + \"/edit\");\n        };\n\n        RolesFactory.getRolePermisssions = function (id) {\n            return $http.post($config.api_url + \"get-role-permission\", {id: id});\n        };\n\n        RolesFactory.addRole = function (data) {\n            return $http.post($config.api_url + \"roles\", data);\n        };\n\n        RolesFactory.updateRole = function (id, data) {\n            return $http.put($config.api_url + \"roles/\" + id, data);\n        };\n\n        RolesFactory.showDataTable = function (data) {\n            return $http({\n                method: 'POST',\n                url: $config.api_url + 'roles/get-roles-list',\n                data: $.param(data),\n                headers: {'Content-Type': 'application/x-www-form-urlencoded'}\n            });\n        };\n\n        RolesFactory.changeUserRole = function(data) {\n            return $http.post($config.api_url + \"roles/change-user-role\", data);\n        };\n\n        RolesFactory.roleList = function(data) {\n            return $http.post($config.api_url + \"roles/role-list\", data);\n        };\n\n        RolesFactory.getAllPermission = function() {\n            return $http.post($config.api_url + \"permission/get-permissions\");\n        };\n\n        RolesFactory.deleteRecord = function(data) {\n            return $http.delete($config.api_url + \"roles/\"+data);\n        };\n        return RolesFactory;\n}]);\n})();\n/**\n * @author v.lugovksy\n * created on 16.12.2015\n */\n(function () {\n  'use strict';\n    angular.module('BlurAdmin').factory('SettingsFactory', ['$http', '$q', '$config', function($http, $q, $config) {\n        var SettingsFactory = {};\n\n        SettingsFactory.validation = {\n            admin_email: {required: \"Admin email is required\", invalidEmail: \"Email is not valid\", minlength : \"Admin email is too short\", maxlength : \"Admin email is too long\"},\n            confirm_link_expired: {required: \"Hours is required\",minlength : \"Hours is too short\", maxlength : \"Hours is too long\"}\n        };\n\n        SettingsFactory.getAllSettings = function () {\n            return $http.get($config.api_url + \"settings\");\n        };\n\n        SettingsFactory.updateRecord = function (id, data) {\n            return $http.put($config.api_url + \"settings/\" + id, data);\n        };\n\n        return SettingsFactory;\n    }]);\n})();\n/**\n * @author v.lugovksy\n * created on 16.12.2015\n */\n(function () {\n  'use strict';\n    angular.module('BlurAdmin').factory('ToursFactory', ['$http', '$q', '$config', function($http, $q, $config) {\n        var ToursFactory = {};\n\n        ToursFactory.validation = {\n            name: { required: \"Name is required\", minlength: \"Name is too short\", maxlength: \"Name is too long\" },\n            start_date: { required: \"Please select tour date\" },\n            transport_id: { required: \"Please select transport type.\" },\n            tourtype_id: { required: \"Please select tour type.\" },\n            location_id: { required: \"Please select location.\" },\n            meal_id: { required: \"Please select meal type.\" },\n            catering_manager: { required: \"Please select catering manager.\" },\n            meal_service_type_id: { required: \"Please select meal service type.\" },\n            meal_service_location_id: { required: \"Please select meal service location.\" },\n            contact_manager: { required: \"Please select contact person.\" },\n            specific_item: { required: \"Specific item is required\", minlength: \"Specific item is too short\", maxlength: \"Specific item is too long\" },\n            people: { required: \"People count is required\", minlength: \"People count is too short\", maxlength: \"People count is too long\" },\n            senior: { required: \"Senior count is required\", minlength: \"Senior count is too short\", maxlength: \"Senior count is too long\" },\n            adults: { required: \"Adults count is required\", minlength: \"Adults count is too short\", maxlength: \"Adults count is too long\" },\n            children: { required: \"Children count is required\", minlength: \"Children count is too short\", maxlength: \"Children count is too long\" },\n            organization: { required: \"Organization name is required\", minlength: \"Organization name is too short\", maxlength: \"Organization name is too long\" },\n            description: { required: \"Description is required\" },\n            request: { required: \"Special request is required\" },\n            status: { required: \"Please select status\" },\n\n            link: { required: \"Link is required\", error: \"Please enter proper link\" },\n            title: { required: \"Title is required\", minlength: \"Title is too short\", maxlength: \"Title is too long\" },\n            note: { required: \"Note is required\", minlength: \"Note is too short\", maxlength: \"Note is too long\" },\n\n            feedback: { required: \"Feedback is required\" },\n            manager: { required: \"Please select tour manager\" },\n            budget: { required: \"Budget is required\", minlength: \"Budget is too short\", maxlength: \"Budget is too long\" },\n            expense_field: { required: \"Expense field is required\", minlength: \"Expense field is too short\", maxlength: \"Expense field is too long\" },\n        };\n\n        ToursFactory.addRecord = function(data) {\n            // var formData = objectToFormData(data);\n            return $http.post($config.api_url + \"tours\", data);\n        };\n\n        ToursFactory.getRecord = function (id) {\n            return $http.get($config.api_url + \"tours/\" + id + \"/edit\");\n        };\n\n        ToursFactory.getRecords = function (id) {\n            return $http.get($config.api_url + \"tours/\" + id);\n        };\n\n        ToursFactory.updateRecord = function (id, data) {\n            // var formData = objectToFormData(data);\n            return $http.post($config.api_url + \"tours/\"+id, data);\n        };\n\n        ToursFactory.viewRecord = function (id) {\n            return $http.get($config.api_url + \"tours/\"+ id);\n        };\n\n        ToursFactory.viewFeedback = function (id) {\n            return $http.get($config.api_url + \"tours/feedback/\"+ id);\n        };\n\n        ToursFactory.addFeedback = function(data) {\n            return $http.post($config.api_url + \"tours/add-feedback\", data);\n        };\n        \n        ToursFactory.actionRecord = function (data) {\n            return $http.post($config.api_url + \"tours/tour-action\", data);\n        };\n\n        ToursFactory.resend = function (data) {\n            return $http.post($config.api_url + \"tours/resendlink\", data);\n        };\n\n        ToursFactory.deleteVisitor = function (data) {\n            return $http.post($config.api_url + \"tours/delete-visitor\", data);\n        };\n\n        ToursFactory.showDataTable = function(data) {\n            return $http({\n                method: 'POST',\n                url: $config.api_url + 'tours/get-tours-list',\n                data: $.param(data),\n                headers: { 'Content-Type': 'application/x-www-form-urlencoded' }\n            });\n        };\n\n        ToursFactory.addTask = function(data) {\n            return $http.post($config.api_url + \"tours/add-task\", data);\n        };\n\n        ToursFactory.updateTask = function (data) {\n            return $http.post($config.api_url + \"tours/update-task\", data);\n        };\n\n        ToursFactory.getOrganization = function () {\n            return $http.get($config.api_url + \"tours/organization-name\");\n        };\n\n        ToursFactory.actionTask = function (data) {\n            return $http.post($config.api_url + \"tours/action-task\", data);\n        };\n\n        ToursFactory.deleteTask = function (id) {\n            var data = {\n                id:id\n            };\n            return $http.post($config.api_url + \"tours/delete-task\", data);\n        };\n\n\n        ToursFactory.tourDocument = function (data) {\n            return $http.post($config.api_url + \"tours/tour-document\", data);\n        };\n\n        ToursFactory.deleteDocument = function (data) {\n            return $http.post($config.api_url + \"tours/delete-document\", data);\n        };\n\n        ToursFactory.tourNote = function (data) {\n            return $http.post($config.api_url + \"tours/tour-notes\", data);\n        };\n\n        ToursFactory.deleteNote = function (data) {\n            return $http.post($config.api_url + \"tours/delete-notes\", data);\n        };\n\n        ToursFactory.deleteRecord = function(data) {\n            return $http.delete($config.api_url + \"tours/\"+data);\n        };\n\n        return ToursFactory;\n    }]);\n})();\n/**\n * @author v.lugovksy\n * created on 16.12.2015\n */\n(function () {\n  'use strict';\n    angular.module('BlurAdmin').factory('TourtypesFactory', ['$http', '$q', '$config', function($http, $q, $config) {\n        var TourtypesFactory = {};\n\n        TourtypesFactory.validation = {\n            name: { required: \"Name is required\", minlength: \"Name is too short\", maxlength: \"Name is too long\" },\n            status: { required: \"Please select status\" }\n        };\n\n        TourtypesFactory.addRecord = function(data) {\n            var formData = objectToFormData(data);\n            return $http.post($config.api_url + \"tourtypes\", data /*formData, { headers: {'Content-Type': undefined }}*/);\n        };\n\n        TourtypesFactory.getRecord = function (id) {\n            return $http.get($config.api_url + \"tourtypes/\" + id + \"/edit\");\n        };\n\n        TourtypesFactory.getRecords = function () {\n            return $http.get($config.api_url + \"tourtypes\");\n        };\n\n        TourtypesFactory.viewRecord = function (id) {\n            return $http.get($config.api_url + \"tourtypes/\"+ id);\n        };\n\n        TourtypesFactory.getAllRecords = function () {\n            return $http.get($config.api_url + \"tourtypes/getalldata\");\n        };\n\n        TourtypesFactory.getAllRecords = function () {\n            return $http.post($config.api_url + \"tourtypes/get-all-tourtype\");\n        };\n\n        TourtypesFactory.updateRecord = function (id, data) {\n            var formData = objectToFormData(data);        \n            return $http.post($config.api_url + \"tourtypes/\"+id, data /*formData, { headers: {'Content-Type': undefined }}*/);\n        };\n\n        TourtypesFactory.showDataTable = function(data) {\n            return $http({\n                method: 'POST',\n                url: $config.api_url + 'tourtypes/get-tourtypes-list',\n                data: $.param(data),\n                headers: { 'Content-Type': 'application/x-www-form-urlencoded' }\n            });\n        };\n\n        TourtypesFactory.deleteRecord = function(data) {\n            return $http.delete($config.api_url + \"tourtypes/\"+data);\n        };\n\n        return TourtypesFactory;\n    }]);\n})();\n/**\n * @author v.lugovksy\n * created on 16.12.2015\n */\n(function () {\n  'use strict';\nangular.module('BlurAdmin').factory('TransportsFactory', ['$http', '$q', '$config', function($http, $q, $config) {\n    var TransportsFactory = {};\n\n    TransportsFactory.validation = {\n        name: { required: \"Name is required\", minlength: \"Name is too short\", maxlength: \"Name is too long\" },\n        description: { required: \"Description is required\" },\n        status: { required: \"Please select status\" }\n    };\n\n    TransportsFactory.addRecord = function(data) {\n        var formData = objectToFormData(data);\n        return $http.post($config.api_url + \"transports\", data /*formData, { headers: {'Content-Type': undefined }}*/);\n    };\n\n    TransportsFactory.getRecord = function (id) {\n        return $http.get($config.api_url + \"transports/\" + id + \"/edit\");\n    };\n\n    TransportsFactory.getRecords = function () {\n        return $http.get($config.api_url + \"transports\");\n    };\n\n    TransportsFactory.getAllRecords = function () {\n        return $http.get($config.api_url + \"transports/getalldata\");\n    };\n\n    TransportsFactory.updateRecord = function (id, data) {\n        var formData = objectToFormData(data);        \n        return $http.post($config.api_url + \"transports/\"+id, data /*formData, { headers: {'Content-Type': undefined }}*/);\n    };\n\n    TransportsFactory.showDataTable = function(data) {\n        // return $http.get($config.api_url + \"transports/get-transports-list\");\n        return $http({\n            method: 'POST',\n            url: $config.api_url + 'transports/get-transports-list',\n            data: $.param(data),\n            headers: { 'Content-Type': 'application/x-www-form-urlencoded' }\n        });\n    };\n\n    TransportsFactory.deleteRecord = function(data) {\n        return $http.delete($config.api_url + \"transports/\"+data);\n    };\n\n    return TransportsFactory;\n}]);\n})();\n/**\n * @author v.lugovksy\n * created on 16.12.2015\n */\n(function () {\n  'use strict';\nangular.module('BlurAdmin').factory('UsersFactory', ['$http', '$q', '$config', function($http, $q, $config) {\n    var UsersFactory = {};\n\n    UsersFactory.validation = {\n        name: { required: \"Name is required\", minlength: \"Name is too short\", maxlength: \"Name is too long\" },\n        description: { required: \"Description is required\" },\n        first_name: { required: \"First name is required\", minlength: \"First name is too short\", maxlength: \"First name is too long\" },\n        last_name: { required: \"Last name is required\", minlength: \"Last name is too short\", maxlength: \"Last name is too long\" },\n        email: { required: \"Email is required\", invalidEmail: \"Email is not valid\", minlength: \"Email is too short\", maxlength: \"Email is too long\" },\n        phone_number: { required: \"Phone number is required\", minlength: \"Phone number is too short\", maxlength: \"Phone number is too long\" },\n        mobile: { required: \"Mobile number is required\", minlength: \"Mobile number is too short\", maxlength: \"Mobile number is too long\" },\n        address: { required: \"Street 1 is required\", minlength: \"Street 1 is too short\", maxlength: \"Street 1 is too long\" },\n        address1: { required: \"Street 2 is required\", minlength: \"Street 2 is too short\", maxlength: \"Street 2 is too long\" },\n        gender: { required: \"Please select gender\"},\n        dob: { required: \"Birth date is required\"},\n        status: { required: \"Please select status\"},\n        user_type: { required: \"Please select user type\"},\n        country_id: { required: \"Please select country\"},\n        state: { required: \"State is required\", minlength: \"State is too short\", maxlength: \"State is too long\" },\n        city: { required: \"City is required\", minlength: \"City is too short\", maxlength: \"City is too long\" },\n        zip_code: { required: \"Zip code is required\", minlength: \"Zip code is too short\", maxlength: \"Zip code is too long\" },\n        image: { required: \"File is required\", pdfFile: \"Please upload only image.\", maxSize: \"File is too large\" },\n\n        password: { required: \"Password is required\", minlength: \"Password is too short\", maxlength: \"Password is too long\" },\n        new_password: { required: \"New password is required\", minlength: \"New password is too short\", maxlength: \"New password is too long\" },\n        confirm_password: { required: \"Confirm password is required\" },\n    };\n\n    UsersFactory.addRecord = function(data) {\n        // var formData = objectToFormData(data);\n        var formData = objectToFormData(data);\n        return $http.post($config.api_url + \"users\", formData, { headers: {'Content-Type': undefined }});\n        // return $http.post($config.api_url + \"users\", data);\n    };\n\n    UsersFactory.getRecord = function (id) {\n        return $http.get($config.api_url + \"users/\" + id + \"/edit\");\n    };\n\n    UsersFactory.getRecords = function () {\n        return $http.get($config.api_url + \"users\");\n    };\n\n    UsersFactory.getTourManager = function () {\n        return $http.get($config.api_url + \"users/tour-manager\");\n    };\n\n    UsersFactory.updateRecord = function (id, data) {\n        var formData = objectToFormData(data);\n        // return $http.post($config.api_url + \"users/\"+id, data);\n        return $http.post($config.api_url + \"users/\"+id, formData, { headers: {'Content-Type': undefined }});\n    };\n\n    UsersFactory.editProfile = function (id, data) {\n        var formData = objectToFormData(data);\n        return $http.post($config.api_url + \"users/\"+id, formData, { headers: {'Content-Type': undefined }});\n        // return $http.post($config.api_url + \"users/\"+id, data);\n    };\n\n    UsersFactory.getVolunteers = function (data) {\n        return $http.post($config.api_url + \"users/get-volunteers-user\", data);\n    };\n\n    UsersFactory.getCountry = function () {\n        return $http.get($config.api_url + \"get-countries\");\n    };\n\n    UsersFactory.updatePassword = function(id, data) {\n        data._method = \"PUT\";\n        return $http.post($config.api_url + \"users/change-password/\" + id, data);\n    };\n\n    UsersFactory.updateAvailability = function(id, data) {\n        data._method = \"PUT\";\n        return $http.post($config.api_url + \"users/change-availability/\" + id, data);\n    };\n\n    UsersFactory.changePassword = function(id, data) {\n        data._method = \"PUT\";\n        return $http.post($config.api_url + \"users/admin-change-password/\" + id, data);\n    };\n\n    UsersFactory.resendEmail = function (data) {\n        return $http.post($config.api_url + \"users/resend-welcome-email\", data);\n    };\n    \n    UsersFactory.showDataTable = function(data) {\n        return $http({\n            method: 'POST',\n            url: $config.api_url + 'users/get-users-list',\n            data: $.param(data),\n            headers: { 'Content-Type': 'application/x-www-form-urlencoded' }\n        });\n    };\n\n    UsersFactory.showAvailabilitiesDataTable = function(data) {\n        return $http({\n            method: 'POST',\n            url: $config.api_url + 'users/get-availabilities-list',\n            data: $.param(data),\n            headers: { 'Content-Type': 'application/x-www-form-urlencoded' }\n        });\n    };\n\n    UsersFactory.deleteRecord = function(data) {\n        return $http.delete($config.api_url + \"users/\"+data);\n    };\n\n    return UsersFactory;\n}]);\n})();\n/**\n * @author v.lugovksy\n * created on 16.12.2015\n */\n(function () {\n  'use strict';\nangular.module('BlurAdmin').factory('VisitorsFactory', ['$http', '$q', '$config', function($http, $q, $config) {\n    var VisitorsFactory = {};\n\n    VisitorsFactory.validation = {\n        name: { required: \"Name is required\", minlength: \"Name is too short\", maxlength: \"Name is too long\" },\n        description: { required: \"Description is required\" },\n        status: { required: \"Please select status\" }\n    };\n\n    VisitorsFactory.addRecord = function(data) {\n        var formData = objectToFormData(data);\n        return $http.post($config.api_url + \"visitors\", data /*formData, { headers: {'Content-Type': undefined }}*/);\n    };\n\n    VisitorsFactory.getRecord = function (id) {\n        return $http.get($config.api_url + \"visitors/\" + id + \"/edit\");\n    };\n\n    VisitorsFactory.getRecords = function () {\n        return $http.get($config.api_url + \"visitors\");\n    };\n\n    VisitorsFactory.getAllRecords = function () {\n        return $http.get($config.api_url + \"visitors/getalldata\");\n    };\n\n    VisitorsFactory.updateRecord = function (id, data) {\n        var formData = objectToFormData(data);        \n        return $http.post($config.api_url + \"visitors/\"+id, data /*formData, { headers: {'Content-Type': undefined }}*/);\n    };\n\n    VisitorsFactory.showDataTable = function(data) {\n        // return $http.get($config.api_url + \"visitors/get-visitors-list\");\n        return $http({\n            method: 'POST',\n            url: $config.api_url + 'visitors/get-visitors-list',\n            data: $.param(data),\n            headers: { 'Content-Type': 'application/x-www-form-urlencoded' }\n        });\n    };\n\n    VisitorsFactory.deleteRecord = function(data) {\n        return $http.delete($config.api_url + \"visitors/\"+data);\n    };\n\n    return VisitorsFactory;\n}]);\n})();\nfunction isObject (value) {\n  return value === Object(value)\n}\n\nfunction isArray (value) {\n  return Array.isArray(value)\n}\n\nfunction isFile (value) {\n  return value instanceof File\n}\n\nfunction objectToFormData (obj, fd, pre) {\n  fd = fd || new FormData()\n\n  Object.keys(obj).forEach(function (prop) {\n    var key = pre ? (pre + '[' + prop + ']') : prop\n\n    if (isObject(obj[prop]) && !isArray(obj[prop]) && !isFile(obj[prop])) {\n      objectToFormData(obj[prop], fd, key)\n    } else if (isArray(obj[prop])) {\n      obj[prop].forEach(function (value) {\n        var arrayKey = key + '[]'\n\n        if (isObject(value) && !isFile(value)) {\n          objectToFormData(value, fd, arrayKey)\n        } else {\n          fd.append(arrayKey, value)\n        }\n      })\n    } else {\n      fd.append(key, obj[prop])\n    }\n  })\n\n  return fd\n}\n/**\n * @author v.lugovsky\n * created on 16.12.2015\n */\n(function() {\n    'use strict';\n\n    angular.module('BlurAdmin.pages.ApiManagements')\n        .controller('AddApiManagementsCtrl', AddApiManagementsCtrl);\n\n    /** @ngInject */\n    function AddApiManagementsCtrl($scope, fileReader, $filter, $uibModal, $rootScope, $compile, ApiManagementsFactory, $timeout, $stateParams, $state, $injector, Notification, $q) {\n        $scope.pageName = 'Add API';\n        $scope.btnName = 'Add';\n        $scope.isSubmitted = false;\n\n        $scope.errorMessage = ApiManagementsFactory.validation;\n        var $validationProvider = $injector.get('$validation');\n\n        $scope.formscope = { status: 1 };\n        $scope.formscope.api_key = $scope.randomString(16);\n\n        $scope.statusOption = [\n            { 'value': 2, 'text': 'Inactive' },\n            { 'value': 1, 'text': 'Active' }\n        ];\n\n        $scope.changeKey = function() {\n            $scope.formscope.api_key = $scope.randomString(16);\n        };\n\n        $scope.add_data = function(form) {\n            var data = $scope.formscope.slug;\n            $validationProvider.validate(form).success(function() {\n                $scope.isSubmitted = true;\n                ApiManagementsFactory.addRecord($scope.formscope).success(function(res) {\n                    Notification.success(res.success);\n                    $state.go('ApiManagements.list');\n                    $scope.isSubmitted = false;\n                }).error(function(err) {\n                    Notification.error(err.error);\n                    $scope.isSubmitted = false;\n                });\n            }).error(function() {\n                $scope.isSubmitted = false;\n            });\n        };\n    }\n})();\n/**\n * @author v.lugovsky\n * created on 16.12.2015\n */\n(function() {\n    'use strict';\n\n    angular.module('BlurAdmin.pages.ApiManagements')\n        .controller('ApiManagementsCtrl', ApiManagementsCtrl);\n\n    /** @ngInject */\n    function ApiManagementsCtrl($scope, fileReader, $filter, $uibModal, $rootScope, $compile, ApiManagementsFactory, $timeout, $stateParams, $state, $injector, DTOptionsBuilder, DTColumnBuilder, Notification) {\n        $scope.pageName = 'API Managements';\n\n        $scope.reloadData = function() {\n          $scope.dtInstance.rerender();\n      };\n\n      $scope.createdRow = function(row, data, dataIndex) {\n           // Recompiling so we can bind Angular directive to the DT\n           $compile(angular.element(row).contents())($scope);\n      };\n      \n      $scope.deleteRecord = function(id) {\n            ApiManagementsFactory.deleteRecord(id).success(function (res) {\n                Notification.success(res.success);\n                $state.reload();\n            }).error(function (err) {\n                Notification.error(err.error);\n            });\n        }\n\n      $scope.actionRoles = function(data, type, full) {\n          return \"<a ui-sref='ApiManagements.edit({ id: \" + full.id + \" })'><i class='fa fa-edit'></i></a> <a ng-if=\\\"havePermission('api_managements','delete');\\\" ng-confirm-click='Are you sure to delete this API?' confirmed-click='deleteRecord(\" + full.id + \")'><i class='fa fa-trash'></i></a>\";\n      };\n    \n      $scope.statusAction = function(data, type, full) {\n            if(data.status != '1') {\n                return '<small class=\"label label-danger\">Inactive</small>';\n            }\n            else {\n                return '<small class=\"label label-success\">Active</small>';\n            }\n        };\n\n      $scope.indexNumber = function(data, type, full, row) {\n            var i = Number(row.row) + Number(1);\n            var ind = row.settings._iDisplayStart + i;\n            return \"<span>\" + ind + \"</span>\";\n        };\n      \n      $scope.dtOptions = DTOptionsBuilder.newOptions()\n            .withDataProp('data')\n            .withOption('ajax', function(data, callback, settings) {\n                // map your server's response to the DataTables format and pass it to\n                ApiManagementsFactory.showDataTable(data).success(function(res) {\n                    if (res.error)\n                        $scope.reloadData();\n                    else\n                        callback(res);\n                }).error(function(err) {\n                    if (err)\n                        $scope.reloadData();\n                });\n            })\n            .withOption('processing', true)\n            .withOption('serverSide', true)\n            .withPaginationType('simple_numbers')\n            .withOption('order', [0, 'desc'])\n            .withDOM('lftip')\n            .withOption('searchDelay', 500)\n            .withOption('createdRow', $scope.createdRow);\n\n        $scope.dtColumns = [\n            DTColumnBuilder.newColumn('id').withTitle('No').withOption('searchable', false).renderWith($scope.indexNumber).withClass('table-index'),\n            DTColumnBuilder.newColumn('name').withTitle('Company Name').withOption('searchable', true),\n            DTColumnBuilder.newColumn('ipaddress').withTitle('IP Address').withOption('searchable', true),\n            DTColumnBuilder.newColumn('api_key').withTitle('API Key').withOption('searchable', true),\n            DTColumnBuilder.newColumn('slug').withTitle('Slug').withOption('searchable', true),\n            DTColumnBuilder.newColumn(null).withTitle('Status').withOption('searchable', false).notSortable().renderWith($scope.statusAction),\n            DTColumnBuilder.newColumn(null).withTitle('Action').withOption('searchable', false).notSortable().renderWith($scope.actionRoles)\n        ];\n    }\n})();\n/**\n * @author v.lugovsky\n * created on 16.12.2015\n */\n(function () {\n  'use strict';\n\n  angular.module('BlurAdmin.pages.ApiManagements')\n    .controller('EditApiManagementsCtrl', EditApiManagementsCtrl);\n\n  /** @ngInject */\n  function EditApiManagementsCtrl($scope, fileReader, $filter, $uibModal, $rootScope, $compile, $timeout, $stateParams, $state, $injector, Notification, ApiManagementsFactory) {\n        $scope.pageName = 'Edit API';\n        $scope.btnName = 'Update';\n        $scope.isSubmitted = false;\n        $scope.urlID = $stateParams.id;\n\n        $scope.statusOption = [\n            { 'value': 2, 'text': 'Inactive' },\n            { 'value': 1, 'text': 'Active' }\n        ];\n\n        var $validationProvider = $injector.get('$validation');\n         $scope.errorMessage = ApiManagementsFactory.validation;\n\n        ApiManagementsFactory.getRecord($scope.urlID).success(function(response) {\n            $scope.formscope = response.data;\n        }).error(function(error) {\n            Notification.error(error.error);\n            $state.go('ApiManagements.list');\n        });\n\n        $scope.changeKey = function() {\n            $scope.formscope.api_key = $scope.randomString(16);\n        };\n\n        $scope.add_data = function(form) {\n            $validationProvider.validate(form).success(function() {\n                $scope.isSubmitted = true;\n                $scope.formscope._method = 'PUT';\n                \n                ApiManagementsFactory.updateRecord($scope.urlID, $scope.formscope).success(function(res) {\n                    Notification.success(res.success);\n                    $state.go('ApiManagements.list');\n                    $scope.isSubmitted = false;\n                }).error(function(err) {\n                    Notification.error(err.error);\n                    $scope.isSubmitted = false;\n                });\n            }).error(function() {\n                $scope.isSubmitted = false;\n            });\n        };\n  }\n})();\n\n/**\n * @author v.lugovsky\n * created on 16.12.2015\n */\n(function () {\n  'use strict';\n\n  angular.module('BlurAdmin.pages.contactmanagements')\n    .controller('AddContactmanagementsCtrl', AddContactmanagementsCtrl);\n\n  /** @ngInject */\n  function AddContactmanagementsCtrl($scope, fileReader, $filter, $uibModal, $rootScope, $compile, UsersFactory, VisitorsFactory, OrganizationsFactory, Contactmanagement, $timeout, $stateParams, $state, $injector, Notification) {\n        $scope.pageName = 'Add Contact Management';\n        $scope.btnName = 'Add';\n        $scope.isSubmitted = false;\n        $scope.formscope = {gender: null, organization_id:null, visitor_type:null, country_id:null, status:1};\n        \n        $scope.statusOption = [\n            { 'value': 2, 'text': 'Inactive' },\n            { 'value': 1, 'text': 'Active' }\n        ];\n\n        $scope.genderOption = [\n            {label: 'Please select gender', value:null},\n            {label: 'Male', value: 'm'},\n            {label: 'Female', value: 'f'}\n        ];\n\n        $scope.OrganizationOption = [{name: 'Please select organization type', id:null}];\n        $scope.VisitorOption = [{name: 'Please select visitor type', id:null}];\n\n        OrganizationsFactory.getRecords().success(function(response) {\n            $scope.OrganizationOption = $scope.OrganizationOption.concat(response.data);\n        }).error(function(error) {\n            \n        });\n\n        VisitorsFactory.getRecords().success(function(response) {\n            $scope.VisitorOption = $scope.VisitorOption.concat(response.data);\n        }).error(function(error) {\n            \n        });\n\n        /* GET COUNTRY */\n        $scope.countries = [{ id: null, country_name: 'Please select country' }];\n        UsersFactory.getCountry().success(function (response) {\n            $scope.countries = $scope.countries.concat(response);\n        }).error(function (error) {\n\n        });\n\n        $scope.errorMessage = Contactmanagement.validation;\n        var $validationProvider = $injector.get('$validation');\n        $scope.add_data = function(form) {\n            $validationProvider.validate(form).success(function() {\n                $scope.isSubmitted = true;\n                Contactmanagement.addRecord($scope.formscope).success(function(res) {\n                    Notification.success(res.success);\n                    $state.go('contactmanagements.list');\n                    $scope.isSubmitted = false;\n                }).error(function(err) {\n                    Notification.error(err.error);\n                    $scope.isSubmitted = false;\n                });\n            }).error(function() {\n                $scope.isSubmitted = false;\n            });\n        };\n  }\n})();\n\n\n\n/**\n * @author v.lugovsky\n * created on 16.12.2015\n */\n(function () {\n  'use strict';\n\n  angular.module('BlurAdmin.pages.contactmanagements')\n    .controller('EditContactmanagementsCtrl', EditContactmanagementsCtrl);\n\n  /** @ngInject */\n  function EditContactmanagementsCtrl($scope, fileReader, $filter, $uibModal, $rootScope, $compile, UsersFactory, VisitorsFactory, OrganizationsFactory, Contactmanagement, $timeout, $stateParams, $state, $injector, Notification) {\n        $scope.pageName = 'Edit Contact Management';\n        $scope.btnName = 'Update';\n        $scope.isSubmitted = false;\n        $scope.urlID = $stateParams.id;\n\n        $scope.statusOption = [\n            { 'value': 2, 'text': 'Inactive' },\n            { 'value': 1, 'text': 'Active' }\n        ];\n\n        $scope.genderOption = [\n            {label: 'Please select gender', value:''},\n            {label: 'Male', value: 'm'},\n            {label: 'Female', value: 'f'}\n        ];\n\n        $scope.OrganizationOption = [{name: 'Please select organization type', id:null}];\n        $scope.VisitorOption = [{name: 'Please select visitor type', id:null}];\n\n        OrganizationsFactory.getRecords().success(function(response) {\n            $scope.OrganizationOption = $scope.OrganizationOption.concat(response.data);\n        }).error(function(error) {\n            \n        });\n\n        VisitorsFactory.getRecords().success(function(response) {\n            $scope.VisitorOption = $scope.VisitorOption.concat(response.data);\n        }).error(function(error) {\n            \n        });\n\n        /* GET COUNTRY */\n        $scope.countries = [{ id: null, country_name: 'Please select country' }];\n        UsersFactory.getCountry().success(function (response) {\n            $scope.countries = $scope.countries.concat(response);\n        }).error(function (error) {\n\n        });\n   \n        var $validationProvider = $injector.get('$validation');\n         $scope.errorMessage = Contactmanagement.validation;\n\n        Contactmanagement.getRecord($scope.urlID).success(function(response) {\n            $scope.formscope = response.data;\n        }).error(function(error) {\n            Notification.error(error.error);\n            $state.go('contactmanagements.list');\n        });\n\n        $scope.add_data = function(form) {\n            $validationProvider.validate(form).success(function() {\n                $scope.isSubmitted = true;\n                $scope.formscope._method = 'PUT';\n                \n                Contactmanagement.updateRecord($scope.urlID, $scope.formscope).success(function(res) {\n                    Notification.success(res.success);\n                    $state.go('contactmanagements.list');\n                    $scope.isSubmitted = false;\n                }).error(function(err) {\n                    Notification.error(err.error);\n                    $scope.isSubmitted = false;\n                });\n            }).error(function() {\n                $scope.isSubmitted = false;\n            });\n        };\n  }\n})();\n\n/**\n * @author v.lugovsky\n * created on 16.12.2015\n */\n(function () {\n  'use strict';\n\n  angular.module('BlurAdmin.pages.contactmanagements')\n    .controller('ListContactmanagementsCtrl', ListContactmanagementsCtrl);\n\n  /** @ngInject */\n  function ListContactmanagementsCtrl($scope, $state, fileReader, $filter, $uibModal, $rootScope, $compile, DTOptionsBuilder, DTColumnBuilder, Contactmanagement, $timeout, Notification) {\n      $scope.dtInstance = {};\n\n      $scope.reloadData = function() {\n          $scope.dtInstance.rerender();\n      };\n\n      $scope.createdRow = function(row, data, dataIndex) {\n           // Recompiling so we can bind Angular directive to the DT\n           $compile(angular.element(row).contents())($scope);\n      };\n\n      $scope.deleteRecord = function(id) {\n            Contactmanagement.deleteRecord(id).success(function (res) {\n                Notification.success(res.success);\n                $state.reload();\n            }).error(function (err) {\n                Notification.error(err.error);\n            });\n        }\n\n      $scope.actionRoles = function(data, type, full) {\n          return \"<a ui-sref='contactmanagements.viewdetails({ id: \" + full.id + \" })'><i class='fa fa-eye'></i></a> <a ui-sref='contactmanagements.edit({ id: \" + full.id + \" })'><i class='fa fa-edit'></i></a> <a class='cursor-pointer' ng-if=\\\"havePermission('tours','delete');\\\" style='cursor:pointer' ng-confirm-click='Are you sure to delete this contact?' confirmed-click='deleteRecord(\" + full.id + \")' title='Delete contact'><i class='fa fa-trash'></i></a>\";\n      };\n\n      $scope.genderRender = function(data, type, full) {\n        if (data == 'f') {\n            return \"Female\";\n        } else if (data == 'm') {\n            return \"Male\";\n        }\n        else {\n            return \"-\";\n        }\n      };\n    \n      $scope.statusAction = function(data, type, full) {\n            if(data.status == '2') {\n                return '<small class=\"label label-danger\">Inactive</small>';\n            }\n            else {\n                return '<small class=\"label label-success\">Active</small>';\n            }\n        };\n\n      $scope.indexNumber = function(data, type, full, row) {\n            var i = Number(row.row) + Number(1);\n            var ind = row.settings._iDisplayStart + i;\n            return \"<span>\" + ind + \"</span>\";\n        };\n      \n      $scope.dtOptions = DTOptionsBuilder.newOptions()\n            .withDataProp('data')\n            .withOption('ajax', function(data, callback, settings) {\n                // map your server's response to the DataTables format and pass it to\n                Contactmanagement.showDataTable(data).success(function(res) {\n                    if (res.error)\n                        $scope.reloadData();\n                    else\n                        callback(res);\n                }).error(function(err) {\n                    if (err)\n                        $scope.reloadData();\n                });\n            })\n            .withOption('processing', true)\n            .withOption('serverSide', true)\n            .withPaginationType('simple_numbers')\n            .withOption('order', [1, 'asc'])\n            .withDOM('lftip')\n            .withOption('searchDelay', 500)\n            .withOption('createdRow', $scope.createdRow);\n\n        $scope.dtColumns = [\n            DTColumnBuilder.newColumn('id').withTitle('No').withOption('searchable', false).renderWith($scope.indexNumber).withClass('table-index'),\n            DTColumnBuilder.newColumn('name').withTitle('Name').withOption('searchable', true),\n            DTColumnBuilder.newColumn('email').withTitle('Email').withOption('searchable', true),\n            DTColumnBuilder.newColumn('mobile').withTitle('Mobile').withOption('searchable', true),\n            DTColumnBuilder.newColumn('visitordata.name').withTitle('Visitor Type').withOption('searchable', true),\n            DTColumnBuilder.newColumn('organization').withTitle('Organization').withOption('searchable', true),\n            DTColumnBuilder.newColumn('gender').withTitle('Gender').withOption('searchable', true),\n            DTColumnBuilder.newColumn(null).withTitle('Status').withOption('searchable', false).notSortable().renderWith($scope.statusAction),\n            DTColumnBuilder.newColumn(null).withTitle('Action').withOption('searchable', false).notSortable().renderWith($scope.actionRoles)\n        ];\n  }\n})();\n/**\n * @author v.lugovsky\n * created on 16.12.2015\n */\n(function() {\n    'use strict';\n\n    angular.module('BlurAdmin.pages.contactmanagements')\n        .controller('ViewContactmanagementsCtrl', ViewContactmanagementsCtrl);\n\n    /** @ngInject */\n    function ViewContactmanagementsCtrl($scope, fileReader, $filter, $uibModal, $rootScope, $compile, $stateParams, OrganizationsFactory, Contactmanagement, $timeout, ngDialog, $config) {\n        $scope.pageName = 'Contact - View';\n        $scope.btnName = \"View\";\n        $scope.isSubmitted = false;\n        $scope.urlID = $stateParams.id;\n\n        $scope.genderOption = [\n            { label: '-', value: '' },\n            { label: 'Male', value: 'm' },\n            { label: 'Female', value: 'f' }\n        ];\n\n        $scope.OrganizationOption = [{name: '-', id: null}];\n        OrganizationsFactory.getRecords().success(function(response) {\n            $scope.OrganizationOption = $scope.OrganizationOption.concat(response.data);\n        }).error(function(error) {\n            \n        });\n\n        $scope.showStatus = function(user) {\n            var selected = [];\n            if (user) {\n                if (user.gender !== undefined || user.gender != null || user.gender != '') {\n                    selected = $filter('filter')($scope.genderOption, { value: user.gender });\n                }\n                return selected.length ? selected[0].label : '-';\n            } else {\n                return '-';\n            }\n        };\n\n        $scope.organizationType = function(user) {\n            var selected = [];\n            if (user) {\n                if (user.organization_id !== undefined || user.organization_id != null || user.organization_id != '') {\n                    selected = $filter('filter')($scope.OrganizationOption, { id: user.organization_id });\n                }\n                return selected.length ? selected[0].name : '-';\n            } else {\n                return '-';\n            }\n        };\n\n        Contactmanagement.getRecord($scope.urlID).success(function(response) {\n            $scope.formscope = response.data;\n        }).error(function(error) {\n            Notification.error(error.error);\n            $state.go('roles.list');\n        });\n    }\n})();\n/**\n * @author v.lugovsky\n * created on 16.12.2015\n */\n(function() {\n    'use strict';\n\n    angular.module('BlurAdmin.pages.dashboard')\n        .controller('DashboardCtrl', DashboardCtrl);\n\n    /** @ngInject */\n    function DashboardCtrl($scope, fileReader, $filter, $uibModal, $rootScope, $compile, $timeout, $stateParams, $state, $injector, Notification, DTOptionsBuilder, DTColumnBuilder, UsersFactory, DashboardsFactory, ToursFactory) {\n        $scope.pageName = 'Dashboard';\n        /** \n         * Get Dashboard data\n         */\n        DashboardsFactory.getRecord().success(function(response) {\n            $scope.charts = response.data.countData;\n            $scope.totalTour = response.data.totalTour;\n            $scope.tourFilterData = response.data.tourCountData;\n            if(Object.keys($rootScope.role)[0] == 1) {\n                $scope.tourFilterData.Today_Total_Volunteer = response.data.today_total_volunteer;\n            }\n        }).error(function(error) {\n\n        });\n        /* End Dashboard Data */\n\n        /**\n         * Tour related data\n         */\n        $scope.dtInstance = {};\n        $scope.isSubmitted = false;\n        $scope.tours = {};\n\n        $scope.reloadData = function() {\n            $scope.dtInstance.rerender();\n        };\n\n        $scope.createdRow = function(row, data, dataIndex) {\n            // Recompiling so we can bind Angular directive to the DT\n            $compile(angular.element(row).contents())($scope);\n        };\n\n        $scope.nameView = function(data, type, full) {\n            return \"<a ui-sref='tours.viewdetails({ id: \" + full.id + \" })'>\" + full.name + \"</a>\";\n        };\n\n        $scope.actionTours = function(data, type, full) {\n            return \"<a title='View Tour' ui-sref='tours.viewdetails({ id: \" + full.id + \" })'><i class='fa fa-eye'></i></a> <a ng-if=\\\"havePermission('tours','update');\\\" ui-sref='tours.edit({ id: \" + full.id + \" })' title='Edit Tour'><i class='fa fa-edit'></i></a>\";\n        };\n\n        $scope.setPerson = function(data, type, full) {\n            return Number(data.adults) + Number(data.children) + Number(data.senior);\n        };\n\n        $scope.statusAction = function(data, type, full) {\n            if (data.status == '0') {\n                return '<small class=\"label label-warning\">Pending</small>';\n            }\n            if (data.status == '1') {\n                return '<small class=\"label label-info\">Acknowledge</small>';\n            }\n            if (data.status == '2') {\n                return '<small class=\"label label-success\">Approved</small>';\n            }\n            if (data.status == '3') {\n                return '<small class=\"label label-danger\">Rejected</small>';\n            } else {\n                return '<small class=\"label label-primary\">Completed</small>';\n            }\n        };\n\n        $scope.mealOptions = function(data, type, full) {\n            if(data.meals == \"1\") {\n                return 'Yes';\n            }\n            else {\n                return 'No';\n            }\n        };\n\n        $scope.momentosOption = function(data, type, full) {\n            if(full.tour_momentos.length > 0) {\n                return 'Yes';\n            }\n            else {\n                return 'No';\n            }\n        };\n        \n        $scope.indexNumber = function(data, type, full, row) {\n            var i = Number(row.row) + Number(1);\n            var ind = row.settings._iDisplayStart + i;\n            return \"<span>\" + ind + \"</span>\";\n        };\n\n        $scope.dtOptions = DTOptionsBuilder.newOptions()\n            .withDataProp('data')\n            .withOption('ajax', function(data, callback, settings) {\n                // map your server's response to the DataTables format and pass it to\n                DashboardsFactory.getTourDataTable(data).success(function(res) {\n                    if (res.error)\n                        $scope.reloadData();\n                    else\n                        callback(res);\n                }).error(function(err) {\n                    if (err)\n                        $scope.reloadData();\n                });\n            })\n            .withOption('processing', true)\n            .withOption('serverSide', true)\n            .withPaginationType('simple_numbers')\n            .withOption('order', [0, 'desc'])\n            .withDOM('lftip')\n            .withOption('searchDelay', 500)\n            .withOption('createdRow', $scope.createdRow);\n\n        $scope.dtColumns = [\n            DTColumnBuilder.newColumn('id').withTitle('No').withOption('searchable', false).renderWith($scope.indexNumber).withClass('table-index'),\n            DTColumnBuilder.newColumn('name').withTitle('Tour Name').withOption('searchable', true),\n            DTColumnBuilder.newColumn('organization').withTitle('Organization Name').withOption('searchable', true),\n            DTColumnBuilder.newColumn('start_date').withTitle('Date Time Arriving').withOption('searchable', true),\n            DTColumnBuilder.newColumn(null).withTitle('# of Visitors').withOption('searchable', false).notSortable().renderWith($scope.setPerson),\n            DTColumnBuilder.newColumn('category').withTitle('Category').withOption('searchable', true),\n            DTColumnBuilder.newColumn('tour_tapes.name').withTitle('Tour Type').withOption('searchable', true),\n            DTColumnBuilder.newColumn('tour_manager.name').withTitle('Tour Manager').withOption('searchable', true),\n            DTColumnBuilder.newColumn(null).withTitle('Meal').withOption('searchable', false).notSortable().renderWith($scope.mealOptions),\n            DTColumnBuilder.newColumn(null).withTitle('Momento').withOption('searchable', true).renderWith($scope.momentosOption),\n            // DTColumnBuilder.newColumn(null).withTitle('Status').withOption('searchable', false).notSortable().renderWith($scope.statusAction),\n            DTColumnBuilder.newColumn(null).withTitle('Action').withOption('searchable', false).notSortable().renderWith($scope.actionTours)\n        ];\n    }\n})();\n/**\n * @author v.lugovsky\n * created on 16.12.2015\n */\n(function () {\n  'use strict';\n\n  angular.module('BlurAdmin.pages.defaulttasks')\n    .controller('AddDefaulttasksCtrl', AddDefaulttasksCtrl);\n\n  /** @ngInject */\n  function AddDefaulttasksCtrl($scope, fileReader, $filter, $uibModal, $rootScope, $compile, DefaulttasksFactory, $timeout, $stateParams, $state, $injector, Notification) {\n        $scope.pageName = 'Add';\n        $scope.btnName = 'Add';\n        $scope.isSubmitted = false;\n        $scope.formscope = {gender: null, organization_id:null, visitor_type:null, status:1};\n        \n        $scope.statusOption = [\n            { 'value': 0, 'text': 'Inactive' },\n            { 'value': 1, 'text': 'Active' }\n        ];\n\n        var $validationProvider = $injector.get('$validation');\n        $scope.errorMessage = DefaulttasksFactory.validation;\n\n        $scope.add_data = function(form) {\n            $validationProvider.validate(form).success(function() {\n                $scope.isSubmitted = true;\n                \n                DefaulttasksFactory.addRecord($scope.formscope).success(function(res) {\n                    Notification.success(res.success);\n                    $state.go('defaulttasks.list');\n                    $scope.isSubmitted = false;\n                }).error(function(err) {\n                    Notification.error(err.error);\n                    $scope.isSubmitted = false;\n                });\n            }).error(function() {\n                $scope.isSubmitted = false;\n            });\n        };\n  }\n})();\n\n\n\n/**\n * @author v.lugovsky\n * created on 16.12.2015\n */\n(function () {\n  'use strict';\n\n  angular.module('BlurAdmin.pages.defaulttasks')\n    .controller('EditDefaulttasksCtrl', EditDefaulttasksCtrl);\n\n  /** @ngInject */\n  function EditDefaulttasksCtrl($scope, fileReader, $filter, $uibModal, $rootScope, $compile, DefaulttasksFactory, Contactmanagement, $timeout, $stateParams, $state, $injector, Notification) {\n        $scope.pageName = 'Edit';\n        $scope.btnName = 'Update';\n        $scope.isSubmitted = false;\n        $scope.urlID = $stateParams.id;\n\n        $scope.statusOption = [\n            { 'value': 0, 'text': 'Inactive' },\n            { 'value': 1, 'text': 'Active' }\n        ];\n   \n        var $validationProvider = $injector.get('$validation');\n        $scope.errorMessage = DefaulttasksFactory.validation;\n\n        DefaulttasksFactory.getRecord($scope.urlID).success(function(response) {\n            $scope.formscope = response.data;\n        }).error(function(error) {\n            Notification.error(error.error);\n            $state.go('defaulttasks.list');\n        });\n\n        $scope.add_data = function(form) {\n            $validationProvider.validate(form).success(function() {\n                $scope.isSubmitted = true;\n                $scope.formscope._method = 'PUT';\n                \n                DefaulttasksFactory.updateRecord($scope.urlID, $scope.formscope).success(function(res) {\n                    Notification.success(res.success);\n                    $state.go('defaulttasks.list');\n                    $scope.isSubmitted = false;\n                }).error(function(err) {\n                    Notification.error(err.error);\n                    $scope.isSubmitted = false;\n                });\n            }).error(function() {\n                $scope.isSubmitted = false;\n            });\n        };\n  }\n})();\n\n/**\n * @author v.lugovsky\n * created on 16.12.2015\n */\n(function () {\n  'use strict';\n\n  angular.module('BlurAdmin.pages.defaulttasks')\n    .controller('ListDefaulttasksCtrl', ListDefaulttasksCtrl);\n\n  /** @ngInject */\n  function ListDefaulttasksCtrl($scope, fileReader, $filter, $uibModal, $rootScope, $compile, TourtypesFactory, DefaulttasksFactory, $timeout) {\n      \n        TourtypesFactory.getAllRecords().success(function(response) {\n            $scope.formscope = response.data;\n        }).error(function(error) {\n            Notification.error(error.error);\n            $state.go('defaulttasks.list');\n        });\n  }\n})();\n/**\n * @author v.lugovsky\n * created on 16.12.2015\n */\n(function () {\n  'use strict';\n\n  angular.module('BlurAdmin.pages.forgotpassword')\n    .controller('ForgotPasswordCtrl', ForgotPasswordCtrl);\n\n  /** @ngInject */\n  function ForgotPasswordCtrl($scope, fileReader, $filter, $uibModal, $rootScope, $compile, AuthenticationFactory, $timeout, $stateParams, $state, $injector, Notification) {\n        $scope.pageName = 'Settings - Update';\n        $scope.action = \"Send\";\n        $scope.formscope = {};\n        $scope.isSubmitted = false;\n        $scope.error = \"\";\n        \n        var $validationProvider = $injector.get('$validation');\n        $scope.errorMessage = AuthenticationFactory.validation;\n\n        $scope.forgotSubmit = function(form) {\n            $scope.isSubmitted = true;\n            \n            $validationProvider.validate(form).success(function() {\n                $scope.loginProgress = true;\n                var data = { \"email\": $scope.formscope.email};\n                \n                AuthenticationFactory.forgotPassword(data).success(function(response) {\n                    Notification.success(response.success);\n                    $scope.isSubmitted = false;\n                    $scope.loginProgress = false;\n                    $state.go('login');\n                }).error(function(error) {\n                    $scope.isSubmitted = false;\n                    $scope.loginProgress = false;\n                    Notification.error(error.error);\n                });\n            }).error(function() {\n                $scope.loginProgress = false;\n                $scope.isSubmitted = false;\n            });\n        };\n  }\n})();\n/**\n * @author v.lugovsky\n * created on 16.12.2015\n */\n(function () {\n  'use strict';\n\n  angular.module('BlurAdmin.pages.forgotpassword')\n    .controller('ResetPasswordCtrl', ResetPasswordCtrl);\n\n  /** @ngInject */\n  function ResetPasswordCtrl($scope, fileReader, $filter, $uibModal, $rootScope, $compile, AuthenticationFactory, $timeout, $stateParams, $state, $injector, Notification) {\n        $scope.pageName = 'Settings - Update';\n        $scope.action = \"Change\";\n        $scope.formscope = {};\n        $scope.isSubmitted = false;\n        $scope.token = $stateParams.token;\n        \n        var $validationProvider = $injector.get('$validation');\n        $scope.errorMessage = AuthenticationFactory.validation;\n\n        /* SET VALIDATION MESSAGE RULES*/\n        var $validationProvider = $injector.get('$validation');\n        $validationProvider.setExpression({\n            confirmPassword: function(value, scope, element, attrs) {\n                return scope.formscope.password === scope.formscope.confirm_password;\n            }\n        })\n        .setDefaultMsg({\n            confirmPassword: {\n                error: 'Passwords do not match.'\n            }\n        });\n\n        $scope.resetSubmit = function(form) {\n            $scope.isSubmitted = true;\n            \n            $validationProvider.validate(form).success(function() {\n                $scope.loginProgress = true;\n                var data = {\n                    email: $scope.formscope.email,\n                    password: $scope.formscope.password,\n                    password_confirmation: $scope.formscope.confirm_password,\n                    token: $scope.token\n                };\n                \n                AuthenticationFactory.resetPassword(data).success(function(response) {\n                    Notification.success(response.success);\n                    $scope.isSubmitted = false;\n                    $scope.loginProgress = false;\n                    $state.go('login');\n                }).error(function(error) {\n                    $scope.isSubmitted = false;\n                    $scope.loginProgress = false;\n                    Notification.error(error.error);\n                });\n            }).error(function() {\n                $scope.loginProgress = false;                \n                $scope.isSubmitted = false;\n            });\n        };\n  }\n})();\n/**\n * @author v.lugovsky\n * created on 16.12.2015\n */\n(function() {\n    'use strict';\n\n    angular.module('BlurAdmin.pages.login')\n        .controller('LoginPageCtrl', LoginPageCtrl);\n\n    function LoginPageCtrl($scope, $state, fileReader, $filter, $uibModal, $rootScope, AuthenticationFactory, $timeout, $cookies, Notification) {\n        $scope.formscope = { status: 1 };\n        $scope.pageName = 'Login';\n        $scope.btnName = 'Login';\n        $scope.isSubmitted = false;\n        $scope.admin = {};\n\n        if ($cookies.email && $cookies.password) {\n            $scope.admin.email = $cookies.email;\n            $scope.admin.password = $cookies.password;\n        }\n\n        $scope.isFormSubmit = false;\n        $scope.loginSubmit = function(valid) {\n            $scope.submit = true;\n            $scope.isFormSubmit = true;\n            \n            if (valid) {\n                var data = { \"email\": $scope.admin.email, \"password\": $scope.admin.password };\n                $scope.loginProgress = true;\n                AuthenticationFactory.login(data).success(function(response) {\n                    \n                        if (response && response.result.token) {\n                            // Setting a cookie if token available\n                            Notification.success(response.result.message);\n                            $cookies.put(\"token\", response.result.token);\n\n                            var auth_user = {};\n                            auth_user = response.result.user;\n                            //auth_user.company_slug = response.result.user.company_slug || 'super-admin';\n\n                            $cookies.put(\"authUser\", JSON.stringify(auth_user));\n\n                            //Assign the current user permissions\n                            $rootScope.permissions = response.result.permissions;\n                            $rootScope.auth_user = response.result.user;\n                            $rootScope.role = response.result.role;\n\n                            if ($rootScope.auth_user.image) {\n                                $rootScope.profilePicture = config.profile_url + auth_user.id + '/' + auth_user.image;\n                            } else {\n                                $rootScope.profilePicture = config.profile_url + '/noImage.png';\n                            }\n\n                            $state.go(\"dashboard\");\n                        } else {\n                            Notification.error('These credentials do not match our records.');\n                            $scope.loginProgress = false;\n                        }\n                        $scope.isFormSubmit = false;\n                    })\n                    .error(function(err) {\n                        $scope.isFormSubmit = false;\n                        var message = err.error ? err.error : 'Invalid login detail.';\n                        Notification.error(message);\n                        $scope.loginProgress = false;\n                    });\n            }\n        };\n    };\n})();\n/**\n * @author v.lugovsky\n * created on 16.12.2015\n */\n(function() {\n    'use strict';\n\n    angular.module('BlurAdmin.pages.notifications')\n        .controller('NotificationsCtrl', NotificationsCtrl);\n\n    /** @ngInject */\n    function NotificationsCtrl($scope, fileReader, $filter, $uibModal, $rootScope, $compile, DTOptionsBuilder, DTColumnBuilder, NotificationsFactory, $timeout, ngDialog) {\n        $scope.dtInstance = {};\n        $rootScope.initialise();\n\n        $scope.reloadData = function() {\n            $scope.dtInstance.rerender();\n        };\n\n        $scope.createdRow = function(row, data, dataIndex) {\n            // Recompiling so we can bind Angular directive to the DT\n            $compile(angular.element(row).contents())($scope);\n        };\n\n        $scope.indexNumber = function(data, type, full, row) {\n            var i = Number(row.row) + Number(1);\n            var ind = row.settings._iDisplayStart + i;\n            return \"<span>\" + ind + \"</span>\";\n        };\n\n        $scope.changeDateFormat = function(data, type, full, row) {\n            /*<span am-time-ago=\"msg.created_at | amUtc | amLocal\"></span>\n            return \"<span am-time-ago='data.created_at | amUtc | amLocal'></span>\";*/\n            return \"<span>{{\"+data.created_at+\" | amUtc | amLocal | amDateFormat:'dddd, MMMM Do YYYY, hh:mm:ss a'}}</span>\";\n            return \"<span>{{data.created_at | amUtc | amLocal | amDateFormat:'dddd, MMMM Do YYYY, h:mm:ss a'}}</span>\";\n        };\n\n        $scope.dtOptions = DTOptionsBuilder.newOptions()\n            .withDataProp('data')\n            .withOption('ajax', function(data, callback, settings) {\n                // map your server's response to the DataTables format and pass it to\n                NotificationsFactory.showDataTable(data).success(function(res) {\n                    if (res.error)\n                        $scope.reloadData();\n                    else // DataTables' callback\n                        callback(res);\n                }).error(function(err) {\n                    if (err.error)\n                        $scope.reloadData();\n                });\n            })\n            .withOption('processing', true)\n            .withOption('serverSide', true)\n            .withPaginationType('simple_numbers')\n            .withOption('order', [2, 'desc'])\n            .withDOM('lftip')\n            .withOption('searchDelay', 500)\n            .withOption('createdRow', $scope.createdRow);\n\n        $scope.dtColumns = [\n            DTColumnBuilder.newColumn('id').withTitle('No').withOption('searchable', false).renderWith($scope.indexNumber).withClass('table-index'),\n            DTColumnBuilder.newColumn('message').withTitle('Message').withOption('searchable', true),\n            DTColumnBuilder.newColumn('created_at').withTitle('Date Time').withOption('searchable', true)\n        ];\n    }\n})();\n/**\n * @author a.demeshko\n * created on 21.01.2016\n */\n(function () {\n  'use strict';\n\n  angular.module('BlurAdmin.pages.profile')\n    .controller('ProfileModalCtrl', ProfileModalCtrl);\n\n  /** @ngInject */\n  function ProfileModalCtrl($scope, $uibModalInstance) {\n    $scope.link = '';\n    $scope.ok = function () {\n      $uibModalInstance.close($scope.link);\n    };\n  }\n\n})();\n/**\n * @author v.lugovsky\n * created on 16.12.2015\n */\n(function () {\n  'use strict';\n\n  angular.module('BlurAdmin.pages.profile')\n    .controller('ProfilePageCtrl', ProfilePageCtrl);\n\n  /** @ngInject */\n  function ProfilePageCtrl($scope, fileReader, $filter, $uibModal) {\n    $scope.picture = $filter('profilePicture')('Nasta');\n\n    $scope.removePicture = function () {\n      $scope.picture = $filter('appImage')('theme/no-photo.png');\n      $scope.noPicture = true;\n    };\n\n    $scope.uploadPicture = function () {\n      var fileInput = document.getElementById('uploadFile');\n      fileInput.click();\n\n    };\n\n    $scope.socialProfiles = [\n      {\n        name: 'Facebook',\n        href: 'https://www.facebook.com/akveo/',\n        icon: 'socicon-facebook'\n      },\n      {\n        name: 'Twitter',\n        href: 'https://twitter.com/akveo_inc',\n        icon: 'socicon-twitter'\n      },\n      {\n        name: 'Google',\n        icon: 'socicon-google'\n      },\n      {\n        name: 'LinkedIn',\n        href: 'https://www.linkedin.com/company/akveo',\n        icon: 'socicon-linkedin'\n      },\n      {\n        name: 'GitHub',\n        href: 'https://github.com/akveo',\n        icon: 'socicon-github'\n      },\n      {\n        name: 'StackOverflow',\n        icon: 'socicon-stackoverflow'\n      },\n      {\n        name: 'Dribbble',\n        icon: 'socicon-dribble'\n      },\n      {\n        name: 'Behance',\n        icon: 'socicon-behace'\n      }\n    ];\n\n    $scope.unconnect = function (item) {\n      item.href = undefined;\n    };\n\n    $scope.showModal = function (item) {\n      $uibModal.open({\n        animation: false,\n        controller: 'ProfileModalCtrl',\n        templateUrl: 'app/pages/profile/profileModal.html'\n      }).result.then(function (link) {\n          item.href = link;\n        });\n    };\n\n    $scope.getFile = function () {\n      fileReader.readAsDataUrl($scope.file, $scope)\n          .then(function (result) {\n            $scope.picture = result;\n          });\n    };\n\n    $scope.switches = [true, true, false, true, true, false];\n  }\n\n})();\n\n/**\n * @author v.lugovsky\n * created on 16.12.2015\n */\n(function () {\n  'use strict';\n\n  angular.module('BlurAdmin.pages.roles')\n    .controller('AddRolesCtrl', AddRolesCtrl);\n\n  /** @ngInject */\n  function AddRolesCtrl($scope, fileReader, $filter, $uibModal, $rootScope, $compile, RolesFactory, $timeout, $stateParams, $state, $injector, Notification) {\n        $scope.pageName = 'Add';\n        $scope.action = \"Add\";\n        $scope.role = {\n            role_type: 3,\n            is_editable: 1,\n            permissions: {}\n        };\n        $scope.isSubmitted = false;\n\n        var $validationProvider = $injector.get('$validation');\n\n        /* GET PERMISSIONS */\n        RolesFactory.getAllPermission().success(function (response) {\n            $scope.role.permissions = response;\n            // console.log($scope.role.permissions);\n        }).error(function (error) {\n            Notification.error(error.error);\n            $state.go('roles.list');\n        });\n        /* SET VALIDATION MESSAGE RULES*/\n        \n        $scope.roleMessage = RolesFactory.validation;\n        /* ADD ROLES */\n\n        $scope.submitRole = function (form) {\n            $scope.isSubmitted = true;\n            $validationProvider.validate(form)\n                .success(function () {                    \n                    RolesFactory.addRole($scope.role).success(function (response) {\n                        Notification.success(response.success);\n                        $state.go('roles.list');\n                        $scope.isSubmitted = false;\n                    }).error(function (error) {\n                        Notification.error(error.error);\n                        $scope.isSubmitted = false;\n                    });\n                })\n                .error(function () {\n                    $scope.isSubmitted = false;\n                });\n        };\n  }\n})();\n\n/**\n * @author v.lugovsky\n * created on 16.12.2015\n */\n(function () {\n  'use strict';\n\n  angular.module('BlurAdmin.pages.roles')\n    .controller('EditRolesCtrl', EditRolesCtrl);\n\n  /** @ngInject */\n  function EditRolesCtrl($scope, fileReader, $filter, $uibModal, $rootScope, $compile, RolesFactory, $timeout, $stateParams, $state, $injector, Notification) {\n        $scope.pageName = 'Edit';\n        $scope.action = 'Update';\n       \n        $scope.roleId = $stateParams.id;\n        $scope.role = {};\n        $scope.isSubmitted = false;\n\n        var $validationProvider = $injector.get('$validation');\n\n        RolesFactory.getRole($scope.roleId).success(function (response) {\n            $scope.role = response.data;\n        }).error(function (error) {\n                Notification.error(error.error);\n                $state.go('roles.list');\n        });\n\n        $scope.roleMessage = RolesFactory.validation;\n\n        $scope.submitRole = function (form) {\n            $scope.isSubmitted = true;\n            $validationProvider.validate(form)\n                .success(function () {\n                    RolesFactory.updateRole($scope.role.id, $scope.role).success(function (response) {\n                        Notification.success(response.success);\n                        $state.go('roles.list');\n                        $scope.isSubmitted = false;\n                    }).error(function (error) {\n                        Notification.error(error.error);\n                        $scope.isSubmitted = false;\n                        \n                    });\n                })\n                .error(function () {\n                    $scope.isSubmitted = false;\n                });\n        };\n  }\n})();\n\n/**\n * @author v.lugovsky\n * created on 16.12.2015\n */\n(function () {\n  'use strict';\n\n  angular.module('BlurAdmin.pages.roles')\n    .controller('RolesCtrl', RolesCtrl);\n\n  /** @ngInject */\n  function RolesCtrl($scope, $state, fileReader, $filter, $uibModal, $rootScope, $compile, DTOptionsBuilder, DTColumnBuilder, RolesFactory, $timeout, ngDialog, Notification) {\n        $scope.dtInstance = {};\n        \n        $scope.reloadData = function () {\n            $scope.dtInstance.rerender();\n        };\n\n        $scope.createdRow = function (row, data, dataIndex) {\n            // Recompiling so we can bind Angular directive to the DT\n            $compile(angular.element(row).contents())($scope);\n        };\n\n        $scope.showPermissions = function (data, type, full) {\n            return \"<a href='javascript:void(0);' ng-click='getPermissions(\" + full.id + \")'>Show Permissions</a>\";\n            // return \"<a href='javascript:void(0);' data-toggle='modal' ng-click='open(\\\"app/pages/roles/modal/showPermissions.html\\\", \\\"md\\\")'>Show Permissions</a>\";\n            // <button type=\"button\" class=\"btn btn-primary\" data-toggle=\"modal\" ng-click=\"open('app/pages/ui/modals/modalTemplates/basicModal.html', 'md')\">Default modal</button>\n        };\n\n        $scope.getPermissions = function (roleId) {\n            ngDialog.open({\n                template: 'app/pages/roles/modal/showPermissions.html',\n                scope: $scope,\n                controller: ['$scope', 'RolesFactory', 'id', function ($scope, RolesFactory, id) {\n                        $scope.role = {};\n                        RolesFactory.getRolePermisssions(id).success(function (response) {\n                            $scope.role.permissions = response;\n                        }).error(function (error) {\n\n                        });\n                    }],\n                resolve: {\n                    id: function depFactory() {\n                        return roleId;\n                    }\n                }\n            });\n        };\n\n        $scope.deleteRecord = function(id) {\n            RolesFactory.deleteRecord(id).success(function (res) {\n                Notification.success(res.success);\n                $state.reload();\n            }).error(function (err) {\n                Notification.error(err.error);\n            });\n        }\n\n        $scope.actionRoles = function (data, type, full) {\n            if(full.is_editable != false) {\n                return \"<a ui-sref='roles.edit({ id: \" + full.id + \" })'><i class='fa fa-edit'></i></a> <a class='cursor-pointer' ng-if=\\\"havePermission('roles','delete');\\\" style='cursor:pointer' ng-confirm-click='Are you sure to delete this role?' confirmed-click='deleteRecord(\" + full.id + \")' title='Delete role'><i class='fa fa-trash'></i></a>\";\n            }\n            else {\n                return \"-\";\n            }\n        };\n\n        $scope.indexNumber = function(data, type, full, row) {\n            var i = Number(row.row) + Number(1);\n            var ind = row.settings._iDisplayStart + i;\n            return \"<span>\" + ind + \"</span>\";\n        };\n\n        $scope.dtOptions = DTOptionsBuilder.newOptions()\n            .withDataProp('data')\n            .withOption('ajax', function (data, callback, settings) {\n                  // map your server's response to the DataTables format and pass it to\n                RolesFactory.showDataTable(data).success(function (res) { \n                    if (res.error)\n                      $scope.reloadData();\n                    else // DataTables' callback\n                    callback(res);\n                }).error(function (err) {\n                    if (err.error)\n                    $scope.reloadData();\n                });\n            })\n            .withOption('processing', true)\n            .withOption('serverSide', true)\n            .withPaginationType('simple_numbers')\n            .withOption('order', [0, 'asc'])\n            .withDOM('lftip')\n            .withOption('searchDelay', 500)\n            .withOption('createdRow', $scope.createdRow);\n\n        $scope.dtColumns = [\n            DTColumnBuilder.newColumn('id').withTitle('No').withOption('searchable', false).renderWith($scope.indexNumber).withClass('table-index'),\n            DTColumnBuilder.newColumn('name').withTitle('Role Name'),\n            /*DTColumnBuilder.newColumn('slug').withTitle('Slug Name'),*/\n            DTColumnBuilder.newColumn('description').withTitle('Description'),\n            DTColumnBuilder.newColumn('created_at').withTitle('Role Created On').withOption('searchable', true),\n            /*DTColumnBuilder.newColumn('updated_at').withTitle('Role Created On').withOption('searchable', false),*/\n            DTColumnBuilder.newColumn('count').withTitle('Total Permissions').withOption('searchable', false).renderWith($scope.showPermissions).notSortable(),\n            DTColumnBuilder.newColumn(null).withTitle('Action').withOption('searchable', false).renderWith($scope.actionRoles).notSortable()\n        ];\n  }\n})();\n\n/**\n * @author v.lugovsky\n * created on 16.12.2015\n */\n(function () {\n  'use strict';\n\n  angular.module('BlurAdmin.pages.settings')\n    .controller('SettingsCtrl', SettingsCtrl);\n\n  /** @ngInject */\n  function SettingsCtrl($scope, fileReader, $filter, $uibModal, $rootScope, $compile, SettingsFactory, $timeout, $stateParams, $state, $injector, Notification) {\n        $scope.pageName = 'Settings - Update';\n        $scope.action = \"Update\";\n        $scope.formscope = {};\n        $scope.isSubmitted = false;\n\n        var $validationProvider = $injector.get('$validation');\n        SettingsFactory.getAllSettings().success(function (response) {\n            $scope.formscope = response.data;\n        }).error(function (error) {\n\n        });\n\n        /* SET VALIDATION MESSAGE RULES*/\n        $scope.errorMessage = SettingsFactory.validation;\n        \n        $scope.updateSetting = function (form) {\n            $scope.isSubmitted = true;\n            $validationProvider.validate(form).success(function () {\n                SettingsFactory.updateRecord($scope.formscope.id, $scope.formscope).success(function(res) {\n                    Notification.success(res.success);\n                    $scope.isSubmitted = false;\n                }).error(function(err) {\n                    Notification.error(err.error);\n                    $scope.isSubmitted = false;\n                });\n            })\n            .error(function () {\n                $scope.isSubmitted = false;\n            });\n        };\n  }\n})();\n\n/**\n * @author v.lugovsky\n * created on 16.12.2015\n */\n(function () {\n  'use strict';\n\n  angular.module('BlurAdmin.pages.tours')\n    .controller('AcknowledgeCtrl', AcknowledgeCtrl);\n\n  /** @ngInject */\n  function AcknowledgeCtrl($scope, fileReader, $filter, $uibModal, $rootScope, $compile, VisitorsFactory, ToursFactory, UsersFactory, MealservicetypesFactory, MealservicelocationsFactory, LocationsFactory, MealsFactory, OrganizationsFactory, DefaulttasksFactory, TourtypesFactory, TransportsFactory, $timeout, $stateParams, $state, $injector, Notification, editableOptions, editableThemes, DTOptionsBuilder, DTColumnBuilder, DTColumnDefBuilder) {\n        $scope.pageName = 'View';\n        $scope.btnName = 'Update';\n        $scope.isSubmitted = false;\n        $scope.urlID = $stateParams.id;\n\n        $scope.activeTaskList = [];\n        $scope.addTaskBtn = false;\n        $scope.minDateMoment = moment().subtract('day');\n        $scope.visitors = [];\n        $scope.mealsType = [];\n        $scope.selectedMeals = [];\n\n        $scope.showTable = true;\n        $scope.smartTablePageSize = 5;\n\n        $scope.genderOption = [\n            {label: '-', value: ''},\n            {label: 'Male', value: 'm'},\n            {label: 'Female', value: 'f'}\n        ];\n\n        /** Start options */ \n        $scope.TransportOption = [{name: 'Please select transport type', id: null}];\n        TransportsFactory.getAllRecords().success(function(response) {\n            $scope.TransportOption = $scope.TransportOption.concat(response.data);\n        }).error(function(error) {\n            \n        });\n\n        $scope.TourTypeOption = [{name: 'Please select tour type', id: null}];\n        TourtypesFactory.getAllRecords().success(function(response) {\n            $scope.TourTypeOption = $scope.TourTypeOption.concat(response.data);\n        }).error(function(error) {\n            \n        });\n\n        $scope.OrganizationTypeOption = [{name: 'Please select organization type', id: null}];\n        OrganizationsFactory.getAllRecords().success(function(response) {\n            $scope.OrganizationTypeOption = $scope.OrganizationTypeOption.concat(response.data);\n        }).error(function(error) {\n            \n        });\n\n        $scope.mealsTypeOption = [{name: 'Please select meal type', id: null}];\n        MealsFactory.getAllRecords().success(function(response) {\n            $scope.mealsTypeOption = $scope.mealsTypeOption.concat(response.data);\n        }).error(function(error) {\n            \n        });\n\n        $scope.locationsTypeOption = [{name: 'Please select location', id: null}];\n        LocationsFactory.getAllRecords().success(function(response) {\n            $scope.locationsTypeOption = $scope.locationsTypeOption.concat(response.data);\n        }).error(function(error) {\n            \n        });\n\n        $scope.mealServiceTypeOption = [{name: 'Please select meal service type', id: null}];\n        MealservicetypesFactory.getAllRecords().success(function(response) {\n            $scope.mealServiceTypeOption = $scope.mealServiceTypeOption.concat(response.data);\n        }).error(function(error) {\n            \n        });\n\n        $scope.mealServiceLocationsOption = [{name: 'Please select meal service location', id: null}];\n        MealservicelocationsFactory.getAllRecords().success(function(response) {\n            $scope.mealServiceLocationsOption = $scope.mealServiceLocationsOption.concat(response.data);\n        }).error(function(error) {\n            \n        });\n\n        $scope.VisitorOption = [{name: 'Please select visitor type', id:null}];\n        VisitorsFactory.getAllRecords().success(function(response) {\n            $scope.VisitorOption = $scope.VisitorOption.concat(response.data);\n        }).error(function(error) {\n            \n        });\n \n        $scope.usersOption = [{name: 'Please select catering manager', id: null}];\n        UsersFactory.getRecords().success(function(response) {\n            $scope.usersOption = $scope.usersOption.concat(response.data);\n        }).error(function(error) {\n            \n        });\n\n\n        $scope.showMealsTypeOption = function(user) {\n            var selected = [];\n            if (user.meal_id != null) {\n                selected = $filter('filter')($scope.mealsTypeOption, { id: user.meal_id });\n            }\n            return selected.length ? selected[0].name : '-';\n        };\n\n        $scope.showMealServiceTypeOption = function(user) {\n            var selected = [];\n            if (user.meal_service_type_id != null) {\n                selected = $filter('filter')($scope.mealServiceTypeOption, { id: user.meal_service_type_id });\n            }\n            return selected.length ? selected[0].name : '-';\n        };\n\n        $scope.showMealServiceLocationsOption = function(user) {\n            var selected = [];\n            if (user.meal_service_location_id != null) {\n                selected = $filter('filter')($scope.mealServiceLocationsOption, { id: user.meal_service_location_id });\n            }\n            return selected.length ? selected[0].name : '-';\n        };\n\n        $scope.showCateringManager = function(user) {\n            var selected = [];\n            if (user.catering_manager != null) {\n                selected = $filter('filter')($scope.usersOption, { id: user.catering_manager });\n            }\n            return selected.length ? selected[0].name : '-';\n        };\n        /** End options */ \n\n        $scope.showOrganizationTypeOption = function(user) {\n            var selected = [];\n            if(user.organization_id != null) {\n                selected = $filter('filter')($scope.OrganizationTypeOption, {id: user.organization_id});\n            }\n            return selected.length ? selected[0].name : '-';\n        };\n\n        $scope.showVisitorOption = function(user) {\n            var selected = [];\n            if(user.visitor_type != null) {\n                selected = $filter('filter')($scope.VisitorOption, {id: user.visitor_type});\n            }\n            return selected.length ? selected[0].name : '-';\n        };\n\n        $scope.showGenderOption = function(user) {\n            var selected = [];\n            if(user.gender != null) {\n                selected = $filter('filter')($scope.genderOption, {value: user.gender});\n            }\n            return selected.length ? selected[0].label : '-';\n        };\n\n        ToursFactory.viewRecord($scope.urlID).success(function(response) {\n            $scope.formscope = response.data;\n            $scope.formscope.meals = (response.data.meals == 1) ? true : false;\n            $scope.activeTask = response.data.tour_tasks;\n            \n            /*$.each(response.data.tour_meals, function(i, el) {\n                response.data.tour_meals[i].meal_txt = $scope.mealsTypeOption.filter(function(option) {\n                    return option.id === response.data.tour_meals[i].meal_id;\n                })[0].name;\n\n                response.data.tour_meals[i].mealservice_txt = $scope.mealServiceTypeOption.filter(function(option) {\n                    return option.id === response.data.tour_meals[i].meal_service_type_id;\n                })[0].name;\n\n                response.data.tour_meals[i].meallocation_txt = $scope.mealServiceLocationsOption.filter(function(option) {\n                    return option.id === response.data.tour_meals[i].meal_service_location_id;\n                })[0].name;\n\n                response.data.tour_meals[i].catering_manager_txt = $scope.usersOption.filter(function(option) {\n                    return option.id === response.data.tour_meals[i].catering_manager;\n                })[0].name;\n            });*/\n            $scope.mealsType = response.data.tour_meals;\n\n            $.each(response.data.tour_visitors, function(i, el) {\n                /*response.data.tour_visitors[i].visitor.gender_txt = $scope.genderOption.filter(function(option) {\n                    return option.value === response.data.tour_visitors[i].visitor.gender;\n                })[0].label;*/\n\n                /*response.data.tour_visitors[i].visitor.organization_txt = $scope.OrganizationTypeOption.filter(function(option) {\n                    return option.id === response.data.tour_visitors[i].visitor.organization_id;\n                })[0].name;*/\n\n                /*response.data.tour_visitors[i].visitor.visitor_txt = $scope.VisitorOption.filter(function(option) {\n                    return option.id === response.data.tour_visitors[i].visitor.visitor_type;\n                })[0].name;*/\n\n                if(response.data.tour_visitors[i].is_tour_admin == 1) {\n                    response.data.contact_manager = response.data.tour_visitors[i].visitor.email;\n                    $scope.contactManagerDetails = response.data.tour_visitors[i];\n\n                    $scope.contactManagerDetails.address = ($scope.contactManagerDetails.visitor.address != '') ? $scope.contactManagerDetails.visitor.address+\", \" : '';\n                    $scope.contactManagerDetails.address1 = ($scope.contactManagerDetails.visitor.address1 != '') ? $scope.contactManagerDetails.visitor.address1+\", \" : '';\n                    $scope.contactManagerDetails.city = ($scope.contactManagerDetails.visitor.city != '') ? $scope.contactManagerDetails.visitor.city+\", \" : '';\n                    $scope.contactManagerDetails.state = ($scope.contactManagerDetails.visitor.state != '') ? $scope.contactManagerDetails.visitor.state+\", \" : '';\n                    $scope.contactManagerDetails.countryName = ($scope.contactManagerDetails.visitor.country != null) ? $scope.contactManagerDetails.visitor.country.country_name+\", \" : '';\n                    $scope.contactManagerDetails.zip_code = ($scope.contactManagerDetails.visitor.zip_code != '') ? $scope.contactManagerDetails.visitor.zip_code : '';\n\n                    $scope.contactManagerDetails.fullAddress = $scope.contactManagerDetails.address+$scope.contactManagerDetails.address1+$scope.contactManagerDetails.city+$scope.contactManagerDetails.state+$scope.contactManagerDetails.countryName+$scope.contactManagerDetails.zip_code;\n                }\n\n                $scope.visitors.push(response.data.tour_visitors[i].visitor);\n            });\n\n            // $timeout(function() {\n                $scope.formscope.visitors = $scope.visitors;\n                $scope.formscope.mealsType = $scope.mealsType;\n                $scope.formscope.tasks = response.data.tour_tasks;\n            // }, 3000);\n        }).error(function(error) {\n            Notification.error(error.error);\n            $state.go('tours.list');\n        });\n\n        $scope.approveRejectTour = function(value) {\n            var data = {\n                tour_id: $scope.urlID,\n                action: value,\n                name: $scope.contactManagerDetails.visitor.name,\n                comment: $scope.formscope.comment\n            };\n            \n            ToursFactory.actionRecord(data).success(function(res) {\n                Notification.success(res.success);\n                // $state.go('tours.list');\n                $scope.formscope.status = value;\n                $scope.isSubmitted = false;\n            }).error(function(err) {\n                Notification.error(err.error);\n                $scope.isSubmitted = false;\n            });\n        }\n\n        $scope.visitorOptions = DTOptionsBuilder.newOptions()\n            .withPaginationType('simple_numbers');\n\n        $scope.visitorColumnDefs = [\n            DTColumnDefBuilder.newColumnDef(0),\n            DTColumnDefBuilder.newColumnDef(1),\n            DTColumnDefBuilder.newColumnDef(2),\n            DTColumnDefBuilder.newColumnDef(3),\n            DTColumnDefBuilder.newColumnDef(4),\n            DTColumnDefBuilder.newColumnDef(5)\n        ];\n  }\n})();\n\n/**\n * @author a.demeshko\n * created on 21.01.2016\n */\n(function() {\n    'use strict';\n\n    angular.module('BlurAdmin.pages.tours')\n        .controller('AddCommentModalCtrl', AddCommentModalCtrl);\n\n    /** @ngInject */\n    function AddCommentModalCtrl($scope, $uibModalInstance) {\n        $scope.comment = '';\n        $scope.message = '';\n        $scope.ok = function() {\n            $uibModalInstance.close($scope.comment);\n        };\n    }\n})();\n/**\n * @author a.demeshko\n * created on 21.01.2016\n */\n(function() {\n    'use strict';\n\n    angular.module('BlurAdmin.pages.tours')\n        .controller('AddDocumentModalCtrl', AddDocumentModalCtrl);\n\n    /** @ngInject */\n    function AddDocumentModalCtrl($scope, $rootScope, $compile, $injector, UsersFactory, $uibModalInstance, Notification, ToursFactory, docLink, docTitle, docName) {\n        $scope.btnName = 'Add';\n        $scope.titleName = 'Add Document';\n        $scope.isSubmitted = false;\n        var userName = $rootScope.auth_user.name;\n        $scope.formdocscope = { name: userName };\n\n        $scope.loginID = $rootScope.auth_user.id;\n\n        if(docLink) {\n            $scope.btnName = 'Update';\n            $scope.titleName = 'Edit Document';\n            $scope.formdocscope.title = docTitle;\n            $scope.formdocscope.link = docLink;\n            $scope.formdocscope.name = docName;\n            $scope.formdocscope.created_by = $scope.loginID;\n        }\n\n        var $validationProvider = $injector.get('$validation');\n        $scope.errorMessage = ToursFactory.validation;\n        // var expression = {\n        //     link: '^(http|https|ftp)?(://)?(www|ftp)?.?[a-z0-9-]+(.|:)([a-z0-9-]+)+([/?].*)?$'\n        // };\n\n        var expression = {\n            link: /(ftp|http|https):\\/\\/(\\w+:{0,1}\\w*@)?(\\S+)(:[0-9]+)?(\\/|\\/([\\w#!:.?+=&%@!\\-\\/]))?/\n        };\n\n        var validMsg = {\n            link: {\n                error: $scope.errorMessage.link.error,\n                success: ''\n            }\n        };\n        $validationProvider.setExpression(expression) // set expression\n                          .setDefaultMsg(validMsg);\n                          \n\n\n        $scope.add_data = function(form) {\n            $validationProvider.validate(form).success(function() {\n                $uibModalInstance.close($scope.formdocscope);\n            }).error(function() {\n                $scope.isSubmitted = false;\n            });\n        };\n    }\n})();\n/**\n * @author a.demeshko\n * created on 21.01.2016\n */\n(function() {\n    'use strict';\n\n    angular.module('BlurAdmin.pages.tours')\n        .controller('AddMealModalCtrl', AddMealModalCtrl);\n    \n    /** @ngInject */\n    function AddMealModalCtrl($scope, $rootScope, $compile, $injector, MealsFactory, UsersFactory, MealservicelocationsFactory, MealservicetypesFactory, $uibModalInstance, Notification, ToursFactory, meals, selectedMeals, mealData) {\n        $scope.btnName = 'Add';\n        $scope.formTitle = 'Add';\n        $scope.isSubmitted = false;\n        $scope.formscope = {\n            meal_id: null,\n            old_meal_id: null,\n            meal_service_type_id: null,\n            meal_service_location_id: null,\n            catering_manager: null,\n        };\n        var selectedMealId = 0;\n        if(mealData){\n            $scope.btnName = 'Update';\n            $scope.formTitle = 'Edit';\n            $scope.formscope.meal_id = mealData.meal_id;\n            $scope.formscope.meal_service_type_id = mealData.meal_service_type_id;\n            $scope.formscope.meal_service_location_id = mealData.meal_service_location_id;\n            $scope.formscope.catering_manager = mealData.catering_manager;\n            $scope.formscope.people = mealData.people;\n            $scope.formscope.specific_item = mealData.specific_item;\n            $scope.formscope.old_meal_id = mealData.meal_id;\n            selectedMealId = mealData.meal_id;\n        }\n        \n        if(selectedMeals.length == 0){\n            $.each(meals, function(i, el) {\n                delete meals[i].isDisabled;\n            });\n        }else{            \n            $.each(meals, function(i, el) {\n                if (meals[i].id != undefined) {\n                    delete meals[i].isDisabled;\n                    if ($.inArray(parseInt(meals[i].id), selectedMeals) >= 0) {\n                        if(meals[i].id != selectedMealId){\n                            meals[i].isDisabled = true;\n                        }\n                    }\n                }\n            });\n        }\n        \n        $scope.mealsTypeOption = meals;\n\n        // $scope.mealsTypeOption = [{name: 'Please select meal type', id: null}];\n        // MealsFactory.getRecords().success(function(response) {\n        //     $scope.mealsTypeOption = $scope.mealsTypeOption.concat(response.data);\n        // }).error(function(error) {\n\n        // });\n\n        $scope.mealServiceTypeOption = [{ name: 'Please select meal service type', id: null }];\n        MealservicetypesFactory.getRecords().success(function(response) {\n            $scope.mealServiceTypeOption = $scope.mealServiceTypeOption.concat(response.data);\n        }).error(function(error) {\n\n        });\n\n        $scope.mealServiceLocationsOption = [{ name: 'Please select meal service location', id: null }];\n        MealservicelocationsFactory.getRecords().success(function(response) {\n            $scope.mealServiceLocationsOption = $scope.mealServiceLocationsOption.concat(response.data);\n        }).error(function(error) {\n\n        });\n\n        $scope.usersOption = [{ name: 'Please select catering manager', id: null }];\n        UsersFactory.getRecords().success(function(response) {\n            $scope.usersOption = $scope.usersOption.concat(response.data);\n\n            $.each($scope.usersOption, function(i, el) {\n                if ($scope.usersOption[i].id != undefined) {\n                    if ($scope.usersOption[i].availability == 1) {\n                        $scope.usersOption[i].isDisabled = true;\n                    }\n                }\n            });\n        }).error(function(error) {\n\n        });\n\n        $scope.checkNumber = function(e) {\n            if($scope.formscope.people.charAt(0) == 0) {\n                $scope.formscope.people = '';\n            }\n            \n            /*if ($scope.formscope.people.length == 1 && (e.which == 96 || e.which == 48) ) {\n                $scope.formscope.people = '';\n                return false;\n            }*/\n        };\n\n        var $validationProvider = $injector.get('$validation');\n        $scope.errorMessage = ToursFactory.validation;\n\n        $scope.add_data = function(form) {\n            $validationProvider.validate(form).success(function() {\n                if($scope.formscope.people == \"0\" || $scope.formscope.people == 0 || $scope.formscope.people == ''){\n                    return false;\n                }\n                $scope.formscope.meal_txt = $scope.mealsTypeOption.filter(function(option) {\n                    return option.id === $scope.formscope.meal_id;\n                })[0].name;\n\n                $scope.formscope.mealservice_txt = $scope.mealServiceTypeOption.filter(function(option) {\n                    return option.id === $scope.formscope.meal_service_type_id;\n                })[0].name;\n\n                $scope.formscope.meallocation_txt = $scope.mealServiceLocationsOption.filter(function(option) {\n                    return option.id === $scope.formscope.meal_service_location_id;\n                })[0].name;\n\n                $scope.formscope.catering_manager_txt = $scope.usersOption.filter(function(option) {\n                    return option.id === $scope.formscope.catering_manager;\n                })[0].name;\n\n                $uibModalInstance.close($scope.formscope);\n            }).error(function() {\n                $scope.isSubmitted = false;\n            });\n        };\n    }\n})();\n/**\n * @author a.demeshko\n * created on 21.01.2016\n */\n(function() {\n    'use strict';\n\n    angular.module('BlurAdmin.pages.tours')\n        .controller('AddNoteModalCtrl', AddNoteModalCtrl);\n\n    /** @ngInject */\n    function AddNoteModalCtrl($scope, $rootScope, $compile, $injector, UsersFactory, $uibModalInstance, Notification, ToursFactory, notesInfo, notesName) {\n        $scope.btnName = 'Add';\n        $scope.titleName = 'Add Note';\n        $scope.isSubmitted = false;\n        $scope.loginID = $rootScope.auth_user.id;\n\n        var userName = $rootScope.auth_user.name;\n        $scope.formnotescope = { name: userName };\n        if(notesInfo) {\n            $scope.btnName = 'Update';\n            $scope.titleName = 'Edit Note';\n            $scope.formnotescope.note = notesInfo;\n            $scope.formnotescope.name = notesName;\n            $scope.formnotescope.created_by = $scope.loginID;\n        }\n\n        var $validationProvider = $injector.get('$validation');\n        $scope.errorMessage = ToursFactory.validation;\n\n        $scope.add_data = function(form) {\n            $validationProvider.validate(form).success(function() {\n                $uibModalInstance.close($scope.formnotescope);\n            }).error(function() {\n                $scope.isSubmitted = false;\n            });\n        };\n    }\n})();\n/**\n * @author a.demeshko\n * created on 21.01.2016\n */\n(function () {\n  'use strict';\n\n  angular.module('BlurAdmin.pages.tours')\n    .controller('AddTaskModalCtrl', AddTaskModalCtrl);\n\n  /** @ngInject */\n  function AddTaskModalCtrl($scope, $uibModalInstance) {\n    $scope.task = '';\n    $scope.message = '';\n    $scope.ok = function () {\n      if($scope.task) {\n        $uibModalInstance.close($scope.task);\n      }\n      else {\n        $scope.message = 'Please add task';\n      }\n    };\n  }\n})();\n/**\n * @author v.lugovsky\n * created on 16.12.2015\n */\n(function() {\n    'use strict';\n\n    angular.module('BlurAdmin.pages.tours')\n        .controller('AddToursCtrl', AddToursCtrl);\n\n    /** @ngInject */\n    function AddToursCtrl($scope, fileReader, $filter, $uibModal, $rootScope, $compile, VisitorsFactory, ToursFactory, UsersFactory, MealservicetypesFactory, MealservicelocationsFactory, LocationsFactory, MealsFactory, OrganizationsFactory, DefaulttasksFactory, TourtypesFactory, TransportsFactory, $timeout, $stateParams, $state, $injector, Notification, DTOptionsBuilder, DTColumnBuilder, DTColumnDefBuilder) {\n        $scope.sDate = $stateParams.date;\n        if($stateParams.date) {\n            var startDate = moment($stateParams.date,'DDMMYYYYHHmmss').format('YYYY-MM-DD HH:mm:ss');\n        }\n        else {\n            var startDate = null;\n        }\n\n        $scope.pageName = 'Add Tour';\n        $scope.btnName = 'Add';\n        $scope.isSubmitted = false;\n        $scope.formscope = {\n            tourtype_id: null,\n            transport_id: null,\n            location_id: null,\n            meals: false,\n            manager: null,\n            status: 0,\n            contact_manager: null,\n            organization: '',\n            start_date: startDate\n        };\n        $scope.showTable = true;\n        $scope.smartTablePageSize = 5;\n        $scope.loginProgress = false;\n        $scope.loginID = $rootScope.auth_user.id;\n        $scope.edittourtype = false\n\n        \n\n        /** Get organization name when already used */\n        $scope.organizationOption = [];\n        ToursFactory.getOrganization().success(function(response) {\n            $scope.organizationOption = $scope.organizationOption.concat(response.data);\n        }).error(function(error) {\n\n        });\n\n        $scope.residentSelected = function(selected) {\n            if (selected) {\n                if (selected.originalObject.organization) {\n                    $scope.formscope.organization = selected.originalObject.organization;\n                } else {\n                    $scope.formscope.organization = selected.originalObject;\n                }\n            }\n        };\n\n        $scope.smartTablePageSize = 10;\n\n        $scope.activeTaskList = [];\n        $scope.addTaskBtn = false;\n        $scope.minDateMoment = moment().subtract('day');\n        $scope.visitors = [];\n        $scope.mealsType = [];\n        $scope.selectedMeals = [];\n\n        $scope.statusOption = [\n            { 'value': 0, 'text': 'Inactive' },\n            { 'value': 1, 'text': 'Active' }\n        ];\n\n        /** Start options */\n        $scope.TransportOption = [{ name: 'Please select transport type', id: null }];\n        TransportsFactory.getRecords().success(function(response) {\n            $scope.TransportOption = $scope.TransportOption.concat(response.data);\n        }).error(function(error) {\n\n        });\n\n        $scope.TourTypeOption = [{ name: 'Please select tour type', id: null }];\n        TourtypesFactory.getRecords().success(function(response) {\n            $scope.TourTypeOption = $scope.TourTypeOption.concat(response.data);\n        }).error(function(error) {\n\n        });\n\n        $scope.OrganizationTypeOption = [{ name: 'Please select organization type', id: null }];\n        OrganizationsFactory.getRecords().success(function(response) {\n            $scope.OrganizationTypeOption = $scope.OrganizationTypeOption.concat(response.data);\n        }).error(function(error) {\n\n        });\n\n        $scope.mealsTypeOption = [{ name: 'Please select meal type', id: null }];\n        MealsFactory.getRecords().success(function(response) {\n            $scope.mealsTypeOption = $scope.mealsTypeOption.concat(response.data);\n        }).error(function(error) {\n\n        });\n\n        $scope.locationsTypeOption = [{ name: 'Please select location', id: null }];\n        LocationsFactory.getRecords().success(function(response) {\n            $scope.locationsTypeOption = $scope.locationsTypeOption.concat(response.data);\n        }).error(function(error) {\n\n        });\n\n        $scope.mealServiceTypeOption = [{ name: 'Please select meal service type', id: null }];\n        MealservicetypesFactory.getRecords().success(function(response) {\n            $scope.mealServiceTypeOption = $scope.mealServiceTypeOption.concat(response.data);\n        }).error(function(error) {\n\n        });\n\n        $scope.mealServiceLocationsOption = [{ name: 'Please select meal service location', id: null }];\n        MealservicelocationsFactory.getRecords().success(function(response) {\n            $scope.mealServiceLocationsOption = $scope.mealServiceLocationsOption.concat(response.data);\n        }).error(function(error) {\n\n        });\n\n        $scope.managersOption = [{ name: 'Please select tour manager', id: null }];\n        UsersFactory.getTourManager().success(function(response) {\n            $scope.managersOption = $scope.managersOption.concat(response.data);\n            $.each($scope.managersOption, function(i, el) {\n                if ($scope.managersOption[i].id != undefined) {\n                    if ($scope.managersOption[i].availability == 1) {\n                        $scope.managersOption[i].isDisabled = true;\n                    }\n                }\n            });\n        }).error(function(error) {\n\n        });\n\n        $scope.VisitorOption = [{ name: 'Please select visitor type', id: null }];\n        VisitorsFactory.getRecords().success(function(response) {\n            $scope.VisitorOption = $scope.VisitorOption.concat(response.data);\n        }).error(function(error) {\n\n        });\n\n        /*$scope.usersOption = [{name: 'Please select catering manager', id: null}];\n        UsersFactory.getRecords().success(function(response) {\n            $scope.usersOption = $scope.usersOption.concat(response.data);\n        }).error(function(error) {\n            \n        });*/\n        /** End options */\n\n        $scope.$watch(\"formscope.tourtype_id\", function(newValue, oldValue) {\n            if (newValue) {\n                $scope.activeTaskList = [];\n                DefaulttasksFactory.getRecords(newValue).success(function(response) {\n                    $scope.taskList = response.data;\n                    for (var i = 0; i < $scope.taskList.length; i++) {\n                        if ($scope.taskList[i].status == 1) {\n                            var activeTask = {\n                                task: $scope.taskList[i].task,\n                                status: 1\n                            };\n                            $scope.activeTaskList.push(activeTask);\n                        }\n                    }\n                }).error(function(error) {\n\n                });\n                $scope.addTaskBtn = true;\n            } else {\n                $scope.addTaskBtn = false;\n                $scope.activeTaskList = [];\n            }\n        });\n\n        $scope.unconnect = function(item) {\n            $scope.activeTaskList.splice(item, 1);\n        };\n\n        $scope.connect = function(item) {\n            $scope.activeTaskList[item].status = 1;\n        };\n\n        $scope.showModal = function(item) {\n            $uibModal.open({\n                animation: true,\n                size: 'lg',\n                controller: 'AddTaskModalCtrl',\n                templateUrl: 'app/pages/tours/taskModal.html'\n            }).result.then(function(taskName) {\n                var activeTask = {\n                    task: taskName,\n                    status: 1\n                };\n                $scope.activeTaskList.push(activeTask);\n            });\n        };\n\n        $scope.addVisitor = function(item) {\n            $uibModal.open({\n                animation: true,\n                size: 'lg',\n                controller: 'AddVisitorModalCtrl',\n                templateUrl: 'app/pages/tours/visitorModal.html',\n                resolve: {\n                    organizationName: function() {\n                        return $scope.formscope.organization\n                    },\n                    organizationNameData: function() {\n                        return $scope.organizationOption\n                    },\n                    visitorInfo: function() {\n                        return {}\n                    },\n                    isEdit: function() {\n                        return false\n                    }\n                }\n            }).result.then(function(data) {\n                var duplicateVisitor = false;\n                $scope.showTable = false;\n                $.each($scope.visitors, function(i, el) {\n                    if ($scope.visitors[i].id != undefined) {\n                        if ($scope.visitors[i].id === data.id) {\n                            duplicateVisitor = true;\n                        }\n                    }\n                });\n\n                if (duplicateVisitor) {\n                    Notification.error(\"The visitor you have entered already exist\");\n                } else {\n                    $scope.visitors.splice(0, 0, data);\n                    // $scope.visitors.push(data);\n                    $timeout(function() {\n                        $scope.$apply();\n                        $scope.showTable = true;\n                    }, 100);\n                }\n            });\n        };\n\n        $scope.editVisitor = function(visitorData, index) {\n            $uibModal.open({\n                animation: true,\n                size: 'lg',\n                controller: 'AddVisitorModalCtrl',\n                templateUrl: 'app/pages/tours/visitorModal.html',\n                resolve: {\n                    organizationName: function() {\n                        return $scope.formscope.organization\n                    },\n                    organizationNameData: function() {\n                        return $scope.organizationOption\n                    },\n                    visitorInfo: function() {\n                        return visitorData\n                    },\n                    isEdit: function() {\n                        return false\n                    }\n                }\n            }).result.then(function(data) {\n                var duplicateVisitor = false;\n                $scope.showTable = false;\n\n                $.each($scope.visitors, function(i, el) {\n                    if ($scope.visitors[i].id != undefined) {\n                        if ($scope.visitors[i].id === data.id && index != i) {\n                            duplicateVisitor = true;\n                        }\n                    }\n                });\n\n                if (duplicateVisitor) {\n                    Notification.error(\"The visitor you have entered already exist.\");\n                    $timeout(function() {\n                        $scope.$apply();\n                        $scope.showTable = true;\n                    }, 100);\n                } else {\n                    $scope.visitors[index] = data;\n                    $timeout(function() {\n                        $scope.$apply();\n                        $scope.showTable = true;\n                    }, 100);\n                }\n            });\n        };\n\n\n        /*$scope.removeVisitor = function(visitorId) {\n            $scope.visitors.splice(visitorId, 1);\n        };*/\n\n        $scope.removeVisitor = function removeVisitor(row) {\n            var index = $scope.visitors.indexOf(row);\n            if (index !== -1) {\n                $scope.visitors.splice(index, 1);\n                $scope.showTable = false;\n                $timeout(function() {\n                    $scope.$apply();\n                    $scope.showTable = true;\n                }, 100);\n            }\n        }\n\n        $scope.addMeals = function(item) {\n            $uibModal.open({\n                animation: true,\n                backdrop: 'static',\n                controller: 'AddMealModalCtrl',\n                templateUrl: 'app/pages/tours/mealModal.html',\n                resolve: {\n                    meals: function() {\n                        return $scope.mealsTypeOption\n                    },\n                    selectedMeals: function() {\n                        return $scope.selectedMeals\n                    }, \n                    mealData: function() {\n                        return item;\n                    }\n                }\n            }).result.then(function(data) {\n                $scope.mealsType.push(data);\n\n                $.each($scope.mealsTypeOption, function(i, el) {\n                    if ($scope.mealsTypeOption[i].id != undefined) {\n                        if ($scope.mealsTypeOption[i].id === data.meal_id) {\n                            $scope.selectedMeals.push(data.meal_id);\n                        }\n                    }\n                });\n                Notification.success('Meal added successfully.');\n            });\n        };\n        \n        $scope.editMeals = function(mealData, index) {\n            $uibModal.open({\n                animation: true,\n                backdrop: 'static',\n                controller: 'AddMealModalCtrl',\n                templateUrl: 'app/pages/tours/mealModal.html',\n                resolve: {\n                    meals: function() {\n                        return $scope.mealsTypeOption;\n                    },\n                    selectedMeals: function() {\n                        return $scope.selectedMeals;\n                    },\n                    mealData: function() {\n                        return mealData;\n                    }\n                }\n            }).result.then(function(data) {\n                $scope.mealsType[index] = data;\n                if(data.meal_id !== data.old_meal_id){\n                    var uniqueIds = [];\n                    $.each($scope.selectedMeals, function(i, el){\n                        if($.inArray(el, uniqueIds) === -1) uniqueIds.push(el);\n                    });\n                    $scope.selectedMeals = uniqueIds;\n                    var removeIndex = $scope.selectedMeals.indexOf(data.old_meal_id);\n                    $scope.selectedMeals.splice(removeIndex, 1);\n                }\n                $.each($scope.mealsTypeOption, function(i, el) {\n                    if ($scope.mealsTypeOption[i].id != undefined) {\n                        if ($scope.mealsTypeOption[i].id === data.meal_id) {\n                            $scope.selectedMeals.push(data.meal_id);\n                        }\n                    }\n                });\n                Notification.success('Meal updated successfully.');\n            });\n        };\n\n        $scope.removeMeal = function(mealsId) {\n            var uniqueIds = [];\n            $.each($scope.selectedMeals, function(i, el){\n                if($.inArray(el, uniqueIds) === -1) uniqueIds.push(el);\n            });\n            $scope.selectedMeals = uniqueIds;\n            var removeIndex = $scope.selectedMeals.indexOf($scope.mealsType[mealsId].meal_id);\n            $scope.selectedMeals.splice(removeIndex, 1);\n            $scope.mealsType.splice(mealsId, 1);\n            Notification.success('Meal deleted successfully.');\n        };\n\n        var $validationProvider = $injector.get('$validation');\n        $scope.errorMessage = ToursFactory.validation;\n\n        $validationProvider.setExpression({\n                organization: function(value, scope, element, attrs) {\n                    if (value != '' || value != null || value != 'null') {\n                        return true;\n                    }\n                    return false;\n                }\n            })\n            .setDefaultMsg({\n                organization: {\n                    error: ToursFactory.validation.organization.required\n                }\n            });\n        \n        $scope.mailModal = function(form){\n            $validationProvider.validate(form).success(function() {\n                $scope.formscope.visitors = $scope.visitors;\n                $scope.formscope.mealsType = $scope.mealsType;\n                \n                if ($scope.formscope.meals) {\n                    if ($scope.mealsType.length == 0) {\n                        Notification.error(\"Please add meals first.\");\n                        return;\n                    }\n                }\n\n                if (!$scope.formscope.contact_manager) {\n                    if ($scope.formscope.visitors.length == 0) {\n                        Notification.error(\"Please add visitors first.\");\n                    } else {\n                        Notification.error(\"Please select contact manager.\");\n                    }\n                    return;\n                }\n                \n                $uibModal.open({\n                    animation: true,\n                    backdrop: 'static',\n                    controller: 'TourMailModalCtrl',\n                    templateUrl: 'app/pages/tours/mailModal.html',\n                    resolve: {\n                        tourStatus: function() {\n                            return 0;\n                        }\n                    }\n                }).result.then(function(data) {\n                    $scope.add_data(data)\n                });\n            }).error(function() {\n                $scope.isSubmitted = false;\n            });                \n        }\n        \n        $scope.add_data = function(mailInfo) {            \n//            $validationProvider.validate(form).success(function() {\n                $scope.loginProgress = true;\n                $scope.isSubmitted = true;\n                $scope.formscope.visitors = $scope.visitors;\n                $scope.formscope.mealsType = $scope.mealsType;\n                $scope.formscope.tasks = $scope.activeTaskList;\n                \n                $scope.formscope.sendMail = mailInfo.sendMail;\n                $scope.formscope.mailSubject = mailInfo.mailSubject;\n                $scope.formscope.mailContent = mailInfo.mailContent;\n\n                $scope.formscope.documents = $scope.docList;\n                $scope.formscope.notes = $scope.notes;\n                \n                ToursFactory.addRecord($scope.formscope).success(function(res) {\n                    Notification.success(res.success);\n                    $state.go('tours.list');\n                    $scope.isSubmitted = false;\n                }).error(function(err) {\n                    $scope.loginProgress = false;\n                    Notification.error(err.error);\n                    $scope.isSubmitted = false;\n                });\n                \n//            }).error(function() {\n//                $scope.isSubmitted = false;\n//            });\n        };\n\n        $scope.docList = [];\n        /** Add document link */\n        $scope.addDocument = function(item) {\n            $uibModal.open({\n                animation: true,\n                controller: 'AddDocumentModalCtrl',\n                templateUrl: 'app/pages/tours/documentModal.html',\n                resolve: {\n                    docLink: function() {\n                        return ''\n                    },\n                    docTitle: function() {\n                        return ''\n                    },\n                    docName: function() {\n                        return ''\n                    }\n                }\n            }).result.then(function(data) {\n                data.created_by = $scope.loginID;\n                var duplicateDocTitle = false, duplicateDocLink = false;\n\n                $.each($scope.docList, function(i, el) {\n                    if ($scope.docList[i].title.toLowerCase() === data.title.toLowerCase()) {\n                        duplicateDocTitle = true;\n                    }\n                    else if ($scope.docList[i].link === data.link) {\n                        duplicateDocLink = true;\n                    }\n                });\n\n                if (duplicateDocTitle) {\n                    Notification.error(\"The document title you have entered already exist\");\n                } else if (duplicateDocLink) {\n                    Notification.error(\"The document link you have entered already exist\");\n                } else {\n                    $scope.docList.splice(0, 0, data);\n                    // $scope.docList.push(data);\n                    $timeout(function() {\n                        $scope.$apply();\n                        $scope.showTable = true;\n                    }, 100);\n                }\n                // $timeout(function() {\n                //     $scope.$apply();\n                //     $scope.showDocTable = true;\n                // }, 100);\n            });\n        };\n\n        $scope.editDocument = function(docData, index) {\n            $uibModal.open({\n                animation: true,\n                controller: 'AddDocumentModalCtrl',\n                templateUrl: 'app/pages/tours/documentModal.html',\n                resolve: {\n                    docLink: function() {\n                        return docData.link\n                    },\n                    docTitle: function() {\n                        return docData.title\n                    },\n                    docName: function() {\n                        return docData.name\n                    }\n                }\n            }).result.then(function(data) {\n                data.created_by = $scope.loginID;\n                var duplicateDocTitle = false, duplicateDocLink = false;\n\n                $.each($scope.docList, function(i, el) {\n                    if ($scope.docList[i].title.toLowerCase() === data.title.toLowerCase() && index != i) {\n                        duplicateDocTitle = true;\n                    }\n                    else if ($scope.docList[i].link === data.link && index != i) {\n                        duplicateDocLink = true;\n                    }\n                });\n\n                if (duplicateDocTitle) {\n                    Notification.error(\"The document title you have entered already exist\");\n                } else if (duplicateDocLink) {\n                    Notification.error(\"The document link you have entered already exist\");\n                } else {\n                    $scope.docList[index] = data;\n                    // $timeout(function() {\n                    //     $scope.$apply();\n                    //     $scope.showTable = true;\n                    // }, 100);\n                }\n            });\n        };\n\n        $scope.removeDoc = function(docId) {\n            $scope.docList.splice(docId, 1);\n            $timeout(function() {\n                $scope.$apply();\n            }, 100);\n        };\n        /** End Add document link */\n\n        $scope.notes = [];\n        /** Add document link */\n        $scope.addNote = function(item) {\n            $uibModal.open({\n                animation: true,\n                controller: 'AddNoteModalCtrl',\n                templateUrl: 'app/pages/tours/noteModal.html',\n                resolve: {\n                    notesInfo: function() {\n                        return ''\n                    },\n                    notesName: function() {\n                        return ''\n                    }\n                }\n            }).result.then(function(data) {\n                data.created_by = $scope.loginID;\n                $scope.notes.splice(0, 0, data);\n                // $scope.notes.push(data);\n            });\n        };\n\n        $scope.editNote = function(noteData, index) {\n            $uibModal.open({\n                animation: true,\n                controller: 'AddNoteModalCtrl',\n                templateUrl: 'app/pages/tours/noteModal.html',\n                resolve: {\n                    notesInfo: function() {\n                        return noteData.note\n                    },\n                    notesName: function() {\n                        return noteData.name\n                    }\n                }\n            }).result.then(function(data) {\n                $scope.showTable = false;\n                data.created_by = $scope.loginID;\n                $scope.notes[index] = data;\n                $timeout(function() {\n                    $scope.$apply();\n                    $scope.showTable = true;\n                }, 100);\n            });\n        };\n\n        $scope.removeNotes = function(noteId) {\n            $scope.notes.splice(noteId, 1);\n            $timeout(function() {\n                $scope.$apply();\n            }, 100);\n        };\n        /** End Add document link */\n\n\n        $scope.showOrganizationTypeOption = function(user) {\n            var selected = [];\n            if(user.organization_id != null) {\n                selected = $filter('filter')($scope.OrganizationTypeOption, {id: user.organization_id});\n            }\n            return selected.length ? selected[0].name : '-';\n        };\n\n        $scope.showVisitorOption = function(user) {\n            var selected = [];\n            if(user.visitor_type != null) {\n                selected = $filter('filter')($scope.VisitorOption, {id: user.visitor_type});\n            }\n            return selected.length ? selected[0].name : '-';\n        };\n\n        $scope.reloadData = function() {\n            $scope.dtInstance.rerender();\n        };\n\n        $scope.createdRow = function(row, data, dataIndex) {\n            // Recompiling so we can bind Angular directive to the DT\n            $compile(angular.element(row).contents())($scope);\n        }\n\n        $scope.documentOptions = DTOptionsBuilder.newOptions()\n            .withPaginationType('simple_numbers');\n\n        $scope.dtColumnDefs = [\n            DTColumnDefBuilder.newColumnDef(0),\n            DTColumnDefBuilder.newColumnDef(1),\n            DTColumnDefBuilder.newColumnDef(2),\n            DTColumnDefBuilder.newColumnDef(3)\n        ];\n\n\n        $scope.notesOptions = DTOptionsBuilder.newOptions()\n            .withPaginationType('simple_numbers');\n\n        $scope.notesColumnDefs = [\n            DTColumnDefBuilder.newColumnDef(0),\n            DTColumnDefBuilder.newColumnDef(1),\n            DTColumnDefBuilder.newColumnDef(2)\n        ];\n\n\n        $scope.visitorOptions = DTOptionsBuilder.newOptions()\n            .withPaginationType('simple_numbers');\n\n        $scope.visitorColumnDefs = [\n            DTColumnDefBuilder.newColumnDef(0),\n            DTColumnDefBuilder.newColumnDef(1),\n            DTColumnDefBuilder.newColumnDef(2),\n            DTColumnDefBuilder.newColumnDef(3),\n            DTColumnDefBuilder.newColumnDef(4),\n            DTColumnDefBuilder.newColumnDef(5),\n            DTColumnDefBuilder.newColumnDef(6),\n            DTColumnDefBuilder.newColumnDef(7)\n        ];\n    }\n})();\n/**\n * @author a.demeshko\n * created on 21.01.2016\n */\n(function() {\n    'use strict';\n\n    angular.module('BlurAdmin.pages.tours')\n        .controller('AddVisitorModalCtrl', AddVisitorModalCtrl);\n\n    /** @ngInject */\n    function AddVisitorModalCtrl($scope, fileReader, $filter, $uibModal, $rootScope, $compile, $injector, $uibModalInstance, Notification, UsersFactory, Contactmanagement, ToursFactory, VisitorsFactory, OrganizationsFactory, organizationName, organizationNameData, visitorInfo) {\n        $scope.visitorUser = {};\n        $scope.formscope = { gender: null, organization_id: null, visitor_type: null, country_id: null, organization: organizationName };\n        // if(visitorInfo) {\n        //     $scope.formscope = visitorInfo;\n        // }\n        $scope.btnName = 'Add';\n        $scope.isSubmitted = false;\n\n\n        $scope.genderOption = [\n            { label: 'Please select gender', value: null },\n            { label: 'Male', value: 'm' },\n            { label: 'Female', value: 'f' }\n        ];\n\n        // $scope.visitorsOption = [];\n        // Contactmanagement.getAllRecord().success(function(response) {\n        //     $scope.visitorsOption = response.data;\n        // }).error(function(error) {\n\n        // });\n\n        $scope.organizationNameOption = organizationNameData;\n\n        $scope.residentSelected = function(selected) {\n            if (selected) {\n                if (selected.originalObject.organization) {\n                    $scope.formscope.organization = selected.originalObject.organization;\n                } else {\n                    $scope.formscope.organization = selected.originalObject;\n                }\n            }\n        };\n\n        // $scope.visitorSelected = function(selected) {\n        //     if (selected) {\n        //         if (selected.originalObject.name) {\n        //             $scope.formscope = selected.originalObject;\n        //         }\n        //     }\n        // };\n\n        /* GET COUNTRY */\n        $scope.countries = [{ id: null, country_name: 'Please select country' }];\n        UsersFactory.getCountry().success(function(response) {\n            $scope.countries = $scope.countries.concat(response);\n        }).error(function(error) {\n\n        });\n\n        $scope.OrganizationOption = [{ name: 'Please select organization type', id: null }];\n        OrganizationsFactory.getRecords().success(function(response) {\n            $scope.OrganizationOption = $scope.OrganizationOption.concat(response.data);\n        }).error(function(error) {\n\n        });\n\n        $scope.VisitorOption = [{ name: 'Please select visitor type', id: null }];\n        VisitorsFactory.getRecords().success(function(response) {\n            $scope.VisitorOption = $scope.VisitorOption.concat(response.data);\n        }).error(function(error) {\n\n        });\n\n        var $validationProvider = $injector.get('$validation');\n        $scope.errorMessage = Contactmanagement.validation;\n\n        $scope.checkPhoneNumber = function(key, value) {\n            if (key && value) {\n                var data = {\n                    search_key: key,\n                    search_value: value\n                };\n\n                Contactmanagement.checkRecordByPhone(data).success(function(response) {\n                    if (response.data) {\n                        $scope.formscope = response.data;\n                    }\n                }).error(function(error) {\n\n                });\n            }\n        };\n\n        $scope.add_data = function(form) {\n            $validationProvider.validate(form).success(function() {\n                $scope.formscope.name = $scope.formscope.first_name + \" \" + $scope.formscope.last_name\n                $scope.formscope.gender_txt = $scope.genderOption.filter(function(option) {\n                    return option.value === $scope.formscope.gender;\n                })[0].label;\n\n                $scope.formscope.organization_txt = $scope.OrganizationOption.filter(function(option) {\n                    return option.id === $scope.formscope.organization_id;\n                })[0].name;\n\n                $scope.formscope.visitor_txt = $scope.VisitorOption.filter(function(option) {\n                    return option.id === $scope.formscope.visitor_type;\n                })[0].name;\n\n                $uibModalInstance.close($scope.formscope);\n            }).error(function() {\n                $scope.isSubmitted = false;\n            });\n        };\n    }\n})();\n/**\n * @author a.demeshko\n * created on 21.01.2016\n */\n(function() {\n    'use strict';\n\n    angular.module('BlurAdmin.pages.tours')\n        .controller('AddVisitorModalCtrl', AddVisitorModalCtrl);\n\n    /** @ngInject */\n    function AddVisitorModalCtrl($scope, fileReader, $filter, $timeout, $uibModal, $rootScope, $compile, $injector, $uibModalInstance, Notification, UsersFactory, Contactmanagement, ToursFactory, VisitorsFactory, OrganizationsFactory, organizationName, organizationNameData, visitorInfo, MomentosFactory, isEdit) {\n        $scope.visitorUser = {};\n        $scope.formscope = { gender: null, momentos: null, organization_id: null, visitor_type: null, country_id: null, organization: organizationName };\n\n        $scope.btnName = 'Add';\n        $scope.isSubmitted = false;\n        $scope.titleName = 'Add Visitor';\n\n        $scope.addMomento = isEdit;\n        if (visitorInfo.first_name) {\n            $scope.btnName = 'Update';\n            $scope.titleName = 'Edit Visitor';\n            $scope.formscope.first_name = visitorInfo.first_name;\n            $scope.formscope.middle_name = visitorInfo.middle_name;\n            $scope.formscope.last_name = visitorInfo.last_name;\n            $scope.formscope.email = visitorInfo.email;\n            $scope.formscope.mobile = visitorInfo.mobile;\n            $scope.formscope.phone_number = visitorInfo.phone_number;\n            $scope.formscope.gender = visitorInfo.gender;\n            $scope.formscope.visitor_type = visitorInfo.visitor_type;\n            $scope.formscope.organization_id = visitorInfo.organization_id;\n            $scope.formscope.organization = visitorInfo.organization;\n            $scope.formscope.address = visitorInfo.address;\n            $scope.formscope.address1 = visitorInfo.address1;\n            $scope.formscope.country_id = visitorInfo.country_id;\n            $scope.formscope.state = visitorInfo.state;\n            $scope.formscope.city = visitorInfo.city;\n            $scope.formscope.zip_code = visitorInfo.zip_code;\n            $scope.formscope.momentos = visitorInfo.momentos;\n            \n            //$scope.formscope = visitorInfo;\n        }\n\n        $scope.$broadcast('angucomplete-alt:changeInput', 'organization', organizationName);\n\n        $scope.showDropdownFirstName = false;\n        $scope.showDropdownLastName = false;\n        $scope.showDropdownEmail = false;\n        $scope.showDropdownMobile = false;\n\n        $scope.searching = false;\n        $scope.textNoResults = \"\";\n\n        $scope.genderOption = [\n            { label: 'Please select gender', value: null },\n            { label: 'Male', value: 'm' },\n            { label: 'Female', value: 'f' }\n        ];\n\n\n        $scope.closePopup = function(event) {\n            $scope.searchResult1 = [];\n            $scope.showDropdownFirstName = false;\n            $scope.showDropdownLastName = false;\n        };\n\n        $scope.hoverRow = function(index) {\n            $scope.currentIndex = index;\n        };\n\n        $scope.searchResult1 = [];\n        $scope.checkPhoneNumber = function(value, filed, e) {\n            if (value) {\n                var data = {\n                    search_value: value\n                };\n\n                if(e) {\n                    if (e.keyCode == 8 || (e.keyCode >= 48 && e.keyCode <= 90) || (e.keyCode >= 96 && e.keyCode <= 105)) {\n                        if (value.length >= 2) {\n                            Contactmanagement.checkRecordByPhone(data).success(function(response) {\n                                if (response.data.length != 0) {\n                                    $scope.searchResult1 = response.data;\n                                    if (filed == 'first_name') {\n                                        $scope.showDropdownFirstName = true;\n                                    } else if (filed == 'last_name') {\n                                        $scope.showDropdownLastName = true;\n                                    } else if (filed == 'email') {\n                                        $scope.showDropdownEmail = true;\n                                    } else if (filed == 'mobile') {\n                                        $scope.showDropdownMobile = true;\n                                    }\n                                    $scope.searching = true;\n                                } else {\n                                    $scope.searchResult1 = [];\n                                    $scope.textNoResults = \"No results found\";\n                                }\n                            }).error(function(error) {\n\n                            });\n                        }\n                    }\n                }\n            } else {\n                $scope.searchResult1 = [];\n                if (filed == 'first_name') {\n                    $scope.showDropdownFirstName = false;\n                } else if (filed == 'last_name') {\n                    $scope.showDropdownLastName = false;\n                } else if (filed == 'email') {\n                    $scope.showDropdownEmail = false;\n                } else if (filed == 'mobile') {\n                    $scope.showDropdownMobile = false;\n                }\n            }\n        };\n\n        $scope.selectResult = function(selected) {\n            if (selected.name) {\n                $scope.formscope = {};\n\n                $scope.formscope = selected;\n                $scope.formscope.name = selected.first_name + \" \" + selected.last_name;\n\n                $scope.$broadcast('angucomplete-alt:changeInput', 'firstName', selected.first_name);\n                $scope.$broadcast('angucomplete-alt:changeInput', 'lastName', selected.last_name);\n                $scope.$broadcast('angucomplete-alt:changeInput', 'email', selected.email);\n                $scope.$broadcast('angucomplete-alt:changeInput', 'mobile', selected.mobile);\n                // $scope.showDropdown = false;\n            } else {\n                $scope.formscope.first_name = selected;\n            }\n        }\n\n        $scope.searchMobileResult = [];\n        /*$scope.checkNumber = function() {\n            var searchData = {\n                search_value: $scope.formscope.mobile\n            };\n\n            Contactmanagement.checkRecordByPhone(searchData).success(function(response) {\n                $scope.searchMobileResult = response;\n            }).error(function(error) {\n\n            });\n\n            return $timeout(function() {\n                return $scope.searchMobileResult;\n            }, 500);\n            // if ((e.keyCode >= 48 && e.keyCode <= 57) || (e.keyCode >= 96 && e.keyCode <= 105)) { \n\n            // }\n            // else {\n            //     var str = $scope.formscope.mobile;\n            //     // $scope.formscope.mobile = str.replace(e.key, '');\n            //     // console.log('mobile----',  $scope.formscope.mobile);\n            // }\n        };*/\n\n        $scope.organizationNameOption = organizationNameData;\n\n        $scope.residentSelected = function(selected) {\n            if (selected) {\n                if (selected.originalObject.organization) {\n                    $scope.formscope.organization = selected.originalObject.organization;\n                } else {\n                    $scope.formscope.organization = selected.originalObject;\n                }\n            }\n        };\n\n        $scope.visitorSelectedFirst = function(selected) {\n            if (selected) {\n                if (selected.originalObject.name) {\n                    $scope.formscope = {};\n\n                    $scope.formscope = selected.originalObject;\n                    $scope.formscope.name = selected.originalObject.first_name + \" \" + selected.originalObject.last_name;\n                    // $scope.formscope.first_name = selected.originalObject.first_name;\n                    // $scope.formscope.last_name = selected.originalObject.last_name;\n                    // $scope.formscope.email = selected.originalObject.email;\n                    // $scope.formscope.mobile = selected.originalObject.mobile;\n\n                    $scope.$broadcast('angucomplete-alt:changeInput', 'firstName', selected.originalObject.first_name);\n                    $scope.$broadcast('angucomplete-alt:changeInput', 'lastName', selected.originalObject.last_name);\n                    $scope.$broadcast('angucomplete-alt:changeInput', 'email', selected.originalObject.email);\n                    $scope.$broadcast('angucomplete-alt:changeInput', 'mobile', selected.originalObject.mobile);\n                } else {\n                    $scope.formscope.first_name = selected.originalObject;\n                }\n            }\n        };\n\n        $scope.visitorSelectedLast = function(selected) {\n            if (selected) {\n                if (selected.originalObject.name) {\n                    $scope.formscope = {};\n\n                    $scope.formscope = selected.originalObject;\n                    $scope.formscope.name = selected.originalObject.first_name + \" \" + selected.originalObject.last_name;\n                    // $scope.formscope.first_name = selected.originalObject.first_name;\n                    // $scope.formscope.last_name = selected.originalObject.last_name;\n                    // $scope.formscope.email = selected.originalObject.email;\n                    // $scope.formscope.mobile = selected.originalObject.mobile;\n\n                    $scope.$broadcast('angucomplete-alt:changeInput', 'firstName', selected.originalObject.first_name);\n                    $scope.$broadcast('angucomplete-alt:changeInput', 'lastName', selected.originalObject.last_name);\n                    $scope.$broadcast('angucomplete-alt:changeInput', 'email', selected.originalObject.email);\n                    $scope.$broadcast('angucomplete-alt:changeInput', 'mobile', selected.originalObject.mobile);\n                } else {\n                    $scope.formscope.last_name = selected.originalObject;\n                }\n            }\n        };\n\n        $scope.visitorSelectedEmail = function(selected) {\n            if (selected) {\n                if (selected.originalObject.name) {\n                    $scope.formscope = {};\n\n                    $scope.formscope = selected.originalObject;\n                    // $scope.formscope.name = selected.originalObject.first_name +\" \"+ selected.originalObject.last_name;\n                    // $scope.formscope.first_name = selected.originalObject.first_name;\n                    // $scope.formscope.last_name = selected.originalObject.last_name;\n                    // $scope.formscope.email = selected.originalObject.email;\n                    // $scope.formscope.mobile = selected.originalObject.mobile;\n\n                    $scope.$broadcast('angucomplete-alt:changeInput', 'firstName', selected.originalObject.first_name);\n                    $scope.$broadcast('angucomplete-alt:changeInput', 'lastName', selected.originalObject.last_name);\n                    $scope.$broadcast('angucomplete-alt:changeInput', 'email', selected.originalObject.email);\n                    $scope.$broadcast('angucomplete-alt:changeInput', 'mobile', selected.originalObject.mobile);\n                } else {\n                    $scope.formscope.email = selected.originalObject;\n                }\n            }\n        };\n\n        $scope.visitorSelectedMobile = function(selected) {\n            if (selected) {\n                if (selected.originalObject.name) {\n                    $scope.formscope = {};\n\n                    $scope.formscope = selected.originalObject;\n                    // $scope.formscope.name = selected.originalObject.first_name +\" \"+ selected.originalObject.last_name;\n                    // $scope.formscope.first_name = selected.originalObject.first_name;\n                    // $scope.formscope.last_name = selected.originalObject.last_name;\n                    // $scope.formscope.email = selected.originalObject.email;\n                    // $scope.formscope.mobile = selected.originalObject.mobile;\n\n                    $scope.$broadcast('angucomplete-alt:changeInput', 'firstName', selected.originalObject.first_name);\n                    $scope.$broadcast('angucomplete-alt:changeInput', 'lastName', selected.originalObject.last_name);\n                    $scope.$broadcast('angucomplete-alt:changeInput', 'email', selected.originalObject.email);\n                    $scope.$broadcast('angucomplete-alt:changeInput', 'mobile', selected.originalObject.mobile);\n                } else {\n                    $scope.formscope.mobile = selected.originalObject;\n                }\n            }\n        };\n\n        /* GET COUNTRY */\n        $scope.countries = [{ id: null, country_name: 'Please select country' }];\n        UsersFactory.getCountry().success(function(response) {\n            $scope.countries = $scope.countries.concat(response);\n        }).error(function(error) {\n\n        });\n\n        $scope.OrganizationOption = [{ name: 'Please select organization type', id: null }];\n        OrganizationsFactory.getRecords().success(function(response) {\n            $scope.OrganizationOption = $scope.OrganizationOption.concat(response.data);\n        }).error(function(error) {\n\n        });\n\n        $scope.VisitorOption = [{ name: 'Please select visitor type', id: null }];\n        VisitorsFactory.getRecords().success(function(response) {\n            $scope.VisitorOption = $scope.VisitorOption.concat(response.data);\n        }).error(function(error) {\n\n        });\n\n        $scope.MomentosOption = [{ name: 'Please select momento', id: null }];\n        MomentosFactory.getRecords().success(function(response) {\n            $scope.MomentosOption = $scope.MomentosOption.concat(response.data);\n        }).error(function(error) {\n\n        });\n\n        var $validationProvider = $injector.get('$validation');\n        $scope.errorMessage = Contactmanagement.validation;\n\n        /*$scope.search = function(userInputString) {\n            var searchData = {\n                search_value: userInputString\n            };\n\n            var searchResult = [];\n            Contactmanagement.checkRecordByPhone(searchData).success(function(response) {\n                searchResult.push(response);\n            }).error(function(error) {\n\n            });\n\n            return $timeout(function() {\n                return searchResult[0];\n            }, 500);\n        }*/\n\n        $scope.add_data = function(form) {\n            $validationProvider.validate(form).success(function(success) {\n                $scope.formscope.name = $scope.formscope.first_name + \" \" + $scope.formscope.last_name;\n\n                if ($scope.formscope.gender) {\n                    $scope.formscope.gender_txt = $scope.genderOption.filter(function(option) {\n                        return option.value === $scope.formscope.gender;\n                    })[0].label;\n                } else {\n                    $scope.formscope.gender_txt = '';\n                }\n\n                if ($scope.formscope.organization_id) {\n                    $scope.formscope.organization_txt = $scope.OrganizationOption.filter(function(option) {\n                        return option.id === $scope.formscope.organization_id;\n                    })[0].name;\n                } else {\n                    $scope.formscope.organization_txt = '';\n                }\n\n                if ($scope.formscope.visitor_type) {\n                    $scope.formscope.visitor_txt = $scope.VisitorOption.filter(function(option) {\n                        return option.id === $scope.formscope.visitor_type;\n                    })[0].name;\n                } else {\n                    $scope.formscope.visitor_txt = '';\n                }\n\n                $uibModalInstance.close($scope.formscope);\n            }).error(function(error) {\n                $scope.isSubmitted = false;\n            });\n        };\n    }\n})();\n/**\n * @author v.lugovsky\n * created on 16.12.2015\n */\n(function() {\n    'use strict';\n\n    angular.module('BlurAdmin.pages.tours')\n        .controller('EditToursCtrl', EditToursCtrl);\n\n    /** @ngInject */\n    function EditToursCtrl($scope, fileReader, $filter, $uibModal, $rootScope, $compile, VisitorsFactory, ToursFactory, UsersFactory, MealservicetypesFactory, MealservicelocationsFactory, LocationsFactory, MealsFactory, OrganizationsFactory, DefaulttasksFactory, TourtypesFactory, TransportsFactory, $timeout, $stateParams, $state, $injector, Notification, editableOptions, editableThemes, $q, $route, baConfig) {\n        $scope.pageName = 'Edit';\n        $scope.btnName = 'Update';\n        $scope.isSubmitted = false;\n        $scope.urlID = $stateParams.id;\n        $scope.showTable = false;\n\n        $scope.smartTablePageSize = 5;\n\n        $scope.activeTaskList = [];\n        $scope.addTaskBtn = false;\n        $scope.minDateMoment = moment().subtract('day');\n        $scope.visitors = [];\n        $scope.mealsType = [];\n        $scope.selectedMeals = [];\n\n        $scope.docList = [];\n        $scope.notes = [];\n\n        $scope.errorMessage = ToursFactory.validation;\n        var $validationProvider = $injector.get('$validation');\n\n        /** Get organization name when already used */\n        $scope.organizationOption = [];\n        ToursFactory.getOrganization().success(function(response) {\n            $scope.organizationOption = $scope.organizationOption.concat(response.data);\n        }).error(function(error) {\n\n        });\n\n        $scope.managersOption = [{ name: 'Please select tour manager', id: null }];\n        UsersFactory.getTourManager().success(function(response) {\n            $scope.managersOption = $scope.managersOption.concat(response.data);\n            $.each($scope.managersOption, function(i, el) {\n                if ($scope.managersOption[i].id != undefined) {\n                    if ($scope.managersOption[i].availability == 1) {\n                        $scope.managersOption[i].isDisabled = true;\n                    }\n                }\n            });\n        }).error(function(error) {\n\n        });\n\n        $scope.residentSelected = function(selected) {\n            if (selected) {\n                if (selected.originalObject.organization) {\n                    $scope.formscope.organization = selected.originalObject.organization;\n                } else {\n                    $scope.formscope.organization = selected.originalObject;\n                }\n            }\n        }\n\n        /** Start options */\n        $scope.TransportOption = [{ name: 'Please select transport type', id: null }];\n        TransportsFactory.getRecords().success(function(response) {\n            $scope.TransportOption = $scope.TransportOption.concat(response.data);\n        }).error(function(error) {\n\n        });\n\n        $scope.TourTypeOption = [{ name: 'Please select tour type', id: null }];\n        TourtypesFactory.getRecords().success(function(response) {\n            $scope.TourTypeOption = $scope.TourTypeOption.concat(response.data);\n        }).error(function(error) {\n\n        });\n\n        $scope.OrganizationTypeOption = [{ name: 'Please select organization type', id: null }];\n        OrganizationsFactory.getRecords().success(function(response) {\n            $scope.OrganizationTypeOption = $scope.OrganizationTypeOption.concat(response.data);\n        }).error(function(error) {\n\n        });\n\n        $scope.mealsTypeOption = [{ name: 'Please select meal type', id: null }];\n        MealsFactory.getRecords().success(function(response) {\n            $scope.mealsTypeOption = $scope.mealsTypeOption.concat(response.data);\n        }).error(function(error) {\n\n        });\n\n        $scope.locationsTypeOption = [{ name: 'Please select location', id: null }];\n        LocationsFactory.getRecords().success(function(response) {\n            $scope.locationsTypeOption = $scope.locationsTypeOption.concat(response.data);\n        }).error(function(error) {\n\n        });\n\n        $scope.mealServiceTypeOption = [{ name: 'Please select meal service type', id: null }];\n        MealservicetypesFactory.getRecords().success(function(response) {\n            $scope.mealServiceTypeOption = $scope.mealServiceTypeOption.concat(response.data);\n        }).error(function(error) {\n\n        });\n\n        $scope.mealServiceLocationsOption = [{ name: 'Please select meal service location', id: null }];\n        MealservicelocationsFactory.getRecords().success(function(response) {\n            $scope.mealServiceLocationsOption = $scope.mealServiceLocationsOption.concat(response.data);\n        }).error(function(error) {\n\n        });\n\n        $scope.VisitorOption = [{ name: 'Please sele$scope.urlIDct visitor type', id: null }];\n        VisitorsFactory.getRecords().success(function(response) {\n            $scope.VisitorOption = $scope.VisitorOption.concat(response.data);\n        }).error(function(error) {\n\n        });\n\n        $scope.usersOption = [{ name: 'Please select catering manager', id: null }];\n        UsersFactory.getRecords().success(function(response) {\n            $scope.usersOption = $scope.usersOption.concat(response.data);\n        }).error(function(error) {\n\n        });\n        /** End options */\n\n        $scope.$watch(\"formscope.tourtype_id\", function(newValue, oldValue) {\n            if (newValue) {\n                $scope.activeTaskList = [];\n                DefaulttasksFactory.getRecords(newValue).success(function(response) {\n                    $scope.taskList = response.data;\n                    for (var i = 0; i < $scope.taskList.length; i++) {\n                        if ($scope.taskList[i].status == 1) {\n                            var activeTask = {\n                                task: $scope.taskList[i].task,\n                                status: 1\n                            };\n                            $scope.activeTaskList.push(activeTask);\n                        }\n                    }\n                }).error(function(error) {\n\n                });\n                $scope.addTaskBtn = true;\n            } else {\n                $scope.addTaskBtn = false;\n                $scope.activeTaskList = [];\n            }\n        });\n\n        $scope.unconnect = function(item) {\n            $scope.activeTaskList.splice(item, 1);\n        };\n\n        $scope.connect = function(item) {\n            $scope.activeTaskList[addVisitoritem].status = 1;\n        };\n\n        $scope.showModal = function(item) {\n            $uibModal.open({\n                animation: true,\n                controller: 'AddTaskModalCtrl',\n                templateUrl: 'app/pages/tours/taskModal.html'\n            }).result.then(function(taskName) {\n                var activeTask = {\n                    task: taskName,\n                    status: 1\n                };\n                $scope.activeTaskList.push(activeTask);\n            });\n        };\n\n        $scope.addVisitor = function(item) {\n            $scope.urlID\n            $uibModal.open({\n                animation: true,\n                size: 'lg',\n                controller: 'AddVisitorModalCtrl',\n                templateUrl: 'app/pages/tours/visitorModal.html',\n                resolve: {\n                    organizationName: function() {\n                        return $scope.formscope.organization\n                    },\n                    organizationNameData: function() {\n                        return $scope.organizationOption\n                    },\n                    visitorInfo: function() {\n                        return null\n                    },\n                }\n            }).result.then(function(data) {\n                var duplicateVisitor = false;\n                $scope.showTable = false;\n                $.each($scope.visitors, function(i, el) {\n                    if ($scope.visitors[i].id != undefined) {\n                        if ($scope.visitors[i].id === data.id) {\n                            duplicateVisitor = true;\n                        }\n                    }\n                });\n\n                if (duplicateVisitor) {\n                    Notification.error(\"The visitor you have entered already exist\");\n                    $timeout(function() {\n                        $scope.$apply();\n                        $scope.showTable = true;\n                    }, 100);\n\n                } else {\n                    $scope.visitors.push(data);\n                    $timeout(function() {\n                        $scope.$apply();\n                        $scope.showTable = true;\n                    }, 100);\n                }\n            });\n        };\n\n        /*$scope.removeVisitor = function(index) {\n             $scope.visitors.splice(index, 1);\n        };*/\n\n        $scope.editVisitor = function(visitorData, index) {\n            $uibModal.open({\n                animation: true,\n                size: 'lg',\n                controller: 'AddVisitorModalCtrl',\n                templateUrl: 'app/pages/tours/visitorModal.html',\n                resolve: {\n                    organizationName: function() {\n                        return $scope.formscope.organization\n                    },\n                    organizationNameData: function() {\n                        return $scope.organizationOption\n                    },\n                    visitorInfo: function() {\n                        return visitorData\n                    },\n                }\n            }).result.then(function(data) {\n                $scope.urlID\n                var duplicateVisitor = false;\n                $scope.showTable = false;\n\n                $.each($scope.visitors, function(i, el) {\n                    if ($scope.visitors[i].id != undefined) {\n                        if ($scope.visitors[i].id === data.id) {\n                            duplicateVisitor = true;\n                        }\n                    }\n                });\n\n                if (duplicateVisitor) {\n                    Notification.error(\"The visitor you have entered already exist\");\n                    $timeout(function() {\n                        $scope.$apply();\n                        $scope.showTable = true;\n                    }, 100);\n                } else {\n                    $scope.visitors[index] = data;\n                    console.log($scope.visitors);\n                    $timeout(function() {\n                        $scope.$apply();\n                        $scope.showTable = true;\n                    }, 100);\n                }\n            });\n            $scope.urlID\n        };\n\n        $scope.removeVisitor = function removeVisitor(row) {\n            var index = $scope.visitors.indexOf(row);\n            var visitorTourID = $scope.visitors[index].id;\n\n            if (visitorTourID) {\n                var queryData = {\n                    tour_id: $scope.urlID,\n                    visitor_id: visitorTourID\n                }\n\n                ToursFactory.deleteVisitor(queryData).success(function(response) {\n                    $scope.visitorsOption = response.data;\n                }).error(function(error) {\n\n                });\n            }\n\n            if (index !== -1) {\n                $scope.visitors.splice(index, 1);\n                $scope.showTable = false;\n                $timeout(function() {\n                    $scope.$apply();\n                    $scope.showTable = true;\n                }, 100);\n            }\n        };\n\n        $scope.addMeals = function(item) {\n            $uibModal.open({\n                animation: true,\n                controller: 'AddMealModalCtrl',\n                templateUrl: 'app/pages/tours/mealModal.html',\n                resolve: {\n                    meals: function() {\n                        return $scope.mealsTypeOption\n                    },\n                    selectedMeals: function() {\n                        return $scope.selectedMeals\n                    }\n                }\n            }).result.then(function(data) {\n                $scope.mealsType.push(data);\n\n                $.each($scope.mealsTypeOption, function(i, el) {\n                    if ($scope.mealsTypeOption[i].id != undefined) {\n                        if ($scope.mealsTypeOption[i].id === data.meal_id) {\n                            $scope.selectedMeals.push(data.meal_id);\n                        }\n                    }\n                });\n            });\n        };\n\n        $scope.removeMeal = function(mealsId) {\n            $scope.mealsType.splice(mealsId, 1);\n        };\n\n        ToursFactory.getRecord($scope.urlID).success(function(response) {\n            $timeout(function() {\n                $scope.formscope = response.data;\n                $scope.formscope.meals = (response.data.meals == 1) ? true : false;\n                $scope.activeTask = response.data.tour_tasks;\n\n                $scope.docList = $scope.formscope.tour_documents;\n                $scope.notes = $scope.formscope.tour_notes;\n                $scope.showTable = true;\n\n                $.each(response.data.tour_visitors, function(i, el) {\n                    if (response.data.tour_visitors[i].is_tour_admin == 1) {\n                        response.data.contact_manager = response.data.tour_visitors[i].visitor.email;\n                    }\n\n                    response.data.tour_visitors[i].visitor.organization_txt = $scope.OrganizationTypeOption.filter(function(option) {\n                        return option.id === response.data.tour_visitors[i].visitor.organization_id;\n                    })[0].name;\n\n                    response.data.tour_visitors[i].visitor.visitor_txt = $scope.VisitorOption.filter(function(option) {\n                        return option.id === response.data.tour_visitors[i].visitor.visitor_type;\n                    })[0].name;\n\n                    $scope.visitors.push(response.data.tour_visitors[i].visitor);\n                });\n\n                $.each(response.data.tour_meals, function(i, el) {\n                    $scope.selectedMeals.push(response.data.tour_meals[i].meal_id);\n                    response.data.tour_meals[i].meal_txt = $scope.mealsTypeOption.filter(function(option) {\n                        return option.id === response.data.tour_meals[i].meal_id;\n                    })[0].name;\n\n                    response.data.tour_meals[i].mealservice_txt = $scope.mealServiceTypeOption.filter(function(option) {\n                        return option.id === response.data.tour_meals[i].meal_service_type_id;\n                    })[0].name;\n\n                    response.data.tour_meals[i].meallocation_txt = $scope.mealServiceLocationsOption.filter(function(option) {\n                        return option.id === response.data.tour_meals[i].meal_service_location_id;\n                    })[0].name;\n\n                    response.data.tour_meals[i].catering_manager_txt = $scope.usersOption.filter(function(option) {\n                        return option.id === response.data.tour_meals[i].catering_manager;\n                    })[0].name;\n                });\n                $scope.mealsType = response.data.tour_meals;\n            }, 100);\n        }).error(function(error) {\n            Notification.error(error.error);\n            $state.go('tours.list');\n        });\n\n        $scope.add_data = function(form) {\n            $scope.isSubmitted = true;\n            $validationProvider.validate(form).success(function() {\n                $scope.formscope.visitors = $scope.visitors;\n                $scope.formscope.mealsType = $scope.mealsType;\n                $scope.formscope.tasks = $scope.activeTaskList;\n\n                $scope.formscope.documents = $scope.docList;\n                $scope.formscope.notes = $scope.notes;\n\n                $scope.formscope._method = 'PUT';\n\n                ToursFactory.updateRecord($scope.urlID, $scope.formscope).success(function(res) {\n                    Notification.success(res.success);\n                    $state.go('tours.list');\n                    $scope.isSubmitted = false;\n                }).error(function(err) {\n                    Notification.error(err.error);\n                    $scope.isSubmitted = false;\n                });\n            }).error(function(error) {\n                console.log(error);\n                $scope.isSubmitted = false;\n            });\n        };\n\n        /** Add document link */\n        $scope.deleteDocLInk = function(index) {\n            $scope.docList.splice(index, 1);\n        };\n\n        $scope.addToDoItem = function(event, clickPlus) {\n            // if (event.which === 13) {\n            if ($scope.formscope.link) {\n                $scope.docList.unshift({\n                    link: $scope.formscope.link\n                });\n                $scope.formscope.link = '';\n            }\n            // }\n        };\n\n        $scope.deleteNote = function(index) {\n            $scope.notes.splice(index, 1);\n        };\n\n        /** Add Notes */\n        $scope.addNote = function(event, clickPlus) {\n            // if (event.which === 13) {\n            if ($scope.formscope.note) {\n                $scope.notes.unshift({\n                    note: $scope.formscope.note\n                });\n                $scope.formscope.note = '';\n            }\n            // }\n        };\n    }\n})();\n/**\n * @author v.lugovsky\n * created on 16.12.2015\n */\n(function() {\n    'use strict';\n\n    angular.module('BlurAdmin.pages.tours')\n        .controller('EditToursCtrl', EditToursCtrl);\n\n    /** @ngInject */\n    function EditToursCtrl($scope, fileReader, $filter, $uibModal, $rootScope, $compile, VisitorsFactory, ToursFactory, UsersFactory, MealservicetypesFactory, MealservicelocationsFactory, LocationsFactory, MealsFactory, OrganizationsFactory, DefaulttasksFactory, TourtypesFactory, TransportsFactory, $timeout, $stateParams, $state, $injector, Notification, editableOptions, editableThemes, $q, $route, baConfig, DTOptionsBuilder, DTColumnBuilder, DTColumnDefBuilder) {\n        $scope.pageName = 'Edit';\n        $scope.btnName = 'Update';\n        $scope.isSubmitted = false;\n        $scope.urlID = $stateParams.id;\n        $scope.showTable = false;\n        $scope.loginID = $rootScope.auth_user.id;\n        $scope.smartTablePageSize = 5;\n\n        $scope.activeTaskList = [];\n        $scope.addTaskBtn = false;\n        $scope.minDateMoment = moment().subtract('day');\n        $scope.visitors = [];\n        $scope.mealsType = [];\n        $scope.selectedMeals = [];\n        $scope.userRoleID = Object.keys($rootScope.role)[0];\n\n        $scope.documentDataFlag = false;\n        $scope.edittourtype = false\n        // $scope.documentInstance = {};\n\n        /* Only for admin and tour manager */\n        if ($scope.userRoleID == 1) {\n            var statusPending = false,\n                statusAcknowledge = false,\n                statusApproved = false,\n                statusRejected = false,\n                statusCompleted = false;\n        } else {\n            var statusPending = true,\n                statusAcknowledge = true,\n                statusApproved = false,\n                statusRejected = false,\n                statusCompleted = false;\n        }\n\n        $scope.tourStatusOption = [\n            { value: 0, label: 'Pending', isDisabled: statusPending },\n            { value: 1, label: 'Acknowledge', isDisabled: statusAcknowledge },\n            { value: 2, label: 'Approved', isDisabled: statusApproved },\n            { value: 3, label: 'Rejected', isDisabled: statusRejected },\n            { value: 4, label: 'Completed', isDisabled: statusCompleted }\n        ];\n\n        $scope.docList = [];\n        $scope.notes = [];\n\n        $scope.errorMessage = ToursFactory.validation;\n        var $validationProvider = $injector.get('$validation');\n\n        /** Get organization name when already used */\n        $scope.organizationOption = [];\n        ToursFactory.getOrganization().success(function(response) {\n            $scope.organizationOption = $scope.organizationOption.concat(response.data);\n        }).error(function(error) {\n\n        });\n\n        $scope.managersOption = [{ name: 'Please select tour manager', id: null }];\n        UsersFactory.getTourManager().success(function(response) {\n            $scope.managersOption = $scope.managersOption.concat(response.data);\n            $.each($scope.managersOption, function(i, el) {\n                if ($scope.managersOption[i].id != undefined) {\n                    if ($scope.managersOption[i].availability == 1) {\n                        $scope.managersOption[i].isDisabled = true;\n                    }\n                }\n            });\n        }).error(function(error) {\n\n        });\n\n        $scope.residentSelected = function(selected) {\n            if (selected) {\n                if (selected.originalObject.organization) {\n                    $scope.formscope.organization = selected.originalObject.organization;\n                } else {\n                    $scope.formscope.organization = selected.originalObject;\n                }\n            }\n        }\n\n        /** Start options */\n        $scope.TransportOption = [{ name: 'Please select transport type', id: null }];\n        TransportsFactory.getRecords().success(function(response) {\n            $scope.TransportOption = $scope.TransportOption.concat(response.data);\n        }).error(function(error) {\n\n        });\n\n        $scope.TourTypeOption = [{ name: 'Please select tour type', id: null }];\n        TourtypesFactory.getRecords().success(function(response) {\n            $scope.TourTypeOption = $scope.TourTypeOption.concat(response.data);\n        }).error(function(error) {\n\n        });\n\n        $scope.OrganizationTypeOption = [{ name: 'Please select organization type', id: null }];\n        OrganizationsFactory.getRecords().success(function(response) {\n            $scope.OrganizationTypeOption = $scope.OrganizationTypeOption.concat(response.data);\n        }).error(function(error) {\n\n        });\n\n        $scope.mealsTypeOption = [{ name: 'Please select meal type', id: null }];\n        MealsFactory.getRecords().success(function(response) {\n            $scope.mealsTypeOption = $scope.mealsTypeOption.concat(response.data);\n        }).error(function(error) {\n\n        });\n\n        $scope.locationsTypeOption = [{ name: 'Please select location', id: null }];\n        LocationsFactory.getRecords().success(function(response) {\n            $scope.locationsTypeOption = $scope.locationsTypeOption.concat(response.data);\n        }).error(function(error) {\n\n        });\n\n        $scope.mealServiceTypeOption = [{ name: 'Please select meal service type', id: null }];\n        MealservicetypesFactory.getRecords().success(function(response) {\n            $scope.mealServiceTypeOption = $scope.mealServiceTypeOption.concat(response.data);\n        }).error(function(error) {\n\n        });\n\n        $scope.mealServiceLocationsOption = [{ name: 'Please select meal service location', id: null }];\n        MealservicelocationsFactory.getRecords().success(function(response) {\n            $scope.mealServiceLocationsOption = $scope.mealServiceLocationsOption.concat(response.data);\n        }).error(function(error) {\n\n        });\n\n        $scope.VisitorOption = [{ name: 'Please select visitor type', id: null }];\n        VisitorsFactory.getRecords().success(function(response) {\n            $scope.VisitorOption = $scope.VisitorOption.concat(response.data);\n        }).error(function(error) {\n\n        });\n\n        $scope.usersOption = [{ name: 'Please select catering manager', id: null }];\n        UsersFactory.getRecords().success(function(response) {\n            $scope.usersOption = $scope.usersOption.concat(response.data);\n        }).error(function(error) {\n\n        });\n        /** End options */\n\n        $scope.$watch(\"formscope.tourtype_id\", function(newValue, oldValue) {\n            if (newValue) {\n                $scope.activeTaskList = [];\n                DefaulttasksFactory.getRecords(newValue).success(function(response) {\n                    $scope.taskList = response.data;\n                    for (var i = 0; i < $scope.taskList.length; i++) {\n                        if ($scope.taskList[i].status == 1) {\n                            var activeTask = {\n                                task: $scope.taskList[i].task,\n                                status: 1\n                            };\n                            $scope.activeTaskList.push(activeTask);\n                        }\n                    }\n                }).error(function(error) {\n\n                });\n                $scope.addTaskBtn = true;\n            } else {\n                $scope.addTaskBtn = false;\n                $scope.activeTaskList = [];\n            }\n        });\n\n        $scope.unconnect = function(item) {\n            $scope.activeTaskList.splice(item, 1);\n        };\n\n        $scope.connect = function(item) {\n            $scope.activeTaskList[addVisitoritem].status = 1;\n        };\n\n        $scope.showModal = function(item) {\n            $uibModal.open({\n                animation: true,\n                size: 'lg',\n                controller: 'AddTaskModalCtrl',\n                templateUrl: 'app/pages/tours/taskModal.html'\n            }).result.then(function(taskName) {\n                var activeTask = {\n                    task: taskName,\n                    status: 1\n                };\n                $scope.activeTaskList.push(activeTask);\n            });\n        };\n\n        $scope.addVisitor = function(item) {\n            $uibModal.open({\n                animation: true,\n                size: 'lg',\n                controller: 'AddVisitorModalCtrl',\n                templateUrl: 'app/pages/tours/visitorModal.html',\n                resolve: {\n                    organizationName: function() {\n                        return $scope.formscope.organization\n                    },\n                    organizationNameData: function() {\n                        return $scope.organizationOption\n                    },\n                    visitorInfo: function() {\n                        return {}\n                    },\n                    isEdit: function() {\n                        return true\n                    }\n                }\n                }).result.then(function(data) {\n                var duplicateVisitor = false;\n                $scope.showTable = false;\n                $.each($scope.visitors, function(i, el) {\n                    if ($scope.visitors[i].id != undefined) {\n                        if ($scope.visitors[i].id === data.id) {\n                            duplicateVisitor = true;\n                        }\n                    }\n                });\n\n                if (duplicateVisitor) {\n                    Notification.error(\"The visitor you have entered already exist\");\n                    $timeout(function() {\n                        $scope.$apply();\n                        $scope.showTable = true;\n                    }, 100);\n                } else {\n                    $scope.visitors.splice(0, 0, data);\n                    // $scope.visitors.push(data);\n                    $timeout(function() {\n                        $scope.$apply();\n                        $scope.showTable = true;\n                    }, 100);\n                }\n            });\n        };\n\n        $scope.editVisitor = function(visitorData, index) {\n            $uibModal.open({\n                animation: true,\n                size: 'lg',\n                controller: 'AddVisitorModalCtrl',\n                templateUrl: 'app/pages/tours/visitorModal.html',\n                resolve: {\n                    organizationName: function() {\n                        return $scope.formscope.organization\n                    },\n                    organizationNameData: function() {\n                        return $scope.organizationOption\n                    },\n                    visitorInfo: function() {\n                        return visitorData\n                    },\n                    isEdit: function() {\n                        return true\n                    }\n                }\n            }).result.then(function(data) {\n                var duplicateVisitor = false;\n                $scope.showTable = false;\n                \n                $.each($scope.visitors, function(i, el) {\n                    if ($scope.visitors[i].id != undefined) {\n                        if ($scope.visitors[i].id === data.id && index != i) {\n                            duplicateVisitor = true;\n                        }\n                    }\n                });\n\n                if (duplicateVisitor) {\n                    Notification.error(\"The visitor you have entered already exist.\");\n                    $timeout(function() {\n                        $scope.$apply();\n                        $scope.showTable = true;\n                    }, 100);\n                } else {\n                    $scope.visitors[index] = data;\n                    $timeout(function() {\n                        $scope.$apply();\n                        $scope.showTable = true;\n                    }, 100);\n                }\n            });\n        };\n\n        $scope.removeVisitor = function removeVisitor(row) {\n            var index = $scope.visitors.indexOf(row);\n            var visitorTourID = $scope.visitors[index].id;\n\n            if (visitorTourID) {\n                var queryData = {\n                    tour_id: $scope.urlID,\n                    visitor_id: visitorTourID\n                }\n\n                ToursFactory.deleteVisitor(queryData).success(function(response) {\n                    $scope.visitorsOption = response.data;\n                }).error(function(error) {\n\n                });\n            }\n\n            if (index !== -1) {\n                $scope.visitors.splice(index, 1);\n                $scope.showTable = false;\n                $timeout(function() {\n                    $scope.$apply();\n                    $scope.showTable = true;\n                }, 100);\n            }\n        };\n\n        $scope.addMeals = function(item) {\n            $uibModal.open({\n                animation: true,\n                backdrop: 'static',\n                controller: 'AddMealModalCtrl',\n                templateUrl: 'app/pages/tours/mealModal.html',\n                resolve: {\n                    meals: function() {\n                        return $scope.mealsTypeOption\n                    },\n                    selectedMeals: function() {\n                        return $scope.selectedMeals\n                    },\n                    mealData: function() {\n                        return item;\n                    }\n                }\n            }).result.then(function(data) {\n                $scope.mealsType.push(data);\n\n                $.each($scope.mealsTypeOption, function(i, el) {\n                    if ($scope.mealsTypeOption[i].id != undefined) {\n                        if ($scope.mealsTypeOption[i].id === data.meal_id) {\n                            $scope.selectedMeals.push(data.meal_id);\n                        }\n                    }\n                });\n                Notification.success('Meal added successfully.');\n            });\n        };\n        \n        $scope.editMeals = function(mealData, index) {\n            $uibModal.open({\n                animation: true,\n                backdrop: 'static',\n                controller: 'AddMealModalCtrl',\n                templateUrl: 'app/pages/tours/mealModal.html',\n                resolve: {\n                    meals: function() {\n                        return $scope.mealsTypeOption;\n                    },\n                    selectedMeals: function() {\n                        return $scope.selectedMeals;\n                    },\n                    mealData: function() {\n                        return mealData;\n                    }\n                }\n            }).result.then(function(data) {\n                $scope.mealsType[index] = data;\n                if(data.meal_id !== data.old_meal_id){\n                    var uniqueIds = [];\n                    $.each($scope.selectedMeals, function(i, el){\n                        if($.inArray(el, uniqueIds) === -1) uniqueIds.push(el);\n                    });\n                    $scope.selectedMeals = uniqueIds;\n                    var removeIndex = $scope.selectedMeals.indexOf(data.old_meal_id);\n                    $scope.selectedMeals.splice(removeIndex, 1);\n                }\n                $.each($scope.mealsTypeOption, function(i, el) {\n                    if ($scope.mealsTypeOption[i].id != undefined) {\n                        if ($scope.mealsTypeOption[i].id === data.meal_id) {\n                            $scope.selectedMeals.push(data.meal_id);\n                        }\n                    }\n                });\n                Notification.success('Meal updated successfully.');\n            });\n        };\n\n        $scope.removeMeal = function(mealsId) {\n            var uniqueIds = [];\n            $.each($scope.selectedMeals, function(i, el){\n                if($.inArray(el, uniqueIds) === -1) uniqueIds.push(el);\n            });\n            $scope.selectedMeals = uniqueIds;\n            var removeIndex = $scope.selectedMeals.indexOf($scope.mealsType[mealsId].meal_id);\n            $scope.selectedMeals.splice(removeIndex, 1);\n            $scope.mealsType.splice(mealsId, 1);\n            Notification.success('Meal deleted successfully.');\n        };\n\n        $scope.showOrganizationTypeOption = function(user) {\n            var selected = [];\n            if (user.organization_id != null) {\n                selected = $filter('filter')($scope.OrganizationTypeOption, { id: user.organization_id });\n            }\n            return selected.length ? selected[0].name : '-';\n        };\n\n        $scope.showVisitorOption = function(user) {\n            var selected = [];\n            if (user.visitor_type != null) {\n                selected = $filter('filter')($scope.VisitorOption, { id: user.visitor_type });\n            }\n            return selected.length ? selected[0].name : '-';\n        };\n        // showOrganizationTypeOption(user)\n        $scope.docList = [];\n        $scope.notes = [];\n\n        ToursFactory.getRecord($scope.urlID).success(function(response) {\n            $timeout(function() {\n                $scope.formscope = response.data;\n                $scope.formscope.meals = (response.data.meals == 1) ? true : false;\n                $scope.activeTask = response.data.tour_tasks;\n\n                $scope.docList = $scope.formscope.tour_documents;\n                $scope.notes = $scope.formscope.tour_notes;\n\n                if($scope.formscope.tourtype_id == null) {\n                    $scope.edittourtype = true;\n                }\n\n                $.each($scope.notes, function(i, el) {\n                    $scope.notes[i].name = $scope.notes[i].tour_notes_created.name;\n                });\n\n                $.each($scope.docList, function(i, el) {\n                    $scope.docList[i].name = $scope.docList[i].tour_docs_created.name;\n                });\n\n                $scope.documentDataFlag = true;\n                $scope.showTable = true;\n                \n                $.each(response.data.tour_visitors_edit, function(i, el) {\n                    if (response.data.tour_visitors_edit[i].is_tour_admin == 1) {\n                        response.data.contact_manager = response.data.tour_visitors_edit[i].visitor.email;\n                    }\n\n                    /*response.data.tour_visitors_edit[i].visitor.organization_txt = $scope.OrganizationTypeOption.filter(function(option) {\n                        return option.id === response.data.tour_visitors_edit[i].visitor.organization_id;\n                    })[0].name;\n\n                    response.data.tour_visitors_edit[i].visitor.visitor_txt = $scope.VisitorOption.filter(function(option) {\n                        return option.id === response.data.tour_visitors_edit[i].visitor.visitor_type;\n                    })[0].name;*/\n\n                    $scope.visitors.push(response.data.tour_visitors_edit[i].visitor);\n                });\n\n                $.each(response.data.tour_meals, function(i, el) {\n                    $scope.selectedMeals.push(response.data.tour_meals[i].meal_id);\n                    response.data.tour_meals[i].meal_txt = $scope.mealsTypeOption.filter(function(option) {\n                        return option.id === response.data.tour_meals[i].meal_id;\n                    })[0].name;\n\n                    response.data.tour_meals[i].mealservice_txt = $scope.mealServiceTypeOption.filter(function(option) {\n                        return option.id === response.data.tour_meals[i].meal_service_type_id;\n                    })[0].name;\n\n                    response.data.tour_meals[i].meallocation_txt = $scope.mealServiceLocationsOption.filter(function(option) {\n                        return option.id === response.data.tour_meals[i].meal_service_location_id;\n                    })[0].name;\n\n                    response.data.tour_meals[i].catering_manager_txt = $scope.usersOption.filter(function(option) {\n                        return option.id === response.data.tour_meals[i].catering_manager;\n                    })[0].name;\n                });\n                $scope.mealsType = response.data.tour_meals;\n            }, 100);\n        }).error(function(error) {\n            Notification.error(error.error);\n            $state.go('tours.list');\n        });\n\n        $scope.add_data = function(form) {\n            $scope.isSubmitted = true;\n            $validationProvider.validate(form).success(function() {\n                $scope.formscope.visitors = $scope.visitors;\n                $scope.formscope.mealsType = $scope.mealsType;\n                $scope.formscope.tasks = $scope.activeTaskList;\n\n                $scope.formscope.documents = $scope.docList;\n                $scope.formscope.notes = $scope.notes;\n\n                if ($scope.formscope.meals) {\n                    if ($scope.mealsType.length == 0) {\n                        Notification.error(\"Please add meals first.\");\n                        $scope.isSubmitted = false;\n                        return;\n                    }\n                }\n\n                $scope.formscope._method = 'PUT';\n                ToursFactory.updateRecord($scope.urlID, $scope.formscope).success(function(res) {\n                    Notification.success(res.success);\n                    $state.go('tours.list');\n                    $scope.isSubmitted = false;\n                }).error(function(err) {\n                    Notification.error(err.error);\n                    $scope.isSubmitted = false;\n                });\n            }).error(function(error) {\n                $scope.isSubmitted = false;\n            });\n        };\n\n        /** Add document link */\n        $scope.addDocument = function(item) {\n            $uibModal.open({\n                animation: true,\n                controller: 'AddDocumentModalCtrl',\n                templateUrl: 'app/pages/tours/documentModal.html',\n                resolve: {\n                    docLink: function() {\n                        return ''\n                    },\n                    docTitle: function() {\n                        return ''\n                    },\n                    docName: function() {\n                        return ''\n                    }\n                }\n            }).result.then(function(data) {\n                data.tour_id = $scope.urlID;\n\n                var duplicateDocTitle = false, duplicateDocLink = false;\n\n                $.each($scope.docList, function(i, el) {\n                    if ($scope.docList[i].title.toLowerCase() === data.title.toLowerCase()) {\n                        duplicateDocTitle = true;\n                    } else if ($scope.docList[i].link === data.link) {\n                        duplicateDocLink = true;\n                    }\n                });\n\n                if (duplicateDocTitle) {\n                    Notification.error(\"The document title you have entered already exist\");\n                } else if (duplicateDocLink) {\n                    Notification.error(\"The document link you have entered already exist\");\n                } else {\n                    ToursFactory.tourDocument(data).success(function(res) {\n                        Notification.success(res.success);\n                        res.data.name = data.name;\n                         $scope.docList.splice(0, 0, res.data);\n                        // $scope.docList.push(res.data);\n                    }).error(function(err) {\n                        Notification.error(err.error);\n                    });\n                    // $timeout(function() {\n                    //     $scope.$apply();\n                    //     $scope.showTable = true;\n                    // }, 100);\n                }\n            });\n        };\n\n        $scope.editDocument = function(docData, index) {\n            $uibModal.open({\n                animation: true,\n                controller: 'AddDocumentModalCtrl',\n                templateUrl: 'app/pages/tours/documentModal.html',\n                resolve: {\n                    docLink: function() {\n                        return docData.link\n                    },\n                    docTitle: function() {\n                        return docData.title\n                    },\n                    docName: function() {\n                        return docData.name\n                    }\n                }\n            }).result.then(function(data) {\n                data.tour_id = $scope.urlID;\n                data.id = docData.id;\n\n                data.created_by = $scope.loginID;\n                var duplicateDocTitle = false, duplicateDocLink = false;\n\n                $.each($scope.docList, function(i, el) {\n                    if ($scope.docList[i].title.toLowerCase() === data.title.toLowerCase() && index != i) {\n                        duplicateDocTitle = true;\n                    } else if ($scope.docList[i].link === data.link && index != i) {\n                        duplicateDocLink = true;\n                    }\n                });\n\n                if (duplicateDocTitle) {\n                    Notification.error(\"The document title you have entered already exist\");\n                } else if (duplicateDocLink) {\n                    Notification.error(\"The document link you have entered already exist\");\n                } else {\n                    ToursFactory.tourDocument(data).success(function(res) {\n                        Notification.success(res.success);\n                        $scope.docList[index] = res.data;\n                        $scope.docList[index].name = docData.name;\n                    }).error(function(err) {\n                        Notification.error(err.error);\n                    });\n\n                    // $timeout(function() {\n                    //     $scope.$apply();\n                    //     $scope.showTable = true;\n                    // }, 100);\n                }\n\n            });\n        };\n\n        $scope.removeDoc = function(docId) {\n            var deleteDoc = { id: $scope.docList[docId].id };\n            ToursFactory.deleteDocument(deleteDoc).success(function(res) {\n                Notification.success(res.success);\n                $scope.docList.splice(docId, 1);\n            }).error(function(err) {\n                Notification.error(err.error);\n            });\n\n            // $timeout(function() {\n            //     $scope.$apply();\n            // }, 100);\n        };\n        /** End Add document link */\n\n        /** Add document link */\n        $scope.addNote = function(item) {\n            $uibModal.open({\n                animation: true,\n                controller: 'AddNoteModalCtrl',\n                templateUrl: 'app/pages/tours/noteModal.html',\n                resolve: {\n                    notesInfo: function() {\n                        return ''\n                    },\n                    notesName: function() {\n                        return ''\n                    }\n                }\n            }).result.then(function(data) {\n                // $scope.notes.push(data);\n                data.tour_id = $scope.urlID;\n\n                ToursFactory.tourNote(data).success(function(res) {\n                    Notification.success(res.success);\n                    res.data.name = data.name;\n                    $scope.notes.splice(0, 0, res.data);\n                    // $scope.notes.push(res.data);\n                }).error(function(err) {\n                    Notification.error(err.error);\n                });\n            });\n        };\n\n        $scope.editNote = function(noteData, index) {\n            $uibModal.open({\n                animation: true,\n                controller: 'AddNoteModalCtrl',\n                templateUrl: 'app/pages/tours/noteModal.html',\n                resolve: {\n                    notesInfo: function() {\n                        return noteData.note\n                    },\n                    notesName: function() {\n                        return noteData.name\n                    }\n                }\n            }).result.then(function(data) {\n                $scope.showTable = false;\n                data.tour_id = $scope.urlID;\n                data.id = noteData.id;\n\n                ToursFactory.tourNote(data).success(function(res) {\n                    Notification.success(res.success);\n                    $scope.notes[index] = res.data;\n                    $scope.notes[index].name = noteData.name;\n                }).error(function(err) {\n                    Notification.error(err.error);\n                });\n\n                // $timeout(function() {\n                //     $scope.$apply();\n                //     $scope.showTable = true;\n                // }, 100);\n            });\n        };\n\n        $scope.removeNotes = function(noteId) {\n            var deleteDoc = { id: $scope.notes[noteId].id };\n            ToursFactory.deleteNote(deleteDoc).success(function(res) {\n                Notification.success(res.success);\n                $scope.notes.splice(noteId, 1);\n            }).error(function(err) {\n                Notification.error(err.error);\n            });\n\n            // $timeout(function() {\n            //     $scope.$apply();\n            // }, 100);\n        };\n\n        /** End Add document link */\n        $scope.documentOptions = DTOptionsBuilder.newOptions()\n            .withPaginationType('simple_numbers');\n\n        $scope.dtColumnDefs = [\n            DTColumnDefBuilder.newColumnDef(0),\n            DTColumnDefBuilder.newColumnDef(1),\n            DTColumnDefBuilder.newColumnDef(2),\n            DTColumnDefBuilder.newColumnDef(3)\n        ];\n\n        $scope.notesOptions = DTOptionsBuilder.newOptions()\n            .withPaginationType('simple_numbers');\n\n        $scope.notesColumnDefs = [\n            DTColumnDefBuilder.newColumnDef(0),\n            DTColumnDefBuilder.newColumnDef(1),\n            DTColumnDefBuilder.newColumnDef(2)\n        ];\n\n        $scope.visitorOptions = DTOptionsBuilder.newOptions()\n            .withPaginationType('simple_numbers');\n\n        $scope.visitorColumnDefs = [\n            DTColumnDefBuilder.newColumnDef(0),\n            DTColumnDefBuilder.newColumnDef(1),\n            DTColumnDefBuilder.newColumnDef(2),\n            DTColumnDefBuilder.newColumnDef(3),\n            DTColumnDefBuilder.newColumnDef(4),\n            DTColumnDefBuilder.newColumnDef(5),\n            DTColumnDefBuilder.newColumnDef(6),\n            DTColumnDefBuilder.newColumnDef(7)\n        ];\n    }\n})();\n/**\n * @author v.lugovsky\n * created on 16.12.2015\n */\n(function() {\n    'use strict';\n\n    angular.module('BlurAdmin.pages.tours')\n        .controller('FeedbackCtrl', FeedbackCtrl);\n\n    /** @ngInject */\n    function FeedbackCtrl($scope, fileReader, $filter, $uibModal, $rootScope, $compile, ToursFactory, $timeout, $stateParams, $state, $injector, Notification) {\n        $scope.pageName = 'View';\n        $scope.btnName = 'Send';\n        $scope.isSubmitted = false;\n        $scope.urlID = $stateParams.id;\n        $scope.formscope = {\n            id: $scope.urlID,\n            rating: 1\n        };\n        $scope.filledForm = 'You have already fill this form.';\n        $scope.displayForm = false;\n        $scope.filled = false;\n        ToursFactory.viewFeedback($scope.urlID).success(function(response) {\n            if (response.data) {\n                $scope.filled = true;\n            }\n            $scope.displayForm = true;\n        }).error(function(error) {\n            Notification.error(error.error);\n        });\n\n        $scope.setRating = function(e) {\n            $scope.formscope.rating = e;\n        };\n\n        var $validationProvider = $injector.get('$validation');\n        $scope.errorMessage = ToursFactory.validation;\n\n        $scope.add_data = function(form) {\n            $validationProvider.validate(form).success(function() {\n                $scope.isSubmitted = true;\n\n                ToursFactory.addFeedback($scope.formscope).success(function(response) {\n                    $scope.filledForm = response.success;\n                    Notification.success(response.success);\n                    $scope.filled = true;\n                    $scope.isSubmitted = false;\n                }).error(function(error) {\n                    Notification.error(error.error);\n                    $scope.isSubmitted = false;\n                });\n            });\n        }\n    }\n})();\n/**\n * @author v.lugovsky\n * created on 16.12.2015\n */\n(function() {\n    'use strict';\n\n    angular.module('BlurAdmin.pages.tours')\n        .controller('ListToursCtrl', ListToursCtrl);\n\n    /** @ngInject */\n    function ListToursCtrl($scope, $state, $stateParams, fileReader, $filter, $uibModal, $rootScope, $compile, ToursFactory, DTOptionsBuilder, DTColumnBuilder, $timeout, Notification) {\n        $scope.dtInstance = {};\n        $scope.isSubmitted = false;\n        $scope.tours = {};\n        $scope.formData = { filterData: '0' };\n        $scope.filterData = $scope.formData.filterData;\n        if($rootScope.auth_user) {\n            $scope.loginUserID = $rootScope.auth_user.id;\n        }\n        \n        $scope.urlID = $stateParams.id;        \n        if($scope.urlID) {\n            $scope.filterData = $scope.urlID;\n            $scope.formData.filterData = $scope.urlID;\n        }\n\n        $scope.filerdatatable = function() {\n            $scope.filterData = $scope.formData.filterData;\n            $scope.reloadData();\n        };\n\n        $scope.searchData = [\n            { label: 'All', value: '0' },\n            { label: 'Today', value: '1' },\n            { label: 'Next 7 days', value: '2' },\n            { label: 'This Month', value: '3' },\n            { label: 'Confirmed', value: '4' },\n            { label: 'Unconfirmed', value: '5' }\n        ];\n\n        $scope.reloadData = function() {\n            $scope.dtInstance.rerender();\n        };\n\n        $scope.createdRow = function(row, data, dataIndex) {\n            // Recompiling so we can bind Angular directive to the DT\n            $compile(angular.element(row).contents())($scope);\n        };\n\n        $scope.nameView = function(data, type, full) {\n            return \"<a ui-sref='tours.viewdetails({ id: \" + full.id + \" })'>\" + full.name + \"</a>\";\n        };\n\n        $scope.deleteRecord = function(id) {\n            ToursFactory.deleteRecord(id).success(function (res) {\n                Notification.success(res.success);\n                $state.reload();\n            }).error(function (err) {\n                Notification.error(err.error);\n            });\n        }\n\n        $scope.actionTours = function(data, type, full) {\n            $scope.tours[full.id] = full;\n            $scope.tours[full.id].isSubmitted = false;\n\n            var reLink = '';\n            var acknowledge = '';\n            var deleteBtn = '';\n            if (data.status == '0') {\n                reLink = \"<a class='cursor-pointer' ng-hide='tours[\" + full.id + \"].isSubmitted' ng-if=\\\"havePermission('tours','resend');\\\" style='cursor:pointer' ng-click='resendmailModal(\" + full.id + \")' title='Resend link'><i class='ion-refresh'></i></a> \";\n                acknowledge = \"<a class='cursor-pointer' ng-if=\\\"havePermission('tours','acknowledge');\\\" style='cursor:pointer' ng-click='acknowledge(\" + full.id + \")' title='Acknowledge Tour'><i class='ion-android-checkbox-outline'></i></a> \";\n            }\n            // console.log('-----',data.user_id);\n            if ($scope.loginUserID == 1) {\n                deleteBtn = \"<a class='cursor-pointer' ng-if=\\\"havePermission('tours','delete');\\\" style='cursor:pointer' ng-confirm-click='Are you sure to delete this tour?' confirmed-click='deleteRecord(\" + full.id + \")' title='Delete Tour'><i class='fa fa-trash'></i></a>\";\n            }\n\n            return acknowledge + reLink + \"<a title='View Tour' ui-sref='tours.viewdetails({ id: \" + full.id + \" })'><i class='fa fa-eye'></i></a> <a ng-hide='\"+full.status+\" == 4' ng-if=\\\"havePermission('tours','update');\\\" ui-sref='tours.edit({ id: \" + full.id + \" })' title='Edit Tour'><i class='fa fa-edit'></i></a> \"+deleteBtn;\n        };\n        \n        $scope.resendmailModal = function(tourId){\n            $uibModal.open({\n                animation: true,\n                backdrop: 'static',\n                controller: 'TourMailModalCtrl',\n                templateUrl: 'app/pages/tours/mailModal.html',\n                resolve: {\n                    tourStatus: function() {\n                        return 0;\n                    }\n                }\n            }).result.then(function(data) {\n                if(data.sendMail == 1){\n                    $scope.tours[tourId].isSubmitted = true;\n                    var data = {\n                        id: tourId,\n                        sendMail: data.sendMail,\n                        mailSubject: data.mailSubject,\n                        mailContent: data.mailContent\n                    };\n                    ToursFactory.resend(data).success(function(res) {\n                        Notification.success(res.success);\n                        $scope.tours[tourId].isSubmitted = false;\n                    }).error(function(err) {\n                        $scope.tours[tourId].isSubmitted = false;\n                        Notification.error(err.error);\n                    });\n                }\n            });\n        }\n\n        $scope.acknowledge = function(id) {\n            $uibModal.open({\n                animation: true,\n                controller: 'AddCommentModalCtrl',\n                templateUrl: 'app/pages/tours/commentModal.html'\n            }).result.then(function(commentforacknowledge) {\n                $scope.sendackmailModal(id, commentforacknowledge);                \n            });\n        };\n        \n        \n        $scope.sendackmailModal = function(tourId, commentforacknowledge){\n            $uibModal.open({\n                animation: true,\n                backdrop: 'static',\n                controller: 'TourMailModalCtrl',\n                templateUrl: 'app/pages/tours/mailModal.html',\n                resolve: {\n                    tourStatus: function() {\n                        return 1;\n                    }\n                }\n            }).result.then(function(data) {\n                if(data.sendMail == 1){\n                    var data = {\n                        id: tourId,\n                        action: 1,\n                        comment: commentforacknowledge,\n                        sendMail: data.sendMail,\n                        mailSubject: data.mailSubject,\n                        mailContent: data.mailContent\n                    };\n\n                    ToursFactory.actionRecord(data).success(function(res) {\n                        Notification.success(res.success);\n                        $scope.tours[tourId].isSubmitted = false;\n                        $scope.reloadData();\n                    }).error(function(err) {\n                        $scope.tours[tourId].isSubmitted = false;\n                        Notification.error(err.error);\n                    });\n                }\n            });\n        }\n\n        $scope.setPerson = function(data, type, full) {\n            return Number(data.adults) + Number(data.children) + Number(data.senior);\n        };\n\n        $scope.mealOptions = function(data, type, full) {\n            if(data.meals == \"1\") {\n                return 'Yes';\n            }\n            else {\n                return 'No';\n            }\n        };\n\n        $scope.momentosOption = function(data, type, full) {\n            if(full.tour_momentos.length > 0) {\n                return 'Yes';\n            }\n            else {\n                return 'No';\n            }\n        };\n\n        $scope.statusAction = function(data, type, full) {\n            if (data.status == '0') {\n                return '<small class=\"label label-warning\">Pending</small>';\n            }\n            if (data.status == '1') {\n                return '<small class=\"label label-info\">Acknowledge</small>';\n            }\n            if (data.status == '2') {\n                return '<small class=\"label label-success\">Approved</small>';\n            }\n            if (data.status == '3') {\n                return '<small class=\"label label-danger\">Rejected</small>';\n            } else {\n                return '<small class=\"label label-primary\">Completed</small>';\n            }\n        };\n\n        $scope.indexNumber = function(data, type, full, row) {\n            var i = Number(row.row) + Number(1);\n            var ind = row.settings._iDisplayStart + i;\n            return \"<span>\" + ind + \"</span>\";\n        };\n\n        $scope.dtOptions = DTOptionsBuilder.newOptions()\n            .withDataProp('data')\n            .withOption('ajax', function(data, callback, settings) {\n                data.filerData = $scope.filterData;\n                // map your server's response to the DataTables format and pass it to\n                ToursFactory.showDataTable(data).success(function(res) {\n                    if (res.error)\n                        $scope.reloadData();\n                    else\n                        callback(res);\n                }).error(function(err) {\n                    if (err)\n                        $scope.reloadData();\n                });\n            })\n            .withOption('processing', true)\n            .withOption('serverSide', true)\n            .withPaginationType('simple_numbers')\n            .withOption('order', [0, 'desc'])\n            .withDOM('lftip')\n            .withOption('searchDelay', 500)\n            .withOption('createdRow', $scope.createdRow);\n\n        $scope.dtColumns = [\n            DTColumnBuilder.newColumn('id').withTitle('No').withOption('searchable', false).renderWith($scope.indexNumber).withClass('table-index'),\n            DTColumnBuilder.newColumn('name').withTitle('Tour Name').withOption('searchable', true),\n            DTColumnBuilder.newColumn('organization').withTitle('Organization Name').withOption('searchable', true),\n            DTColumnBuilder.newColumn('start_date').withTitle('Date Time Arriving').withOption('searchable', true),\n            DTColumnBuilder.newColumn(null).withTitle('# of Visitors').withOption('searchable', false).notSortable().renderWith($scope.setPerson),\n            DTColumnBuilder.newColumn('category').withTitle('Category').withOption('searchable', true),\n            DTColumnBuilder.newColumn('tapes.name').withTitle('Tour Type').withOption('searchable', true),\n            DTColumnBuilder.newColumn('tour_manager.name').withTitle('Tour Manager').withOption('searchable', true),\n            DTColumnBuilder.newColumn(null).withTitle('Meal').withOption('searchable', false).notSortable().renderWith($scope.mealOptions),\n            DTColumnBuilder.newColumn(null).withTitle('Momento').withOption('searchable', true).renderWith($scope.momentosOption),\n            DTColumnBuilder.newColumn(null).withTitle('Status').withOption('searchable', false).notSortable().renderWith($scope.statusAction),\n            DTColumnBuilder.newColumn(null).withTitle('Action').withOption('searchable', false).notSortable().renderWith($scope.actionTours)\n        ];\n    }\n})();\n(function() {\n    'use strict';\n\n    angular.module('BlurAdmin.pages.tours')\n        .controller('TourMailModalCtrl', TourMailModalCtrl);\n    \n    /** @ngInject */\n    function TourMailModalCtrl($scope, $rootScope, $compile, $injector, $uibModalInstance, $timeout, Notification, tourStatus) {\n        if(tourStatus == 4){\n            $scope.formscope = {\n                mailSubject : 'Feedback for Tour',\n                mailContent : \"<p>Jay Swaminarayan! </p><p> Hope you all enjoyed a lot in tour. </p><p> Your feedback are appreciated, please click on below link and provide us your feedback. </p>\"\n            };\n        }else if(tourStatus == 3 || tourStatus == 2 || tourStatus == 1){\n            $scope.formscope = {\n                mailSubject : 'Tour Status Information',\n                mailContent : \"<p>Jay Swaminarayan! </p><p>Tour status is as follow:</p><p>Tour Name: {tourname} </p><p>Tour Status: {tourstatus} </p>\"\n            };\n        } else { \n            $scope.formscope = {\n                mailSubject : 'Welcome to Tour Management',\n                mailContent : \"<p>Jay Swaminarayan! </p><p> As per your request, we have registered your Tour with our system on date: {startdate} </p><p> Please acknowledge your confirmation by click on this link. </p>\"\n            };\n        }\n        \n        $scope.displayEditor = false;\n        $timeout(function() {\n            $scope.displayEditor = true;\n        }, 100);\n        \n        $scope.sendMail = function() {\n            $scope.formscope.sendMail = 1;\n            $uibModalInstance.close($scope.formscope);\n        };\n        \n        $scope.donotsendMail = function() {\n            $scope.formscope.sendMail = 0;\n            $uibModalInstance.close($scope.formscope);\n        };\n    }\n})();\n/**\n * @author v.lugovsky\n * created on 16.12.2015\n */\n(function() {\n    'use strict';\n    //   4.20\n\n    angular.module('BlurAdmin.pages.tours')\n        .controller('ViewToursCtrl', ViewToursCtrl);\n\n    /** @ngInject */\n    function ViewToursCtrl($scope, fileReader, $filter, $uibModal, $rootScope, $compile, VisitorsFactory, ToursFactory, UsersFactory, MealservicetypesFactory, MealservicelocationsFactory, LocationsFactory, MealsFactory, OrganizationsFactory, DefaulttasksFactory, TourtypesFactory, TransportsFactory, $timeout, $stateParams, $state, $injector, Notification, editableOptions, editableThemes, DTOptionsBuilder, DTColumnBuilder, DTColumnDefBuilder) {\n        $scope.pageName = '';\n        $scope.btnName = 'Update';\n        $scope.isSubmitted = false;\n        $scope.urlID = $stateParams.id;\n        $scope.showTable = true;\n        $scope.smartTablePageSize = 5;\n        $scope.smartTablePageSize1 = 10;\n        $scope.loginID = $rootScope.auth_user.id;\n        $scope.userID = $rootScope.auth_user.id;\n\n        $scope.activeTaskList = [];\n        $scope.addTaskBtn = false;\n        $scope.minDateMoment = moment().subtract('day');\n        $scope.visitors = [];\n        $scope.mealsType = [];\n        $scope.selectedMeals = [];\n        $scope.userRoleID = Object.keys($rootScope.role)[0];\n\n        $scope.tourCompleted = true;\n        $scope.editTourBtn = false;\n\n        $scope.genderOption = [\n            { label: '-', value: '' },\n            { label: 'Male', value: 'm' },\n            { label: 'Female', value: 'f' }\n        ];\n\n        $scope.statusOption = [\n            { label: 'Pending', value: '0' },\n            { label: 'Acknowledge', value: '1' },\n            { label: 'Rejected', value: '2' }\n        ];\n\n        /* Only for admin and tour manager */\n        if ($scope.userRoleID == 1) {\n            var statusPending = false,\n                statusAcknowledge = false,\n                statusApproved = false,\n                statusRejected = false,\n                statusCompleted = false;\n        } else {\n            var statusPending = true,\n                statusAcknowledge = true,\n                statusApproved = false,\n                statusRejected = false,\n                statusCompleted = false;\n        }\n\n        $scope.tourStatusOption = [\n            { value: 0, label: 'Pending', isDisabled: statusPending },\n            { value: 1, label: 'Acknowledge', isDisabled: statusAcknowledge },\n            { value: 2, label: 'Approved', isDisabled: statusApproved },\n            { value: 3, label: 'Rejected', isDisabled: statusRejected },\n            { value: 4, label: 'Completed', isDisabled: statusCompleted }\n        ];\n\n        $scope.changeStatus = function(updatedStatus) {\n            $uibModal.open({\n                animation: true,\n                controller: 'AddCommentModalCtrl',\n                templateUrl: 'app/pages/tours/commentModal.html'\n            }).result.then(function(commentforacknowledge) {\n                if(updatedStatus == 1 || updatedStatus == 2 || updatedStatus == 3 || updatedStatus == 4){\n                    $scope.mailModal(commentforacknowledge, updatedStatus);                    \n                }else{\n                    var data = {\n                        id: $scope.urlID,\n                        action: updatedStatus,\n                        comment: commentforacknowledge\n                    };\n\n                    ToursFactory.actionRecord(data).success(function(res) {\n                        Notification.success(res.success);\n                        $scope.reloadData();\n                    }).error(function(err) {\n                        Notification.error(err.error);\n                    });\n                }\n            });\n        };\n        \n        $scope.mailModal = function(commentforacknowledge, updatedStatus){\n            $uibModal.open({\n                animation: true,\n                backdrop: 'static',\n                controller: 'TourMailModalCtrl',\n                templateUrl: 'app/pages/tours/mailModal.html',\n                resolve: {\n                    tourStatus: function() {\n                        return updatedStatus;\n                    }\n                }\n            }).result.then(function(data) {\n                var data = {\n                        id: $scope.urlID,\n                        action: updatedStatus,\n                        comment: commentforacknowledge,\n                        sendMail: data.sendMail,\n                        mailSubject: data.mailSubject,\n                        mailContent: data.mailContent\n                    };\n\n                    ToursFactory.actionRecord(data).success(function(res) {\n                        Notification.success(res.success);\n                        $scope.reloadData();\n                    }).error(function(err) {\n                        Notification.error(err.error);\n                    });\n            });\n        }\n\n        var $validationProvider = $injector.get('$validation');\n        $scope.errorMessage = DefaulttasksFactory.validation;\n\n        /** Start options */\n        $scope.TransportOption = [{ name: 'Please select transport type', id: null }];\n        TransportsFactory.getAllRecords().success(function(response) {\n            $scope.TransportOption = $scope.TransportOption.concat(response.data);\n        }).error(function(error) {\n\n        });\n\n        $scope.TourTypeOption = [{ name: 'Please select tour type', id: null }];\n        TourtypesFactory.getAllRecords().success(function(response) {\n            $scope.TourTypeOption = $scope.TourTypeOption.concat(response.data);\n        }).error(function(error) {\n\n        });\n\n        $scope.OrganizationTypeOption = [{ name: 'Please select organization type', id: null }];\n        OrganizationsFactory.getAllRecords().success(function(response) {\n            $scope.OrganizationTypeOption = $scope.OrganizationTypeOption.concat(response.data);\n        }).error(function(error) {\n\n        });\n\n        $scope.mealsTypeOption = [{ name: 'Please select meal type', id: null }];\n        MealsFactory.getAllRecords().success(function(response) {\n            $scope.mealsTypeOption = $scope.mealsTypeOption.concat(response.data);\n        }).error(function(error) {\n\n        });\n\n        $scope.locationsTypeOption = [{ name: 'Please select location', id: null }];\n        LocationsFactory.getAllRecords().success(function(response) {\n            $scope.locationsTypeOption = $scope.locationsTypeOption.concat(response.data);\n        }).error(function(error) {\n\n        });\n\n        $scope.mealServiceTypeOption = [{ name: 'Please select meal service type', id: null }];\n        MealservicetypesFactory.getAllRecords().success(function(response) {\n            $scope.mealServiceTypeOption = $scope.mealServiceTypeOption.concat(response.data);\n        }).error(function(error) {\n\n        });\n\n        $scope.mealServiceLocationsOption = [{ name: 'Please select meal service location', id: null }];\n        MealservicelocationsFactory.getAllRecords().success(function(response) {\n            $scope.mealServiceLocationsOption = $scope.mealServiceLocationsOption.concat(response.data);\n        }).error(function(error) {\n\n        });\n\n        $scope.VisitorOption = [{ name: 'Please select visitor type', id: null }];\n        VisitorsFactory.getAllRecords().success(function(response) {\n            $scope.VisitorOption = $scope.VisitorOption.concat(response.data);\n        }).error(function(error) {\n\n        });\n\n        $scope.usersOption = [{ name: 'Please select catering manager', id: null }];\n        UsersFactory.getRecords().success(function(response) {\n            $scope.usersOption = $scope.usersOption.concat(response.data);\n            $.each($scope.usersOption, function(i, el) {\n                if ($scope.usersOption[i].id != undefined) {\n                    if ($scope.usersOption[i].availability == 1) {\n                        $scope.usersOption[i].isDisabled = true;\n                    }\n                }\n            });\n        }).error(function(error) {\n\n        });\n\n        $scope.volunteersOption = [{ name: 'Please select volunteers', id: null }];\n        UsersFactory.getVolunteers().success(function(response) {\n            $scope.volunteersOption = $scope.volunteersOption.concat(response.data);\n            $.each($scope.volunteersOption, function(i, el) {\n                if ($scope.volunteersOption[i].id != undefined) {\n                    if ($scope.volunteersOption[i].availability == 1) {\n                        $scope.volunteersOption[i].isDisabled = true;\n                    }\n                }\n            });\n        }).error(function(error) {\n\n        });\n\n        $scope.showOrganizationTypeOption = function(user) {\n            var selected = [];\n            if (user.organization_id != null) {\n                selected = $filter('filter')($scope.OrganizationTypeOption, { id: user.organization_id });\n            }\n            return selected.length ? selected[0].name : '-';\n        };\n\n        $scope.showVisitorOption = function(user) {\n            var selected = [];\n            if (user.visitor_type != null) {\n                selected = $filter('filter')($scope.VisitorOption, { id: user.visitor_type });\n            }\n            return selected.length ? selected[0].name : '-';\n        };\n\n        $scope.showUsers = function(user) {\n            var selected = [];\n            if (user.user_id) {\n                selected = $filter('filter')($scope.volunteersOption, { id: user.user_id });\n            }\n            return selected.length ? selected[0].name : '-';\n        };\n\n        $scope.showStatus = function(user) {\n            var selected = [];\n            if (user.user_id) {\n                if (user.user_id) {\n                    selected = $filter('filter')($scope.statusOption, { value: user.acknowledge });\n                }\n                return selected.length ? selected[0].label : '-';\n            } else {\n                return '-';\n            }\n        };\n\n\n        $scope.showMealsTypeOption = function(user) {\n            var selected = [];\n            if (user.meal_id != null) {\n                selected = $filter('filter')($scope.mealsTypeOption, { id: user.meal_id });\n            }\n            return selected.length ? selected[0].name : '-';\n        };\n\n        $scope.showMealServiceTypeOption = function(user) {\n            var selected = [];\n            if (user.meal_service_type_id != null) {\n                selected = $filter('filter')($scope.mealServiceTypeOption, { id: user.meal_service_type_id });\n            }\n            return selected.length ? selected[0].name : '-';\n        };\n\n        $scope.showMealServiceLocationsOption = function(user) {\n            var selected = [];\n            if (user.meal_service_location_id != null) {\n                selected = $filter('filter')($scope.mealServiceLocationsOption, { id: user.meal_service_location_id });\n            }\n            return selected.length ? selected[0].name : '-';\n        };\n\n        $scope.showCateringManager = function(user) {\n            var selected = [];\n            if (user.catering_manager != null) {\n                selected = $filter('filter')($scope.usersOption, { id: user.catering_manager });\n            }\n            return selected.length ? selected[0].name : '-';\n        };\n\n        /** End options */\n        $scope.visitortypes = [];\n        ToursFactory.getRecord($scope.urlID).success(function(response) {\n            $timeout(function() {\n                $scope.formscope = response.data;\n                $scope.pageName = $scope.formscope.name;\n\n                if($scope.formscope.tourtype_id == null) {\n                    $scope.tourCompleted = false;\n                }\n                if (response.data.status == 4) {\n                    $scope.tourCompleted = false;\n                } else {\n                    $scope.editTourBtn = true;\n                }\n\n                $scope.formscope.meals = (response.data.meals == 1) ? true : false;\n                $scope.activeTask = response.data.tour_tasks;\n\n                $scope.formscope.total_guest = Number($scope.formscope.adults) + Number($scope.formscope.children) + Number($scope.formscope.senior);\n\n                $.each(response.data.tour_meals, function(i, el) {\n                    /*response.data.tour_meals[i].meal_txt = $scope.mealsTypeOption.filter(function(option) {\n                        return option.id === response.data.tour_meals[i].meal_id;\n                    })[0].name;*/\n\n                    /*response.data.tour_meals[i].mealservice_txt = $scope.mealServiceTypeOption.filter(function(option) {\n                        return option.id === response.data.tour_meals[i].meal_service_type_id;\n                    })[0].name;\n\n                    response.data.tour_meals[i].meallocation_txt = $scope.mealServiceLocationsOption.filter(function(option) {\n                        return option.id === response.data.tour_meals[i].meal_service_location_id;\n                    })[0].name;*/\n\n                    /*response.data.tour_meals[i].catering_manager_txt = $scope.usersOption.filter(function(option) {\n                        return option.id === response.data.tour_meals[i].catering_manager;\n                    })[0].name;*/\n                });\n                $scope.mealsType = response.data.tour_meals;\n\n                $.each(response.data.tour_visitors_edit, function(i, el) {\n                    if (response.data.tour_visitors_edit[i].is_tour_admin == 1) {\n                        response.data.contact_manager = response.data.tour_visitors_edit[i].visitor.email;\n                        $scope.contactManagerDetails = response.data.tour_visitors_edit[i];\n                    }\n\n                    /*response.data.tour_visitors_edit[i].visitor.gender_txt = $scope.genderOption.filter(function(option) {\n                        return option.value === response.data.tour_visitors_edit[i].visitor.gender;\n                    })[0].label;*/\n\n                    /*response.data.tour_visitors_edit[i].visitor.organization_txt = $scope.OrganizationTypeOption.filter(function(option) {\n                        return option.id === response.data.tour_visitors_edit[i].visitor.organization_id;\n                    })[0].name;*/\n\n                    response.data.tour_visitors_edit[i].visitor.visitor_txt = $scope.VisitorOption.filter(function(option) {\n                        return option.id === response.data.tour_visitors_edit[i].visitor.visitor_type;\n                    })[0].name;\n\n                    var value = response.data.tour_visitors_edit[i].visitor.visitor_txt;\n                    if ($.inArray(value, $scope.visitortypes) == -1) $scope.visitortypes.push(value);\n                    $scope.visitors.push(response.data.tour_visitors_edit[i].visitor);\n                });\n\n                // console.log($scope.visitors);\n                $scope.formscope.visitors = $scope.visitors;\n                $scope.formscope.mealsType = $scope.mealsType;\n                $scope.formscope.tasks = response.data.tour_tasks;\n                $scope.activity = response.data.tour_history;\n\n                $scope.docList = $scope.formscope.tour_documents;\n                $scope.notes = $scope.formscope.tour_notes;\n\n                $.each($scope.notes, function(i, el) {\n                    $scope.notes[i].name = $scope.notes[i].tour_notes_created.name;\n                });\n\n                $.each($scope.docList, function(i, el) {\n                    $scope.docList[i].name = $scope.docList[i].tour_docs_created.name;\n                });\n\n                $scope.visitorcategory = $scope.visitortypes.join('/');\n            }, 500);\n        }).error(function(error) {\n            Notification.error(error.error);\n            $state.go('tours.list');\n        });\n\n        /*add Task*/\n        $scope.addTask = function() {\n            $scope.inserted = {\n                id: null,\n                task: '',\n                user_id: null,\n                acknowledge: 0\n            };\n            $scope.formscope.tasks.push($scope.inserted);\n        };\n\n        $scope.add_data = function(data, id, index) {\n            if (id) {\n                data.id = id;\n                data.tour_name = $scope.formscope.name;\n                data.user_name = $scope.showUsers(data);\n\n                ToursFactory.updateTask(data).success(function(res) {\n                    $scope.formscope.tasks[index].acknowledge = 0;\n                    Notification.success(res.success);\n                }).error(function(err) {\n                    Notification.error(err.error);\n                });\n            } else {\n                data.tourtype_id = $scope.formscope.tour_tapes.id;\n                data.tour_id = $scope.formscope.id;\n                data.tour_name = $scope.formscope.name;\n                data.user_name = $scope.showUsers(data);\n\n                ToursFactory.addTask(data).success(function(res) {\n                    $scope.formscope.tasks[index].id = res.data.id;\n                    Notification.success(res.success);\n                }).error(function(err) {\n                    Notification.error(err.error);\n                });\n            }\n        };\n\n        $scope.checkTask = function($data) {\n            if ($data == '' || $data == null || $data == 'null') {\n                return $scope.errorMessage.task.required;\n            } else if ($data.length <= 2) {\n                return $scope.errorMessage.task.minlength;\n            } else if ($data.length >= 200) {\n                return $scope.errorMessage.task.maxlength;\n            }\n        };\n\n        $scope.removeUser = function(index, taskId) {\n            if (taskId) {\n                ToursFactory.deleteTask(taskId).success(function(res) {\n                    Notification.success(res.success);\n                    $scope.formscope.tasks.splice(index, 1);\n                }).error(function(err) {\n                    Notification.error(err.error);\n                });\n            } else {\n                $scope.showTable = false;\n                $scope.formscope.tasks.splice(index, 1);\n                $timeout(function() {\n                    $scope.$apply();\n                    $scope.showTable = true;\n                }, 100);\n            }\n        };\n\n        $scope.cancelRow = function(index) {\n            $scope.showTable = false;\n            $scope.formscope.tasks.splice(index, 1);\n            $scope.showTable = true;\n        };\n\n        $scope.actionTask = function(id, action, index) {\n            var data = {\n                id: id,\n                task_name: $scope.formscope.tasks[index].task,\n                status: action\n            };\n\n            ToursFactory.actionTask(data).success(function(res) {\n                $scope.formscope.tasks[index].acknowledge = action;\n                Notification.success(res.success);\n            }).error(function(err) {\n                Notification.error(err.error);\n            });\n        }\n\n        /** Add document link */\n        $scope.addDocument = function(item) {\n            $uibModal.open({\n                animation: true,\n                controller: 'AddDocumentModalCtrl',\n                templateUrl: 'app/pages/tours/documentModal.html',\n                resolve: {\n                    docLink: function() {\n                        return ''\n                    },\n                    docTitle: function() {\n                        return ''\n                    },\n                    docName: function() {\n                        return ''\n                    }\n                }\n            }).result.then(function(data) {\n                data.tour_id = $scope.urlID;\n\n                var duplicateDocTitle = false,\n                    duplicateDocLink = false;\n\n                $.each($scope.docList, function(i, el) {\n                    if ($scope.docList[i].title.toLowerCase() === data.title.toLowerCase()) {\n                        duplicateDocTitle = true;\n                    } else if ($scope.docList[i].link === data.link) {\n                        duplicateDocLink = true;\n                    }\n                });\n\n                if (duplicateDocTitle) {\n                    Notification.error(\"The document title you have entered already exist\");\n                } else if (duplicateDocLink) {\n                    Notification.error(\"The document link you have entered already exist\");\n                } else {\n                    ToursFactory.tourDocument(data).success(function(res) {\n                        Notification.success(res.success);\n                        res.data.name = data.name;\n                        $scope.docList.splice(0, 0, res.data);\n                        // $scope.docList.push(res.data);\n                    }).error(function(err) {\n                        Notification.error(err.error);\n                    });\n                    // $timeout(function() {\n                    //     $scope.$apply();\n                    //     $scope.showTable = true;\n                    // }, 100);\n                }\n\n\n            });\n        };\n\n        $scope.editDocument = function(docData, index) {\n            $uibModal.open({\n                animation: true,\n                controller: 'AddDocumentModalCtrl',\n                templateUrl: 'app/pages/tours/documentModal.html',\n                resolve: {\n                    docLink: function() {\n                        return docData.link\n                    },\n                    docTitle: function() {\n                        return docData.title\n                    },\n                    docName: function() {\n                        return docData.name\n                    }\n                }\n            }).result.then(function(data) {\n                data.tour_id = $scope.urlID;\n                data.id = docData.id;\n\n                data.created_by = $scope.loginID;\n                var duplicateDocTitle = false,\n                    duplicateDocLink = false;\n\n                $.each($scope.docList, function(i, el) {\n                    if ($scope.docList[i].title.toLowerCase() === data.title.toLowerCase() && index != i) {\n                        duplicateDocTitle = true;\n                    } else if ($scope.docList[i].link === data.link && index != i) {\n                        duplicateDocLink = true;\n                    }\n                });\n\n                if (duplicateDocTitle) {\n                    Notification.error(\"The document title you have entered already exist\");\n                } else if (duplicateDocLink) {\n                    Notification.error(\"The document link you have entered already exist\");\n                } else {\n                    ToursFactory.tourDocument(data).success(function(res) {\n                        Notification.success(res.success);\n                        $scope.docList[index] = res.data;\n                        $scope.docList[index].name = docData.name;\n                    }).error(function(err) {\n                        Notification.error(err.error);\n                    });\n\n                    // $timeout(function() {\n                    //     $scope.$apply();\n                    //     $scope.showTable = true;\n                    // }, 100);\n                }\n            });\n        };\n\n        $scope.removeDoc = function(docId) {\n            var deleteDoc = { id: $scope.docList[docId].id };\n            ToursFactory.deleteDocument(deleteDoc).success(function(res) {\n                Notification.success(res.success);\n                $scope.docList.splice(docId, 1);\n            }).error(function(err) {\n                Notification.error(err.error);\n            });\n\n            // $timeout(function() {\n            //     $scope.$apply();\n            // }, 100);\n        };\n        /** End Add document link */\n\n        /** Add document link */\n        $scope.addNote = function(item) {\n            $uibModal.open({\n                animation: true,\n                controller: 'AddNoteModalCtrl',\n                templateUrl: 'app/pages/tours/noteModal.html',\n                resolve: {\n                    notesInfo: function() {\n                        return ''\n                    },\n                    notesName: function() {\n                        return ''\n                    }\n                }\n            }).result.then(function(data) {\n                // $scope.notes.push(data);\n                data.tour_id = $scope.urlID;\n\n                ToursFactory.tourNote(data).success(function(res) {\n                    Notification.success(res.success);\n                    res.data.name = data.name;\n                    // $scope.notes.push(res.data);\n                    $scope.notes.splice(0, 0, res.data);\n                }).error(function(err) {\n                    Notification.error(err.error);\n                });\n            });\n        };\n\n        $scope.editNote = function(noteData, index) {\n            $uibModal.open({\n                animation: true,\n                controller: 'AddNoteModalCtrl',\n                templateUrl: 'app/pages/tours/noteModal.html',\n                resolve: {\n                    notesInfo: function() {\n                        return noteData.note\n                    },\n                    notesName: function() {\n                        return noteData.name\n                    }\n                }\n            }).result.then(function(data) {\n                $scope.showTable = false;\n                data.tour_id = $scope.urlID;\n                data.id = noteData.id;\n\n                ToursFactory.tourNote(data).success(function(res) {\n                    Notification.success(res.success);\n                    $scope.notes[index] = res.data;\n                    $scope.notes[index].name = noteData.name;\n                }).error(function(err) {\n                    Notification.error(err.error);\n                });\n\n                // $timeout(function() {\n                //     $scope.$apply();\n                //     $scope.showTable = true;\n                // }, 100);\n            });\n        };\n\n        $scope.removeNotes = function(noteId) {\n            var deleteDoc = { id: $scope.notes[noteId].id };\n            ToursFactory.deleteNote(deleteDoc).success(function(res) {\n                Notification.success(res.success);\n                $scope.notes.splice(noteId, 1);\n            }).error(function(err) {\n                Notification.error(err.error);\n            });\n\n            // $timeout(function() {\n            //     $scope.$apply();\n            // }, 100);\n        };\n        /** End Add document link */\n\n        $scope.documentOptions = DTOptionsBuilder.newOptions()\n            .withPaginationType('simple_numbers');\n        /*.withOption('order', [0, 'desc']);*/\n\n        $scope.dtColumnDefs = [\n            DTColumnDefBuilder.newColumnDef(0),\n            DTColumnDefBuilder.newColumnDef(1),\n            DTColumnDefBuilder.newColumnDef(2),\n            DTColumnDefBuilder.newColumnDef(3),\n            DTColumnDefBuilder.newColumnDef(4)\n        ];\n\n        $scope.notesOptions = DTOptionsBuilder.newOptions()\n            .withPaginationType('simple_numbers');\n\n        $scope.notesColumnDefs = [\n            DTColumnDefBuilder.newColumnDef(0),\n            DTColumnDefBuilder.newColumnDef(1),\n            DTColumnDefBuilder.newColumnDef(2),\n            DTColumnDefBuilder.newColumnDef(3)\n        ];\n\n        $scope.visitorOptions = DTOptionsBuilder.newOptions()\n            .withPaginationType('simple_numbers');\n\n        $scope.visitorColumnDefs = [\n            DTColumnDefBuilder.newColumnDef(0),\n            DTColumnDefBuilder.newColumnDef(1),\n            DTColumnDefBuilder.newColumnDef(2),\n            DTColumnDefBuilder.newColumnDef(3),\n            DTColumnDefBuilder.newColumnDef(4),\n            DTColumnDefBuilder.newColumnDef(5)\n        ];\n\n        $scope.historyOptions = DTOptionsBuilder.newOptions()\n            .withPaginationType('simple_numbers');\n\n        $scope.historyColumnDefs = [\n            DTColumnDefBuilder.newColumnDef(0),\n            DTColumnDefBuilder.newColumnDef(1)\n        ];\n    }\n})();\n/**\n * @author v.lugovsky\n * created on 16.12.2015\n */\n(function () {\n  'use strict';\n\n  angular.module('BlurAdmin.pages.useravailabilities')\n    .controller('AvailabilitiesCtrl', AvailabilitiesCtrl);\n\n  /** @ngInject */\n  function AvailabilitiesCtrl($scope, fileReader, $filter, DTOptionsBuilder, DTColumnBuilder, $uibModal, $rootScope, $compile, UsersFactory, $timeout, $stateParams, $state, $injector, Notification) {\n        $scope.dtInstance = {};\n        \n        $scope.reloadData = function () {\n            $scope.dtInstance.rerender();\n        };\n\n        $scope.createdRow = function(row, data, dataIndex) {\n            // Recompiling so we can bind Angular directive to the DT\n            $compile(angular.element(row).contents())($scope);\n        };\n\n        $scope.statueRender = function(data, type, full) {\n            if (data == 1) {\n                return \"Unavailable\";\n            } else {\n                return \"Available\";\n            }\n        };\n\n        $scope.indexNumber = function(data, type, full, row) {\n            var i = Number(row.row) + Number(1);\n            var ind = row.settings._iDisplayStart + i;\n            return \"<span>\" + ind + \"</span>\";\n        };\n\n        $scope.dtOptions = DTOptionsBuilder.newOptions()\n            .withDataProp('data')\n            .withOption('ajax', function (data, callback, settings) {\n                  // map your server's response to the DataTables format and pass it to\n                UsersFactory.showAvailabilitiesDataTable(data).success(function (res) { \n                    if (res.error)\n                      $scope.reloadData();\n                    else // DataTables' callback\n                    callback(res);\n                }).error(function (err) {\n                    if (err.error)\n                    $scope.reloadData();\n                });\n            })\n            .withOption('processing', true)\n            .withOption('serverSide', true)\n            .withPaginationType('simple_numbers')\n            .withOption('order', [0, 'desc'])\n            .withDOM('lftip')\n            .withOption('searchDelay', 500)\n            .withOption('createdRow', $scope.createdRow);\n\n        $scope.dtColumns = [\n            DTColumnBuilder.newColumn('id').withTitle('No').withOption('searchable', false).renderWith($scope.indexNumber).withClass('table-index'),\n            DTColumnBuilder.newColumn('user.name').withTitle('User Name').withOption('searchable', true),\n            DTColumnBuilder.newColumn('status').withTitle('Status').withOption('searchable', true).renderWith($scope.statueRender),\n            DTColumnBuilder.newColumn('comment').withTitle('Comment').withOption('searchable', true),\n        ];\n  }\n})();\n\n/**\n * @author v.lugovsky\n * created on 16.12.2015\n */\n(function () {\n  'use strict';\n\n  angular.module('BlurAdmin.pages.users')\n    .controller('AddUsersCtrl', AddUsersCtrl);\n\n  /** @ngInject */\n  function AddUsersCtrl($scope, fileReader, $filter, $uibModal, $rootScope, $compile, UsersFactory, $timeout, $stateParams, $state, $injector, Notification, RolesFactory) {\n        $scope.pageName = 'Add User';\n        $scope.btnName = \"Add\";\n        $scope.formscope = {\n                gender: null, user_type: null, country_id: null, status: 1,\n                first_name: '', middle_name: '', last_name: '',\n                dob: '',phone_number: '',mobile: '',\n                address: '',address1: '',state: '',\n                city: '',zip_code: ''\n            };\n        $scope.isSubmitted = false;\n        $scope.loginProgress = false;\n\n        $scope.genderOption = [\n            {label: 'Please select gender', value:null},\n            {label: 'Male', value: 'm'},\n            {label: 'Female', value: 'f'}\n        ];\n\n        $scope.statusOption = [\n            {label: 'Please select status', value:null},\n            {label: 'Active', value: 1},\n            {label: 'Inactive', value: 2}\n        ];\n\n        /* GET USER ROLE */\n        $scope.userTypeOption = [{ id: null, name: 'Please select user type' }];\n        RolesFactory.roleList().success(function (response) {\n            $scope.userTypeOption = $scope.userTypeOption.concat(response.data);\n        }).error(function (error) {\n\n        });\n\n        /* GET COUNTRY */\n        $scope.countries = [{ id: null, country_name: 'Please select country' }];\n        UsersFactory.getCountry().success(function (response) {\n            $scope.countries = $scope.countries.concat(response);\n        }).error(function (error) {\n\n        });\n\n        $scope.errorMessage = UsersFactory.validation;\n\n        /* SET VALIDATION MESSAGE RULES*/\n        var $validationProvider = $injector.get('$validation');\n        $validationProvider.setExpression({\n            confirmPassword: function(value, scope, element, attrs) {\n                return scope.formscope.password === scope.formscope.confirm_password;\n            }\n        })\n        .setDefaultMsg({\n            confirmPassword: {\n                error: 'Passwords do not match.'\n            }\n        });\n\n        $scope.mailModal = function(form){\n            $validationProvider.validate(form).success(function() {\n                $uibModal.open({\n                    animation: true,\n                    backdrop: 'static',\n                    controller: 'UserMailModalCtrl',\n                    templateUrl: 'app/pages/users/mailModal.html',\n                    resolve: {\n                    }\n                }).result.then(function(data) {\n                    $scope.add_data(data)\n                });\n            }).error(function() {\n                $scope.isSubmitted = false;\n            });                \n        }\n        \n        /* ADD ROLES */\n        $scope.add_data = function (mailInfo) {\n            $scope.isSubmitted = true;\n//            $validationProvider.validate(form).success(function () {\n                $scope.loginProgress = true;\n                $scope.formscope.password = $rootScope.makeid(8);\n                if ($scope.formscope.dob) {\n                    $scope.formscope.dob = moment($scope.formscope.dob).format('YYYY-MM-DD');\n\n                    if($scope.formscope.dob == \"Invalid date\") {\n                        Notification.error(\"Please enter valid date.\");\n                        $scope.formscope.dob = '';\n                        $scope.loginProgress = false;\n                        $scope.isSubmitted = false;\n                        return;\n                    }\n\n                    var currentDate = new moment().format('YYYY-MM-DD');\n                    if ($scope.formscope.dob > currentDate) {\n                        Notification.error(\"Please enter valid date.\");\n                        $scope.loginProgress = false;\n                        $scope.isSubmitted = false;\n                        return;\n                    }\n                }\n                $scope.formscope.sendMail = mailInfo.sendMail;\n                $scope.formscope.mailSubject = mailInfo.mailSubject;\n                $scope.formscope.mailContent = mailInfo.mailContent;\n                \n                UsersFactory.addRecord($scope.formscope).success(function (response) {\n                    Notification.success(response.success);\n                    $state.go('users.list');\n                    $scope.isSubmitted = false;\n                }).error(function (error) {\n                    $scope.loginProgress = false;\n                    Notification.error(error.error);\n                    $scope.isSubmitted = false;\n                });\n//            }).error(function (error) {\n//                $scope.isSubmitted = false;\n//            });\n        };\n  }\n})();\n\n/**\n * @author a.demeshko\n * created on 21.01.2016\n */\n(function() {\n    'use strict';\n\n    angular.module('BlurAdmin.pages.users')\n        .controller('ChangePasswordCtrl', ChangePasswordCtrl);\n\n    /** @ngInject */\n    function ChangePasswordCtrl($scope, fileReader, $filter, $timeout, $uibModal, $rootScope, $compile, $injector, $uibModalInstance, Notification, UsersFactory, user_id) {\n        $scope.btnName = 'Change';\n        $scope.isSubmitted = false;\n        $scope.titleName = 'Change Password';\n\n        $scope.changepassformscope = {};\n\n        var $validationProvider = $injector.get('$validation');\n        $scope.errorMessage = UsersFactory.validation;\n\n        var $validationProvider = $injector.get('$validation');\n        $validationProvider.setExpression({\n                confirmPassword: function(value, scope, element, attrs) {\n                    return scope.changepassformscope.new_password === scope.changepassformscope.confirm_password;\n                }\n            })\n            .setDefaultMsg({\n                confirmPassword: {\n                    error: 'Passwords do not match.'\n                }\n            });\n\n        $scope.change_password = function(form) {\n            $scope.isSubmitted = true;\n            $validationProvider.validate(form).success(function() {\n                UsersFactory.changePassword(user_id, $scope.changepassformscope).success(function(response) {\n                    Notification.success(response.success);\n                    $scope.isSubmitted = false;\n                    $scope.changepassformscope = {};\n                    $uibModalInstance.close($scope.changepassformscope);\n                }).error(function(error) {\n                    Notification.error(error.error);\n                    $scope.isSubmitted = false;\n                });\n            }).error(function() {\n                $scope.isSubmitted = false;\n            });\n        };\n    }\n})();\n/**\n * @author v.lugovsky\n * created on 16.12.2015\n */\n(function () {\n  'use strict';\n\n  angular.module('BlurAdmin.pages.users')\n    .controller('EditUsersCtrl', EditUsersCtrl);\n\n  /** @ngInject */\n  function EditUsersCtrl($scope, fileReader, $filter, $uibModal, $rootScope, $compile, UsersFactory, $timeout, $stateParams, $state, $injector, Notification, RolesFactory) {\n        $scope.pageName = 'Edit User';\n        $scope.btnName = \"Update\";\n        $scope.isSubmitted = false;\n        $scope.urlID = $stateParams.id;\n\n        UsersFactory.getRecord($scope.urlID).success(function (response) {\n            $scope.formscope = response.data;\n        }).error(function (error) {\n                Notification.error(error.error);\n                $state.go('roles.list');\n        });\n\n        $scope.genderOption = [\n            {label: 'Please select gender', value:''},\n            {label: 'Male', value: 'm'},\n            {label: 'Female', value: 'f'}\n        ];\n\n        $scope.statusOption = [\n            {label: 'Please select status', value:null},\n            {label: 'Active', value: 1},\n            {label: 'Inactive', value: 2}\n        ];\n\n        /* GET PERMISSIONS */\n        $scope.userTypeOption = [{ id: null, name: 'Please select user type' }];\n        RolesFactory.roleList().success(function (response) {\n            $scope.userTypeOption = $scope.userTypeOption.concat(response.data);\n        }).error(function (error) {\n\n        });\n\n        /* GET COUNTRY */\n        $scope.countries = [{ id: null, country_name: 'Please select country' }];\n        UsersFactory.getCountry().success(function (response) {\n            $scope.countries = $scope.countries.concat(response);\n        }).error(function (error) {\n\n        });\n\n        $scope.errorMessage = UsersFactory.validation;\n\n        /* SET VALIDATION MESSAGE RULES*/\n        var $validationProvider = $injector.get('$validation');\n        $validationProvider.setExpression({\n            confirmPassword: function(value, scope, element, attrs) {\n                return scope.formscope.password === scope.formscope.confirm_password;\n            }\n        })\n        .setDefaultMsg({\n            confirmPassword: {\n                error: 'Passwords do not match.'\n            }\n        });\n\n        /* ADD ROLES */\n        $scope.add_data = function (form) {\n            $scope.isSubmitted = true;\n            $validationProvider.validate(form)\n                    .success(function () {\n                        $scope.formscope._method = 'PUT';\n                        if ($scope.formscope.dob === undefined || $scope.formscope.dob === null) {\n                            $scope.formscope.dob = null;\n                        }\n                        else {\n                            $scope.formscope.dob = moment($scope.formscope.dob).format('YYYY-MM-DD');\n                            if($scope.formscope.dob == \"Invalid date\") {\n                                Notification.error(\"Please enter valid date.\");\n                                $scope.formscope.dob = '';\n                                $scope.isSubmitted = false;\n                                return;\n                            }\n\n                            var currentDate = new moment().format('YYYY-MM-DD');\n                            if ($scope.formscope.dob > currentDate) {\n                                Notification.error(\"Please enter valid date.\");\n                                $scope.isSubmitted = false;\n                                return;\n                            }\n                        }\n                        \n                        UsersFactory.updateRecord($scope.urlID, $scope.formscope).success(function (response) {\n                            Notification.success(response.success);\n                            $state.go('users.list');\n                            $scope.isSubmitted = false;\n                        }).error(function (error) {\n                            Notification.error(error.error);\n                            $scope.isSubmitted = false;\n                        });\n                    })\n                    .error(function (error) {\n                        $scope.isSubmitted = false;\n                    });\n        };\n  }\n})();\n\n(function() {\n    'use strict';\n\n    angular.module('BlurAdmin.pages.users')\n        .controller('UserMailModalCtrl', UserMailModalCtrl);\n    \n    /** @ngInject */\n    function UserMailModalCtrl($scope, $rootScope, $compile, $injector, $uibModalInstance, $timeout, Notification) {\n        $scope.formscope = {\n            mailSubject : 'Welcome to Tour Management',\n            mailContent : \"<p>Jay Swaminarayan! </p><p> Welcome to Tour Management System </p><p> We have added you as {rolename} in tour management </p><p> Login details are as below.</p> \"\n        }; \n        \n        $scope.displayEditor = false;\n        $timeout(function() {\n            $scope.displayEditor = true;\n        }, 100);\n        \n        $scope.sendMail = function() {\n            $scope.formscope.sendMail = 1;\n            $uibModalInstance.close($scope.formscope);\n        };\n        \n        $scope.donotsendMail = function() {\n            $scope.formscope.sendMail = 0;\n            $uibModalInstance.close($scope.formscope);\n        };                \n    }\n})();\n/**\n * @author v.lugovsky\n * created on 16.12.2015\n */\n(function () {\n  'use strict';\n\n  angular.module('BlurAdmin.pages.users')\n    .controller('ViewUsersCtrl', ViewUsersCtrl);\n\n  /** @ngInject */\n  function ViewUsersCtrl($scope, fileReader, $filter, $uibModal, $rootScope, $compile, $stateParams, UsersFactory, $timeout, ngDialog, $config) {\n        \n        $scope.pageName = 'Users - View';\n        $scope.btnName = \"View\";\n        $scope.isSubmitted = false;\n        $scope.urlID = $stateParams.id;\n\n        $scope.genderOption = [\n            {label: '-', value:null},\n            {label: 'Male', value: 'm'},\n            {label: 'Female', value: 'f'}\n        ];\n\n        $scope.showGender = function(user) {\n            var selected = [];\n                selected = $filter('filter')($scope.genderOption, { value: user });\n            return selected.length ? selected[0].label : '-';\n        };\n        \n        UsersFactory.getRecord($scope.urlID).success(function (response) {\n            $scope.formscope = response.data;\n            $scope.formscope.gender_text = $scope.showGender($scope.formscope);\n            \n            if($scope.formscope.image && $scope.formscope.image != null) {\n              $scope.imageUrl = config.profile_url+'/'+$scope.formscope.id+'/'+$scope.formscope.image;\n            }\n            else {\n              $scope.imageUrl = config.profile_url+'/noImage.png';\n            }\n        }).error(function (error) {\n                Notification.error(error.error);\n                $state.go('roles.list');\n        });\n  }\n})();\n/**\n * @author v.lugovsky\n * created on 16.12.2015\n */\n(function() {\n    'use strict';\n\n    angular.module('BlurAdmin.pages.users')\n        .controller('editProfileCtrl', editProfileCtrl);\n\n    /** @ngInject */\n    function editProfileCtrl($scope, fileReader, $filter, $uibModal, $cookies, $rootScope, $compile, UsersFactory, $timeout, $stateParams, $state, $injector, Notification, RolesFactory) {\n        $scope.pageName = 'Edit User';\n        $scope.btnName = \"Update Profile\";\n        $scope.isSubmitted = false;\n        $scope.urlID = $rootScope.auth_user.id;\n\n        $scope.uploadPicture = function() {\n            var fileInput = document.getElementById('uploadFile');\n            fileInput.click();\n        };\n\n        UsersFactory.getRecord($scope.urlID).success(function(response) {\n            $scope.formscope = response.data;\n        }).error(function(error) {\n            Notification.error(error.error);\n            $state.go('roles.list');\n        });\n\n        $scope.genderOption = [\n            { label: 'Please select gender', value: '' },\n            { label: 'Male', value: 'm' },\n            { label: 'Female', value: 'f' }\n        ];\n\n        /* GET PERMISSIONS */\n        $scope.userTypeOption = [{ id: null, name: 'Please select user type' }];\n        RolesFactory.roleList().success(function(response) {\n            $scope.userTypeOption = $scope.userTypeOption.concat(response.data);\n        }).error(function(error) {\n\n        });\n\n        /* GET COUNTRY */\n        $scope.countries = [{ id: null, country_name: 'Please select country' }];\n        UsersFactory.getCountry().success(function(response) {\n            $scope.countries = $scope.countries.concat(response);\n        }).error(function(error) {\n\n        });\n\n        UsersFactory.getRecord($scope.urlID).success(function(response) {\n            $scope.formscope = response.data;\n            $scope.formscopestatus = {\n                status: $scope.formscope.availability\n            };\n            if ($scope.formscope.image) {\n                $scope.imageUrl = config.profile_url + '/' + $scope.formscope.id + '/' + $scope.formscope.image;\n            } else {\n                $scope.imageUrl = config.profile_url + '/noImage.png';\n            }\n        }).error(function(error) {\n            Notification.error(error.error);\n            $state.go('roles.list');\n        });\n\n        $scope.errorMessage = UsersFactory.validation;\n\n        /* ADD ROLES */\n        $scope.add_data = function(form) {\n            $scope.isSubmitted = true;\n            $validationProvider.validate(form)\n                .success(function() {\n                    $scope.formscope._method = 'PUT';\n                    if ($scope.formscope.dob === undefined) {\n                        $scope.formscope.dob = null;\n                    } else {\n                        $scope.formscope.dob = moment($scope.formscope.dob).format('YYYY-MM-DD');\n\n                        if ($scope.formscope.dob == \"Invalid date\") {\n                            Notification.error(\"Please enter valid date.\");\n                            $scope.formscope.dob = '';\n                            $scope.isSubmitted = false;\n                            return;\n                        }\n\n                        var currentDate = new moment().format('YYYY-MM-DD');\n                        if ($scope.formscope.dob > currentDate) {\n                            Notification.error(\"Please enter valid date.\");\n                            $scope.isSubmitted = false;\n                            return;\n                        }\n                    }\n\n                    UsersFactory.editProfile($scope.urlID, $scope.formscope).success(function(response) {\n                        Notification.success(response.success);\n                        if(response.data.image) {\n                            $scope.imageUrl = config.profile_url + '/' + response.data.id + '/' + response.data.image;\n                        }\n                        else {\n                            $scope.imageUrl = config.profile_url + '/noImage.png';\n                        }\n\n                        var auth_user = {};\n                        auth_user = response.data;\n\n                        $cookies.put(\"authUser\", JSON.stringify(auth_user));\n                        // $state.go('users.list');\n                        $scope.isSubmitted = false;\n                    }).error(function(error) {\n                        Notification.error(error.error);\n                        $scope.isSubmitted = false;\n                    });\n                })\n                .error(function(error) {\n                    $scope.isSubmitted = false;\n                });\n        };\n\n        $scope.changepassformscope = {};\n\n        /* SET VALIDATION MESSAGE RULES*/\n        var $validationProvider = $injector.get('$validation');\n        $validationProvider.setExpression({\n                confirmPassword: function(value, scope, element, attrs) {\n                    return scope.changepassformscope.new_password === scope.changepassformscope.confirm_password;\n                }\n            })\n            .setDefaultMsg({\n                confirmPassword: {\n                    error: 'Passwords do not match.'\n                }\n            });\n\n        $scope.change_password = function(form) {\n            $scope.isSubmitted = true;\n            $validationProvider.validate(form).success(function() {\n                UsersFactory.updatePassword($scope.urlID, $scope.changepassformscope).success(function(response) {\n                    Notification.success(response.success);\n                    $scope.isSubmitted = false;\n                    $scope.changepassformscope = {};\n                }).error(function(error) {\n                    Notification.error(error.error);\n                    $scope.isSubmitted = false;\n                });\n            }).error(function() {\n                $scope.isSubmitted = false;\n            });\n        };\n\n        $scope.change_availability = function(form) {\n            $scope.isSubmitted = true;\n            $validationProvider.validate(form)\n                .success(function() {\n                    if ($scope.formscope.availability === $scope.formscopestatus.status) {\n                        Notification.error('You have already defined this availability status. please select other availability status.');\n                        $scope.isSubmitted = false;\n                    } else {\n                        UsersFactory.updateAvailability($scope.urlID, $scope.formscopestatus).success(function(response) {\n                            Notification.success(response.success);\n                            $scope.formscope.availability = $scope.formscopestatus.status;\n                            $scope.formscopestatus.comment = '';\n                            $scope.isSubmitted = false;\n                        }).error(function(error) {\n                            Notification.error(error.error);\n                            $scope.isSubmitted = false;\n                        });\n                    }\n                })\n                .error(function(error) {\n                    $scope.isSubmitted = false;\n                });\n        };\n    }\n})();\n/**\n * @author v.lugovsky\n * created on 16.12.2015\n */\n(function () {\n  'use strict';\n\n  angular.module('BlurAdmin.pages.users')\n    .controller('UsersCtrl', UsersCtrl);\n\n  /** @ngInject */\n  function UsersCtrl($scope, fileReader, $state, $filter, $uibModal, $rootScope, $compile, DTOptionsBuilder, DTColumnBuilder, UsersFactory, $timeout, ngDialog, Notification) {\n        $scope.dtInstance = {};\n        \n        $scope.reloadData = function () {\n            $scope.dtInstance.rerender();\n        };\n\n        $scope.createdRow = function(row, data, dataIndex) {\n            // Recompiling so we can bind Angular directive to the DT\n            $compile(angular.element(row).contents())($scope);\n        };\n\n        $scope.genderRender = function(data, type, full) {\n            if (data == 'f') {\n                return \"Female\";\n            } else if (data == 'm') {\n                return \"Male\";\n            } else {\n                return \"-\";\n            }\n        };\n\n        $scope.changePassword = function(id) {\n            $uibModal.open({\n                animation: true,\n                size: 'sm',\n                controller: 'ChangePasswordCtrl',\n                templateUrl: 'app/pages/users/changePassword.html',\n                resolve: {\n                    user_id: function() {\n                        return id\n                    }\n                }\n            }).result.then(function(data) {\n\n            });\n        };\n        \n        $scope.resendmailModal = function(userId){\n            $uibModal.open({\n                animation: true,\n                backdrop: 'static',\n                controller: 'UserMailModalCtrl',\n                templateUrl: 'app/pages/users/mailModal.html',\n                resolve: {\n                }\n            }).result.then(function(data) {\n                data.userId = userId;\n                \n                if(data.sendMail == 1){\n                    $scope.resendEmail(data);\n                }\n            });\n        }\n\n        $scope.resendEmail = function(mailInfo) {\n            $scope.users[mailInfo.userId].isSubmitted = true;\n            var data = {id:mailInfo.userId, sendMail:mailInfo.sendMail, mailSubject: mailInfo.mailSubject, mailContent: mailInfo.mailContent};\n            UsersFactory.resendEmail(data).success(function (res) { \n                Notification.success(res.success);\n                $scope.users[mailInfo.userId].isSubmitted = false;\n            }).error(function (err) {\n                $scope.users[mailInfo.userId].isSubmitted = false;\n                Notification.error(err.error);\n            });\n        };\n        \n        $scope.roleRender = function(data, type, full) {\n            if (data) {\n                var role = data.role.split('||');\n                return role[1];\n            } else {\n                return \"-\";\n            }\n        };\n\n        $scope.deleteRecord = function(id) {\n            UsersFactory.deleteRecord(id).success(function (res) {\n                Notification.success(res.success);\n                $state.reload();\n            }).error(function (err) {\n                Notification.error(err.error);\n            });\n        }\n\n        $scope.actionRoles = function (data, type, full) {\n            if(full.is_editable != false) {\n                var reLink = '';\n                if (!full.mobile) {\n                    $scope.users[full.id] = full;\n                    $scope.users[full.id].isSubmitted = false;\n                    reLink = \"<a ng-if=\\\"havePermission('users','resend.email');\\\" class='cursor-pointer' ng-hide='users[\" + full.id + \"].isSubmitted' style='cursor:pointer' ng-click='resendmailModal(\" + full.id + \")' title='Resend Email'><i class='fa fa-repeat'></i></a> \";\n\n                    // return \"<a ui-sref='users.viewdetails({ id: \" + full.id + \" })'><i class='fa fa-eye'></i></a> <a ui-sref='users.edit({ id: \" + full.id + \" })'><i class='fa fa-edit'></i></a> <a ng-click='changePassword(\" + full.id + \")' title='Change Password'><i class='fa fa-cog'></i></a> <a class='cursor-pointer' ng-hide='users[\" + full.id + \"].isSubmitted' style='cursor:pointer' ng-click='resendEmail(\" + full.id + \")' title='Resend Email'><i class='ion-repeat'></i></a>\";    \n                }\n                return \"<a ng-if=\\\"havePermission('users','view');\\\" ui-sref='users.viewdetails({ id: \" + full.id + \" })'><i class='fa fa-eye'></i></a> <a ng-if=\\\"havePermission('users','update');\\\" ui-sref='users.edit({ id: \" + full.id + \" })'><i class='fa fa-edit'></i></a> <a ng-click='changePassword(\" + full.id + \")' ng-if=\\\"havePermission('users','update.password');\\\" title='Change Password'><i class='fa fa-key'></i></a> <a ng-if=\\\"havePermission('users','delete');\\\" class='cursor-pointer' style='cursor:pointer' ng-confirm-click='Are you sure to delete this user?' confirmed-click='deleteRecord(\" + full.id + \")' title='Delete User'><i class='fa fa-trash'></i></a> \"+ reLink;\n            }\n            else {\n                return \"-\";\n            }\n        };\n\n        $scope.indexNumber = function(data, type, full, row) {\n            var i = Number(row.row) + Number(1);\n            var ind = row.settings._iDisplayStart + i;\n            return \"<span>\" + ind + \"</span>\";\n        };\n\n        $scope.dtOptions = DTOptionsBuilder.newOptions()\n            .withDataProp('data')\n            .withOption('ajax', function (data, callback, settings) {\n                UsersFactory.showDataTable(data).success(function (res) { \n                    if (res.error)\n                      $scope.reloadData();\n                    else // DataTables' callback\n                    callback(res);\n                }).error(function (err) {\n                    if (err.error)\n                    $scope.reloadData();\n                });\n            })\n            .withOption('processing', true)\n            .withOption('serverSide', true)\n            .withPaginationType('simple_numbers')\n            .withOption('order', [1, 'asc'])\n            .withDOM('lftip')\n            .withOption('searchDelay', 500)\n            .withOption('createdRow', $scope.createdRow);\n\n        $scope.dtColumns = [\n            DTColumnBuilder.newColumn('id').withTitle('No').withOption('searchable', false).renderWith($scope.indexNumber).withClass('table-index'),\n            DTColumnBuilder.newColumn('name').withTitle('Name').withOption('searchable', true),\n            DTColumnBuilder.newColumn('email').withTitle('Email').withOption('searchable', true),\n            DTColumnBuilder.newColumn('mobile').withTitle('Mobile').withOption('searchable', true),\n            DTColumnBuilder.newColumn('gender').withTitle('Gender').withOption('searchable', true),\n            DTColumnBuilder.newColumn('role').withTitle('Role').withOption('searchable', true),\n            DTColumnBuilder.newColumn(null).withTitle('Action').withOption('searchable', false).renderWith($scope.actionRoles).notSortable()\n        ];\n  }\n})();\n/**\n * @author v.lugovksy\n * created on 15.12.2015\n */\n(function () {\n  'use strict';\n\n  angular.module('BlurAdmin.theme.components')\n      .config(toastrLibConfig);\n\n  /** @ngInject */\n  function toastrLibConfig(toastrConfig) {\n    angular.extend(toastrConfig, {\n      closeButton: true,\n      closeHtml: '<button>&times;</button>',\n      timeOut: 5000,\n      autoDismiss: false,\n      containerId: 'toast-container',\n      maxOpened: 0,\n      newestOnTop: true,\n      positionClass: 'toast-top-right',\n      preventDuplicates: false,\n      preventOpenDuplicates: false,\n      target: 'body'\n    });\n  }\n})();\n/**\n * Change top \"Daily Downloads\", \"Active Users\" values with animation effect\n */\n(function () {\n  'use strict';\n\n  angular.module('BlurAdmin.theme')\n      .directive('animatedChange', animatedChange);\n\n  /** @ngInject */\n  function animatedChange($timeout) {\n    return {\n      link: function (scope, element) {\n        $timeout(function () {\n          var newValue = element.attr('new-value');\n          var oldvalue = parseInt(element.html());\n\n          function changeValue(val) {\n            $timeout(function () {\n              element.html(val);\n            }, 30);\n          }\n\n          if (newValue > oldvalue) {\n            for (var i = oldvalue; i <= newValue; i++) {\n              changeValue(i);\n            }\n          } else {\n            for (var j = oldvalue; j >= newValue; j--) {\n              changeValue(j);\n            }\n          }\n          $timeout(function () {\n            element.next().find('i').addClass('show-arr');\n          }, 500);\n        }, 3500);\n      }\n    };\n  }\n\n})();\n/**\n * Auto expand textarea field\n */\n(function () {\n  'use strict';\n\n  angular.module('BlurAdmin.theme')\n      .directive('autoExpand', autoExpand);\n\n  /** @ngInject */\n  function autoExpand() {\n    return {\n      restrict: 'A',\n      link: function ($scope, elem) {\n        elem.bind('keydown', function ($event) {\n          var element = $event.target;\n          $(element).height(0);\n          var height = $(element)[0].scrollHeight;\n          height = (height < 16) ? 16 : height;\n          $(element).height(height);\n        });\n\n        // Expand the textarea as soon as it is added to the DOM\n        setTimeout(function () {\n          var element = elem;\n          $(element).height(0);\n          var height = $(element)[0].scrollHeight;\n          height = (height < 16) ? 16 : height;\n          $(element).height(height);\n        }, 0)\n      }\n    };\n  }\n\n})();\n(function () {\n  'use strict';\n\n  angular.module('BlurAdmin.theme')\n      .directive('autoFocus', autoFocus);\n\n  /** @ngInject */\n  function autoFocus($timeout, $parse) {\n    return {\n      link: function (scope, element, attrs) {\n        var model = $parse(attrs.autoFocus);\n        scope.$watch(model, function (value) {\n          if (value === true) {\n            $timeout(function () {\n              element[0].focus();\n              element[0].select();\n            });\n          }\n        });\n        element.bind('blur', function () {\n          scope.$apply(model.assign(scope, false));\n        });\n      }\n    };\n  }\n\n})();\n/**\n * @author v.lugovsky\n * created on 16.12.2015\n */\n(function () {\n  'use strict';\n\n  angular.module('BlurAdmin.theme')\n      .directive('includeWithScope', includeWithScope);\n\n  /** @ngInject */\n  function includeWithScope() {\n    return {\n      restrict: 'AE',\n      templateUrl: function(ele, attrs) {\n        return attrs.includeWithScope;\n      }\n    };\n  }\n\n})();\n\n/**\n * @author a.demeshko\n * created on 22.12.2015\n */\n(function () {\n  'use strict';\n\n  angular.module('BlurAdmin.theme')\n    .directive('ionSlider', ionSlider);\n\n  /** @ngInject */\n  function ionSlider($timeout) {\n    return {\n      restrict: 'EA',\n      template: '<div></div>',\n      replace: true,\n      scope: {\n        min: '=',\n        max: '=',\n        type: '@',\n        prefix: '@',\n        maxPostfix: '@',\n        prettify: '=',\n        prettifySeparator: '@',\n        grid: '=',\n        gridMargin: '@',\n        postfix: '@',\n        step: '@',\n        hideMinMax: '@',\n        hideFromTo: '@',\n        from: '=',\n        to: '=',\n        disable: '=',\n        onChange: '=',\n        onFinish: '=',\n        values: '=',\n        timeout: '@'\n      },\n      link: function ($scope, $element) {\n            $element.ionRangeSlider({\n              min: $scope.min,\n              max: $scope.max,\n              type: $scope.type,\n              prefix: $scope.prefix,\n              maxPostfix: $scope.maxPostfix,\n              prettify_enabled: $scope.prettify,\n              prettify_separator: $scope.prettifySeparator,\n              grid: $scope.grid,\n              gridMargin: $scope.gridMargin,\n              postfix: $scope.postfix,\n              step: $scope.step,\n              hideMinMax: $scope.hideMinMax,\n              hideFromTo: $scope.hideFromTo,\n              from: $scope.from,\n              to: $scope.to,\n              disable: $scope.disable,\n              onChange: $scope.onChange,\n              onFinish: $scope.onFinish,\n              values: $scope.values\n            });\n\n            $scope.$watch('min', function (value) {\n              $timeout(function () {\n                $element.data(\"ionRangeSlider\").update({min: value});\n              });\n            }, true);\n            $scope.$watch('max', function (value) {\n              $timeout(function () {\n                $element.data(\"ionRangeSlider\").update({max: value});\n              });\n            });\n            $scope.$watch('from', function (value) {\n              $timeout(function () {\n                $element.data(\"ionRangeSlider\").update({from: value});\n              });\n            });\n            $scope.$watch('to', function (value) {\n              $timeout(function () {\n                $element.data(\"ionRangeSlider\").update({to: value});\n              });\n            });\n            $scope.$watch('disable', function (value) {\n              $timeout(function () {\n                $element.data(\"ionRangeSlider\").update({disable: value});\n              });\n            });\n      }\n    };\n  }\n\n})();\n(function () {\n  'use strict';\n\n  angular.module('BlurAdmin.theme')\n      .directive('ngFileSelect', ngFileSelect);\n\n  /** @ngInject */\n  function ngFileSelect() {\n    return {\n      link: function ($scope, el) {\n        el.bind('change', function (e) {\n          $scope.file = (e.srcElement || e.target).files[0];\n          $scope.getFile();\n        })\n      }\n    }\n  }\n\n})();\n(function () {\n  'use strict';\n\n  angular.module('BlurAdmin.theme')\n      .directive('scrollPosition', scrollPosition);\n\n  /** @ngInject */\n  function scrollPosition() {\n    return {\n      scope: {\n        scrollPosition: '=',\n        maxHeight: '='\n      },\n      link: function (scope) {\n        $(window).on('scroll', function() {\n          var scrollTop = $(window).scrollTop() > scope.maxHeight;\n          if (scrollTop !== scope.prevScrollTop) {\n            scope.$apply(function() {\n              scope.scrollPosition = scrollTop;\n            });\n          }\n          scope.prevScrollTop = scrollTop;\n        });\n      }\n    };\n  }\n\n})();\n(function () {\n  'use strict';\n\n  angular.module('BlurAdmin.theme')\n      .directive('trackWidth', trackWidth);\n\n  /** @ngInject */\n  function trackWidth() {\n    return {\n      scope: {\n        trackWidth: '=',\n        minWidth: '=',\n      },\n      link: function (scope, element) {\n        scope.trackWidth = $(element).width() < scope.minWidth;\n        scope.prevTrackWidth = scope.trackWidth;\n\n        $(window).resize(function() {\n          var trackWidth = $(element).width() < scope.minWidth;\n          if (trackWidth !== scope.prevTrackWidth) {\n            scope.$apply(function() {\n              scope.trackWidth = trackWidth;\n            });\n          }\n          scope.prevTrackWidth = trackWidth;\n        });\n      }\n    };\n  }\n\n})();\n/**\n * Animated load block\n */\n(function () {\n  'use strict';\n\n  angular.module('BlurAdmin.theme')\n      .directive('zoomIn', zoomIn);\n\n  /** @ngInject */\n  function zoomIn($timeout, $rootScope) {\n    return {\n      restrict: 'A',\n      link: function ($scope, elem) {\n        var delay = 1000;\n\n        if ($rootScope.$pageFinishedLoading) {\n          delay = 100;\n        }\n\n        $timeout(function () {\n          elem.removeClass('full-invisible');\n          elem.addClass('animated zoomIn');\n        }, delay);\n      }\n    };\n  }\n\n})();\n/**\n * @author n.poltoratsky\n * created on 27.06.2016\n */\n(function () {\n    'use strict';\n\n    angular.module('BlurAdmin.theme')\n        .factory('baProgressModal', baProgressModal);\n\n    /** @ngInject */\n    function baProgressModal($uibModal) {\n        var methods = {};\n        var progress = 0;\n        var max = 100;\n        var opened = false;\n\n        return {\n            setProgress: function (value) {\n                if (value > max) {\n                    throw Error('Progress can\\'t be greater than max');\n                }\n                progress = value;\n            },\n            getProgress: function () {\n                return progress;\n            },\n            open: function() {\n                if (!opened) {\n                    methods = $uibModal.open({\n                        animation: true,\n                        templateUrl: 'app/pages/ui/modals/progressModal/progressModal.html',\n                        size: 'sm',\n                        keyboard: false,\n                        backdrop: 'static'\n                    });\n                    opened = true;\n                } else {\n                    throw Error('Progress modal opened now');\n                }\n\n            },\n            close: function() {\n                if (opened) {\n                    methods.close();\n                    opened = false;\n                } else {\n                    throw Error('Progress modal is not active');\n                }\n\n            }\n        };\n    }\n\n})();\n/**\n * @author v.lugovsky\n * created on 03.05.2016\n */\n(function () {\n  'use strict';\n\n  angular.module('BlurAdmin.theme')\n      .service('baUtil', baUtil);\n\n  /** @ngInject */\n  function baUtil() {\n\n    this.isDescendant = function(parent, child) {\n      var node = child.parentNode;\n      while (node != null) {\n        if (node == parent) {\n          return true;\n        }\n        node = node.parentNode;\n      }\n      return false;\n    };\n\n    this.hexToRGB = function(hex, alpha) {\n      var r = parseInt( hex.slice(1,3), 16 );\n      var g = parseInt( hex.slice(3,5), 16 );\n      var b = parseInt( hex.slice(5,7), 16 );\n      return 'rgba(' + r + ', ' + g + ', ' + b + ', ' + alpha + ')';\n    };\n\n    this.hasAttr = function (elem, attrName) {\n      var attr = $(elem).attr(attrName);\n      return (typeof attr !== typeof undefined && attr !== false);\n    }\n  }\n})();\n\n/**\n * @author v.lugovksy\n * created on 16.12.2015\n */\n(function () {\n  'use strict';\n\n  angular.module('BlurAdmin.theme')\n      .service('fileReader', fileReader);\n\n  /** @ngInject */\n  function fileReader($q) {\n    var onLoad = function(reader, deferred, scope) {\n      return function () {\n        scope.$apply(function () {\n          deferred.resolve(reader.result);\n        });\n      };\n    };\n\n    var onError = function (reader, deferred, scope) {\n      return function () {\n        scope.$apply(function () {\n          deferred.reject(reader.result);\n        });\n      };\n    };\n\n    var onProgress = function(reader, scope) {\n      return function (event) {\n        scope.$broadcast('fileProgress',\n            {\n              total: event.total,\n              loaded: event.loaded\n            });\n      };\n    };\n\n    var getReader = function(deferred, scope) {\n      var reader = new FileReader();\n      reader.onload = onLoad(reader, deferred, scope);\n      reader.onerror = onError(reader, deferred, scope);\n      reader.onprogress = onProgress(reader, scope);\n      return reader;\n    };\n\n    var readAsDataURL = function (file, scope) {\n      var deferred = $q.defer();\n\n      var reader = getReader(deferred, scope);\n      reader.readAsDataURL(file);\n\n      return deferred.promise;\n    };\n\n    return {\n      readAsDataUrl: readAsDataURL\n    };\n  }\n})();\n/**\n * @author a.demeshko\n * created on 3/1/16\n */\n(function () {\n  'use strict';\n\n  angular.module('BlurAdmin.theme')\n    .service('preloader', preloader);\n\n  /** @ngInject */\n  function preloader($q) {\n    return {\n      loadImg: function (src) {\n        var d = $q.defer();\n        var img = new Image();\n        img.src = src;\n        img.onload = function(){\n          d.resolve();\n        };\n        return d.promise;\n      },\n      loadAmCharts : function(){\n        var d = $q.defer();\n        AmCharts.ready(function(){\n          d.resolve();\n        });\n        return d.promise;\n      }\n    }\n  }\n\n})();\n/**\n * @author a.demeshko\n * created on 12/21/15\n */\n(function () {\n  'use strict';\n\n  angular.module('BlurAdmin.theme')\n    .service('stopableInterval', stopableInterval);\n\n  /** @ngInject */\n  function stopableInterval($window) {\n    return {\n      start: function (interval, calback, time) {\n        function startInterval() {\n          return interval(calback, time);\n        }\n\n        var i = startInterval();\n\n        angular.element($window).bind('focus', function () {\n          if (i) interval.cancel(i);\n          i = startInterval();\n        });\n\n        angular.element($window).bind('blur', function () {\n          if (i) interval.cancel(i);\n        });\n      }\n    }\n  }\n\n})();\n/**\n * @author v.lugovsky\n * created on 16.12.2015\n */\n(function () {\n  'use strict';\n\n  angular.module('BlurAdmin.pages.categories.locations')\n    .controller('AddLocationsCtrl', AddLocationsCtrl);\n\n  /** @ngInject */\n  function AddLocationsCtrl($scope, fileReader, $filter, $uibModal, $rootScope, $compile, LocationsFactory, $timeout, $stateParams, $state, $injector, Notification) {\n        $scope.formscope = {status:1};\n        $scope.pageName = 'Add Info Session';\n        $scope.btnName = 'Add';\n        $scope.isSubmitted = false;\n        \n        $scope.statusData = [\n            { 'value': 0, 'text': 'Inactive' },\n            { 'value': 1, 'text': 'Active' }\n        ];\n\n        var $validationProvider = $injector.get('$validation');\n        $scope.errorMessage = LocationsFactory.validation;\n\n        $scope.add_data = function(form) {\n            $validationProvider.validate(form).success(function() {\n                $scope.isSubmitted = true;\n                \n                LocationsFactory.addRecord($scope.formscope).success(function(res) {\n                    Notification.success(res.success);\n                    $state.go('categories.locations.list');\n                    $scope.isSubmitted = false;\n                }).error(function(err) {\n                    Notification.error(err.error);\n                    $scope.isSubmitted = false;\n                });\n            }).error(function() {\n                $scope.isSubmitted = false;\n            });\n        };\n  }\n})();\n\n\n\n/**\n * @author v.lugovsky\n * created on 16.12.2015\n */\n(function () {\n  'use strict';\n\n  angular.module('BlurAdmin.pages.categories.locations')\n    .controller('EditLocationsCtrl', EditLocationsCtrl);\n\n  /** @ngInject */\n  function EditLocationsCtrl($scope, fileReader, $filter, $uibModal, $rootScope, $compile, LocationsFactory, $timeout, $stateParams, $state, $injector, Notification) {\n        $scope.pageName = 'Edit Info Session';\n        $scope.btnName = 'Update';\n        $scope.isSubmitted = false;\n        $scope.urlID = $stateParams.id;\n\n        $scope.statusData = [\n            { 'value': 0, 'text': 'Inactive' },\n            { 'value': 1, 'text': 'Active' }\n        ];\n   \n        var $validationProvider = $injector.get('$validation');\n        $scope.errorMessage = LocationsFactory.validation;\n\n        LocationsFactory.getRecord($scope.urlID).success(function(response) {\n            $scope.formscope = response.data;\n        }).error(function(error) {\n            Notification.error(error.error);\n            $state.go('categories.locations.list');\n        });\n\n        $scope.add_data = function(form) {\n            $validationProvider.validate(form).success(function() {\n                $scope.isSubmitted = true;\n                $scope.formscope._method = 'PUT';\n                \n                LocationsFactory.updateRecord($scope.urlID, $scope.formscope).success(function(res) {\n                    Notification.success(res.success);\n                    $state.go('categories.locations.list');\n                    $scope.isSubmitted = false;\n                }).error(function(err) {\n                    Notification.error(err.error);\n                    $scope.isSubmitted = false;\n                });\n            }).error(function() {\n                $scope.isSubmitted = false;\n            });\n        };\n  }\n})();\n\n/**\n * @author v.lugovsky\n * created on 16.12.2015\n */\n(function () {\n  'use strict';\n\n  angular.module('BlurAdmin.pages.categories.locations')\n    .controller('ListLocationsCtrl', ListLocationsCtrl);\n\n  /** @ngInject */\n  function ListLocationsCtrl($scope, $state, fileReader, $filter, $uibModal, $rootScope, $compile, DTOptionsBuilder, DTColumnBuilder, LocationsFactory, $timeout, Notification) {\n      $scope.dtInstance = {};\n\n      $scope.reloadData = function() {\n          $scope.dtInstance.rerender();\n      };\n\n      $scope.createdRow = function(row, data, dataIndex) {\n           // Recompiling so we can bind Angular directive to the DT\n           $compile(angular.element(row).contents())($scope);\n      };\n\n      $scope.deleteRecord = function(id) {\n        LocationsFactory.deleteRecord(id).success(function (res) {\n            Notification.success(res.success);\n            $state.reload();\n        }).error(function (err) {\n            Notification.error(err.error);\n        });\n      }\n\n      $scope.actionRoles = function(data, type, full) {\n          return \"<a ng-if=\\\"havePermission('locations','update');\\\" ui-sref='categories.locations.edit({ id: \" + full.id + \" })'><i class='fa fa-edit'></i></a> <a ng-if=\\\"havePermission('locations','delete');\\\" ng-confirm-click='Are you sure to delete this location?' confirmed-click='deleteRecord( \" + full.id + \" )'><i class='fa fa-trash'></i></a>\";\n      };\n\n      $scope.statusAction = function(data, type, full) {\n            if(data.status == '0') {\n                return '<small class=\"label label-danger\">Inactive</small>';\n            }\n            else {\n                return '<small class=\"label label-success\">Active</small>';\n            }\n        };\n\n      $scope.indexNumber = function(data, type, full, row) {\n            var i = Number(row.row) + Number(1);\n            var ind = row.settings._iDisplayStart + i;\n            return \"<span>\" + ind + \"</span>\";\n        };\n      \n      $scope.dtOptions = DTOptionsBuilder.newOptions()\n            .withDataProp('data')\n            .withOption('ajax', function(data, callback, settings) {\n                // map your server's response to the DataTables format and pass it to\n                LocationsFactory.showDataTable(data).success(function(res) {\n                    if (res.error)\n                        $scope.reloadData();\n                    else\n                        callback(res);\n                }).error(function(err) {\n                    if (err)\n                        $scope.reloadData();\n                });\n            })\n            .withOption('processing', true)\n            .withOption('serverSide', true)\n            .withPaginationType('simple_numbers')\n            .withOption('order', [1, 'asc'])\n            .withDOM('lftip')\n            .withOption('searchDelay', 500)\n            .withOption('createdRow', $scope.createdRow);\n\n        $scope.dtColumns = [\n            DTColumnBuilder.newColumn('id').withTitle('No').withOption('searchable', false).renderWith($scope.indexNumber).withClass('table-index'),\n            DTColumnBuilder.newColumn('name').withTitle('Name').withOption('searchable', true),\n            // DTColumnBuilder.newColumn('description').withTitle('Description').withOption('searchable', false).notSortable(),\n            DTColumnBuilder.newColumn(null).withTitle('Status').withOption('searchable', false).notSortable().renderWith($scope.statusAction),\n            DTColumnBuilder.newColumn(null).withTitle('Action').withOption('searchable', false).notSortable().renderWith($scope.actionRoles)\n        ];\n  }\n})();\n/**\n * @author v.lugovsky\n * created on 16.12.2015\n */\n(function () {\n  'use strict';\n\n  angular.module('BlurAdmin.pages.categories.mealcategories')\n    .controller('AddMealcategoriesCtrl', AddMealcategoriesCtrl);\n\n  /** @ngInject */\n  function AddMealcategoriesCtrl($scope, fileReader, $filter, $uibModal, $rootScope, $compile, MealcategoriesFactory, $timeout, $stateParams, $state, $injector, Notification) {\n        $scope.formscope = {status:1};\n        $scope.pageName = 'Add Meal Category';\n        $scope.btnName = 'Add';\n        $scope.isSubmitted = false;\n        \n        $scope.statusData = [\n            { 'value': 0, 'text': 'Inactive' },\n            { 'value': 1, 'text': 'Active' }\n        ];\n\n        var $validationProvider = $injector.get('$validation');\n        $scope.errorMessage = MealcategoriesFactory.validation;\n\n        $scope.add_data = function(form) {\n            $validationProvider.validate(form).success(function() {\n                $scope.isSubmitted = true;\n                \n                MealcategoriesFactory.addRecord($scope.formscope).success(function(res) {\n                    Notification.success(res.success);\n                    $state.go('mealsvalue.mealcategories.list');\n                    $scope.isSubmitted = false;\n                }).error(function(err) {\n                    Notification.error(err.error);\n                    $scope.isSubmitted = false;\n                });\n            }).error(function() {\n                $scope.isSubmitted = false;\n            });\n        };\n   }\n})();\n/**\n * @author v.lugovsky\n * created on 16.12.2015\n */\n(function () {\n  'use strict';\n\n  angular.module('BlurAdmin.pages.categories.mealcategories')\n    .controller('EditMealcategoriesCtrl', EditMealcategoriesCtrl);\n\n  /** @ngInject */\n  function EditMealcategoriesCtrl($scope, fileReader, $filter, $uibModal, $rootScope, $compile, MealcategoriesFactory, $timeout, $stateParams, $state, $injector, Notification) {\n        $scope.pageName = 'Edit Meal Category';\n        $scope.btnName = 'Update';\n        $scope.isSubmitted = false;\n        $scope.urlID = $stateParams.id;\n\n        $scope.statusData = [\n            { 'value': 0, 'text': 'Inactive' },\n            { 'value': 1, 'text': 'Active' }\n        ];\n   \n        var $validationProvider = $injector.get('$validation');\n        $scope.errorMessage = MealcategoriesFactory.validation;\n\n        MealcategoriesFactory.getRecord($scope.urlID).success(function(response) {\n            $scope.formscope = response.data;\n        }).error(function(error) {\n            Notification.error(error.error);\n            $state.go('mealsvalue.mealcategories.list');\n        });\n\n        $scope.add_data = function(form) {\n            $validationProvider.validate(form).success(function() {\n                $scope.isSubmitted = true;\n                $scope.formscope._method = 'PUT';\n                \n                MealcategoriesFactory.updateRecord($scope.urlID, $scope.formscope).success(function(res) {\n                    Notification.success(res.success);\n                    $state.go('mealsvalue.mealcategories.list');\n                    $scope.isSubmitted = false;\n                }).error(function(err) {\n                    Notification.error(err.error);\n                    $scope.isSubmitted = false;\n                });\n            }).error(function() {\n                $scope.isSubmitted = false;\n            });\n        };\n  }\n})();\n\n/**\n * @author v.lugovsky\n * created on 16.12.2015\n */\n(function () {\n  'use strict';\n\n  angular.module('BlurAdmin.pages.categories.mealcategories')\n    .controller('ListMealcategoriesCtrl', ListMealcategoriesCtrl);\n\n  /** @ngInject */\n  function ListMealcategoriesCtrl($scope, fileReader, $filter, $uibModal, $rootScope, $compile, DTOptionsBuilder, DTColumnBuilder, MealcategoriesFactory, $timeout, Notification) {\n      $scope.dtInstance = {};\n\n      $scope.reloadData = function() {\n          $scope.dtInstance.rerender();\n      };\n\n      $scope.createdRow = function(row, data, dataIndex) {\n           // Recompiling so we can bind Angular directive to the DT\n           $compile(angular.element(row).contents())($scope);\n      };\n\n      $scope.actionRoles = function(data, type, full) {\n          return \"<a ui-sref='mealsvalue.mealcategories.edit({ id: \" + full.id + \" })'><i class='fa fa-edit'></i></a>\";\n      };\n\n      $scope.statusAction = function(data, type, full) {\n        if(data.status == '0') {\n            return '<small class=\"label label-danger\">Inactive</small>';\n        }\n        else {\n            return '<small class=\"label label-success\">Active</small>';\n        }\n    };\n\n      $scope.indexNumber = function(data, type, full, row) {\n            var i = Number(row.row) + Number(1);\n            var ind = row.settings._iDisplayStart + i;\n            return \"<span>\" + ind + \"</span>\";\n        };\n      \n      $scope.dtOptions = DTOptionsBuilder.newOptions()\n            .withDataProp('data')\n            .withOption('ajax', function(data, callback, settings) {\n                // map your server's response to the DataTables format and pass it to\n                MealcategoriesFactory.showDataTable(data).success(function(res) {\n                    if (res.error)\n                        $scope.reloadData();\n                    else\n                        callback(res);\n                }).error(function(err) {\n                    if (err)\n                        $scope.reloadData();\n                });\n            })\n            .withOption('processing', true)\n            .withOption('serverSide', true)\n            .withPaginationType('simple_numbers')\n            .withOption('order', [1, 'asc'])\n            .withDOM('lftip')\n            .withOption('searchDelay', 500)\n            .withOption('createdRow', $scope.createdRow);\n\n        $scope.dtColumns = [\n            DTColumnBuilder.newColumn('id').withTitle('No').withOption('searchable', false).renderWith($scope.indexNumber).withClass('table-index'),\n            DTColumnBuilder.newColumn('name').withTitle('Name').withOption('searchable', true),\n            // DTColumnBuilder.newColumn('description').withTitle('Description').withOption('searchable', false).notSortable(),\n            DTColumnBuilder.newColumn(null).withTitle('Status').withOption('searchable', false).notSortable().renderWith($scope.statusAction),\n            DTColumnBuilder.newColumn(null).withTitle('Action').withOption('searchable', false).notSortable().renderWith($scope.actionRoles)\n        ];\n  }\n})();\n/**\n * @author v.lugovsky\n * created on 16.12.2015\n */\n(function () {\n  'use strict';\n\n  angular.module('BlurAdmin.pages.categories.meals')\n    .controller('AddMealsCtrl', AddMealsCtrl);\n\n  /** @ngInject */\n  function AddMealsCtrl($scope, fileReader, $filter, $uibModal, $rootScope, $compile, MealsFactory, $timeout, $stateParams, $state, $injector, Notification) {\n        $scope.formscope = {status:1};\n        $scope.pageName = 'Add Meal';\n        $scope.btnName = 'Add';\n        $scope.isSubmitted = false;\n        \n        $scope.statusData = [\n            { 'value': 0, 'text': 'Inactive' },\n            { 'value': 1, 'text': 'Active' }\n        ];\n\n        var $validationProvider = $injector.get('$validation');\n        $scope.errorMessage = MealsFactory.validation;\n\n        $scope.add_data = function(form) {\n            $validationProvider.validate(form).success(function() {\n                $scope.isSubmitted = true;\n                \n                MealsFactory.addRecord($scope.formscope).success(function(res) {\n                    Notification.success(res.success);\n                    $state.go('mealsvalue.meals.list');\n                    $scope.isSubmitted = false;\n                }).error(function(err) {\n                    Notification.error(err.error);\n                    $scope.isSubmitted = false;\n                });\n            }).error(function() {\n                $scope.isSubmitted = false;\n            });\n        };\n  }\n})();\n\n/**\n * @author v.lugovsky\n * created on 16.12.2015\n */\n(function () {\n  'use strict';\n\n  angular.module('BlurAdmin.pages.categories.meals')\n    .controller('EditMealsCtrl', EditMealsCtrl);\n\n  /** @ngInject */\n  function EditMealsCtrl($scope, fileReader, $filter, $uibModal, $rootScope, $compile, MealsFactory, $timeout, $stateParams, $state, $injector, Notification) {\n        $scope.pageName = 'Edit Meal';\n        $scope.btnName = 'Update';\n        $scope.isSubmitted = false;\n        $scope.urlID = $stateParams.id;\n\n        $scope.statusData = [\n            { 'value': 0, 'text': 'Inactive' },\n            { 'value': 1, 'text': 'Active' }\n        ];\n   \n        var $validationProvider = $injector.get('$validation');\n        $scope.errorMessage = MealsFactory.validation;\n\n        MealsFactory.getRecord($scope.urlID).success(function(response) {\n            $scope.formscope = response.data;\n        }).error(function(error) {\n            Notification.error(error.error);\n            $state.go('mealsvalue.meals.list');\n        });\n\n        $scope.add_data = function(form) {\n            $validationProvider.validate(form).success(function() {\n                $scope.isSubmitted = true;\n                $scope.formscope._method = 'PUT';\n                \n                MealsFactory.updateRecord($scope.urlID, $scope.formscope).success(function(res) {\n                    Notification.success(res.success);\n                    $state.go('mealsvalue.meals.list');\n                    $scope.isSubmitted = false;\n                }).error(function(err) {\n                    Notification.error(err.error);\n                    $scope.isSubmitted = false;\n                });\n            }).error(function() {\n                $scope.isSubmitted = false;\n            });\n        };\n  }\n})();\n\n/**\n * @author v.lugovsky\n * created on 16.12.2015\n */\n(function () {\n  'use strict';\n\n  angular.module('BlurAdmin.pages.categories.meals')\n    .controller('ListMealsCtrl', ListMealsCtrl);\n\n  /** @ngInject */\n  function ListMealsCtrl($scope, $route, $state, fileReader, $filter, $uibModal, $rootScope, $compile, DTOptionsBuilder, DTColumnBuilder, MealsFactory, $timeout, Notification) {\n      $scope.dtInstance = {};\n\n      $scope.reloadData = function() {\n          $scope.dtInstance.rerender();\n      };\n\n      $scope.createdRow = function(row, data, dataIndex) {\n           // Recompiling so we can bind Angular directive to the DT\n           $compile(angular.element(row).contents())($scope);\n      };\n\n      $scope.deleteRecord = function(id) {\n        MealsFactory.deleteRecord(id).success(function (res) {\n            Notification.success(res.success);\n            $state.reload();\n        }).error(function (err) {\n            Notification.error(err.error);\n        });\n      }\n\n      $scope.actionRoles = function(data, type, full) {\n          return \"<a ng-if=\\\"havePermission('meals','update');\\\" ui-sref='mealsvalue.meals.edit({ id: \" + full.id + \" })'><i class='fa fa-edit'></i></a> <a ng-if=\\\"havePermission('meals','delete');\\\" ng-confirm-click='Are you sure to delete this meal?' confirmed-click='deleteRecord( \" + full.id + \" )'><i class='fa fa-trash'></i></a>\";\n      };\n\n      $scope.statusAction = function(data, type, full) {\n        if(data.status == '0') {\n            return '<small class=\"label label-danger\">Inactive</small>';\n        }\n        else {\n            return '<small class=\"label label-success\">Active</small>';\n        }\n      };\n\n      $scope.indexNumber = function(data, type, full, row) {\n            var i = Number(row.row) + Number(1);\n            var ind = row.settings._iDisplayStart + i;\n            return \"<span>\" + ind + \"</span>\";\n      };\n      \n      $scope.dtOptions = DTOptionsBuilder.newOptions()\n            .withDataProp('data')\n            .withOption('ajax', function(data, callback, settings) {\n                // map your server's response to the DataTables format and pass it to\n                MealsFactory.showDataTable(data).success(function(res) {\n                    if (res.error)\n                        $scope.reloadData();\n                    else\n                        callback(res);\n                }).error(function(err) {\n                    if (err)\n                        $scope.reloadData();\n                });\n            })\n            .withOption('processing', true)\n            .withOption('serverSide', true)\n            .withPaginationType('simple_numbers')\n            .withOption('order', [1, 'asc'])\n            .withDOM('lftip')\n            .withOption('searchDelay', 500)\n            .withOption('createdRow', $scope.createdRow);\n\n        $scope.dtColumns = [\n            DTColumnBuilder.newColumn('id').withTitle('No').withOption('searchable', false).renderWith($scope.indexNumber).withClass('table-index'),\n            DTColumnBuilder.newColumn('name').withTitle('Name').withOption('searchable', true),\n            // DTColumnBuilder.newColumn('description').withTitle('Description').withOption('searchable', false).notSortable(),\n            DTColumnBuilder.newColumn(null).withTitle('Status').withOption('searchable', false).notSortable().renderWith($scope.statusAction),\n            DTColumnBuilder.newColumn(null).withTitle('Action').withOption('searchable', false).notSortable().renderWith($scope.actionRoles)\n        ];\n  }\n})();\n/**\n * @author v.lugovsky\n * created on 16.12.2015\n */\n(function () {\n  'use strict';\n\n  angular.module('BlurAdmin.pages.categories.mealservicelocations')\n    .controller('AddMealservicelocationsCtrl', AddMealservicelocationsCtrl);\n\n  /** @ngInject */\n  function AddMealservicelocationsCtrl($scope, fileReader, $filter, $uibModal, $rootScope, $compile, MealservicelocationsFactory, $timeout, $stateParams, $state, $injector, Notification) {\n        $scope.formscope = {status:1};\n        $scope.pageName = 'Add Meal Service Location';\n        $scope.btnName = 'Add';\n        $scope.isSubmitted = false;\n        \n        $scope.statusData = [\n            { 'value': 0, 'text': 'Inactive' },\n            { 'value': 1, 'text': 'Active' }\n        ];\n\n        var $validationProvider = $injector.get('$validation');\n        $scope.errorMessage = MealservicelocationsFactory.validation;\n\n        $scope.add_data = function(form) {\n            $validationProvider.validate(form).success(function() {\n                $scope.isSubmitted = true;\n                \n                MealservicelocationsFactory.addRecord($scope.formscope).success(function(res) {\n                    Notification.success(res.success);\n                    $state.go('mealsvalue.mealservicelocations.list');\n                    $scope.isSubmitted = false;\n                }).error(function(err) {\n                    Notification.error(err.error);\n                    $scope.isSubmitted = false;\n                });\n            }).error(function() {\n                $scope.isSubmitted = false;\n            });\n        };\n  }\n})();\n\n\n\n/**\n * @author v.lugovsky\n * created on 16.12.2015\n */\n(function () {\n  'use strict';\n\n  angular.module('BlurAdmin.pages.categories.mealservicelocations')\n    .controller('EditMealservicelocationsCtrl', EditMealservicelocationsCtrl);\n\n  /** @ngInject */\n  function EditMealservicelocationsCtrl($scope, fileReader, $filter, $uibModal, $rootScope, $compile, MealservicelocationsFactory, $timeout, $stateParams, $state, $injector, Notification) {\n        $scope.pageName = 'Edit Meal Service Location';\n        $scope.btnName = 'Update';\n        $scope.isSubmitted = false;\n        $scope.urlID = $stateParams.id;\n\n        $scope.statusData = [\n            { 'value': 0, 'text': 'Inactive' },\n            { 'value': 1, 'text': 'Active' }\n        ];\n   \n        var $validationProvider = $injector.get('$validation');\n        $scope.errorMessage = MealservicelocationsFactory.validation;\n\n        MealservicelocationsFactory.getRecord($scope.urlID).success(function(response) {\n            $scope.formscope = response.data;\n        }).error(function(error) {\n            Notification.error(error.error);\n            $state.go('mealsvalue.mealservicelocations.list');\n        });\n\n        $scope.add_data = function(form) {\n            $validationProvider.validate(form).success(function() {\n                $scope.isSubmitted = true;\n                $scope.formscope._method = 'PUT';\n                \n                MealservicelocationsFactory.updateRecord($scope.urlID, $scope.formscope).success(function(res) {\n                    Notification.success(res.success);\n                    $state.go('mealsvalue.mealservicelocations.list');\n                    $scope.isSubmitted = false;\n                }).error(function(err) {\n                    Notification.error(err.error);\n                    $scope.isSubmitted = false;\n                });\n            }).error(function() {\n                $scope.isSubmitted = false;\n            });\n        };\n  }\n})();\n\n/**\n * @author v.lugovsky\n * created on 16.12.2015\n */\n(function () {\n  'use strict';\n\n  angular.module('BlurAdmin.pages.categories.mealservicelocations')\n    .controller('ListMealservicelocationsCtrl', ListMealservicelocationsCtrl);\n\n  /** @ngInject */\n  function ListMealservicelocationsCtrl($scope, $state, $route, fileReader, $filter, $uibModal, $rootScope, $compile, DTOptionsBuilder, DTColumnBuilder, MealservicelocationsFactory, $timeout, Notification) {\n      $scope.dtInstance = {};\n\n      $scope.reloadData = function() {\n          $scope.dtInstance.rerender();\n      };\n\n      $scope.createdRow = function(row, data, dataIndex) {\n           // Recompiling so we can bind Angular directive to the DT\n           $compile(angular.element(row).contents())($scope);\n      };\n\n      $scope.deleteRecord = function(id) {\n        MealservicelocationsFactory.deleteRecord(id).success(function (res) {\n            Notification.success(res.success);\n            $state.reload();\n        }).error(function (err) {\n            Notification.error(err.error);\n        });\n      }\n\n      $scope.actionRoles = function(data, type, full) {\n          return \"<a  ng-if=\\\"havePermission('mealservicelocations','update');\\\" ui-sref='mealsvalue.mealservicelocations.edit({ id: \" + full.id + \" })'><i class='fa fa-edit'></i></a> <a ng-if=\\\"havePermission('mealservicelocations','delete');\\\" ng-confirm-click='Are you sure to delete this service location?' confirmed-click='deleteRecord( \" + full.id + \" )'><i class='fa fa-trash'></i></a>\";\n      };\n\n      $scope.statusAction = function(data, type, full) {\n        if(data.status == '0') {\n            return '<small class=\"label label-danger\">Inactive</small>';\n        }\n        else {\n            return '<small class=\"label label-success\">Active</small>';\n        }\n      };\n\n      $scope.indexNumber = function(data, type, full, row) {\n            var i = Number(row.row) + Number(1);\n            var ind = row.settings._iDisplayStart + i;\n            return \"<span>\" + ind + \"</span>\";\n        };\n      \n      $scope.dtOptions = DTOptionsBuilder.newOptions()\n            .withDataProp('data')\n            .withOption('ajax', function(data, callback, settings) {\n                // map your server's response to the DataTables format and pass it to\n                MealservicelocationsFactory.showDataTable(data).success(function(res) {\n                    if (res.error)\n                        $scope.reloadData();\n                    else\n                        callback(res);\n                }).error(function(err) {\n                    if (err)\n                        $scope.reloadData();\n                });\n            })\n            .withOption('processing', true)\n            .withOption('serverSide', true)\n            .withPaginationType('simple_numbers')\n            .withOption('order', [1, 'asc'])\n            .withDOM('lftip')\n            .withOption('searchDelay', 500)\n            .withOption('createdRow', $scope.createdRow);\n\n        $scope.dtColumns = [\n            DTColumnBuilder.newColumn('id').withTitle('No').withOption('searchable', false).renderWith($scope.indexNumber).withClass('table-index'),\n            DTColumnBuilder.newColumn('name').withTitle('Name').withOption('searchable', true),\n            // DTColumnBuilder.newColumn('description').withTitle('Description').withOption('searchable', false).notSortable(),\n            DTColumnBuilder.newColumn(null).withTitle('Status').withOption('searchable', false).notSortable().renderWith($scope.statusAction),\n            DTColumnBuilder.newColumn(null).withTitle('Action').withOption('searchable', false).notSortable().renderWith($scope.actionRoles)\n        ];\n  }\n})();\n/**\n * @author v.lugovsky\n * created on 16.12.2015\n */\n(function () {\n  'use strict';\n\n  angular.module('BlurAdmin.pages.categories.mealservicetypes')\n    .controller('AddMealservicetypesCtrl', AddMealservicetypesCtrl);\n\n  /** @ngInject */\n  function AddMealservicetypesCtrl($scope, fileReader, $filter, $uibModal, $rootScope, $compile, MealservicetypesFactory, $timeout, $stateParams, $state, $injector, Notification) {\n        $scope.formscope = {status:1, type: 1};\n        $scope.pageName = 'Add Meal Service Type';\n        $scope.btnName = 'Add';\n        $scope.isSubmitted = false;\n        \n        $scope.statusData = [\n            { 'value': 0, 'text': 'Inactive' },\n            { 'value': 1, 'text': 'Active' }\n        ];\n\n        var $validationProvider = $injector.get('$validation');\n        $scope.errorMessage = MealservicetypesFactory.validation;\n\n        $scope.add_data = function(form) {\n            $validationProvider.validate(form).success(function() {\n                $scope.isSubmitted = true;\n                \n                MealservicetypesFactory.addRecord($scope.formscope).success(function(res) {\n                    Notification.success(res.success);\n                    $state.go('mealsvalue.mealservicetypes.list');\n                    $scope.isSubmitted = false;\n                }).error(function(err) {\n                    Notification.error(err.error);\n                    $scope.isSubmitted = false;\n                });\n            }).error(function() {\n                $scope.isSubmitted = false;\n            });\n        };\n  }\n})();\n\n\n\n/**\n * @author v.lugovsky\n * created on 16.12.2015\n */\n(function () {\n  'use strict';\n\n  angular.module('BlurAdmin.pages.categories.mealservicetypes')\n    .controller('EditMealservicetypesCtrl', EditMealservicetypesCtrl);\n\n  /** @ngInject */\n  function EditMealservicetypesCtrl($scope, fileReader, $filter, $uibModal, $rootScope, $compile, MealservicetypesFactory, $timeout, $stateParams, $state, $injector, Notification) {\n        $scope.pageName = 'Edit Meal Service Type';\n        $scope.btnName = 'Update';\n        $scope.isSubmitted = false;\n        $scope.urlID = $stateParams.id;\n\n        $scope.statusData = [\n            { 'value': 0, 'text': 'Inactive' },\n            { 'value': 1, 'text': 'Active' }\n        ];\n   \n        var $validationProvider = $injector.get('$validation');\n        $scope.errorMessage = MealservicetypesFactory.validation;\n\n        MealservicetypesFactory.getRecord($scope.urlID).success(function(response) {\n            $scope.formscope = response.data;\n        }).error(function(error) {\n            Notification.error(error.error);\n            $state.go('mealsvalue.mealservicetypes.list');\n        });\n\n        $scope.add_data = function(form) {\n            $validationProvider.validate(form).success(function() {\n                $scope.isSubmitted = true;\n                $scope.formscope._method = 'PUT';\n                \n                MealservicetypesFactory.updateRecord($scope.urlID, $scope.formscope).success(function(res) {\n                    Notification.success(res.success);\n                    $state.go('mealsvalue.mealservicetypes.list');\n                    $scope.isSubmitted = false;\n                }).error(function(err) {\n                    Notification.error(err.error);\n                    $scope.isSubmitted = false;\n                });\n            }).error(function() {\n                $scope.isSubmitted = false;\n            });\n        };\n  }\n})();\n\n/**\n * @author v.lugovsky\n * created on 16.12.2015\n */\n(function() {\n    'use strict';\n\n    angular.module('BlurAdmin.pages.categories.mealservicetypes')\n        .controller('ListMealservicetypesCtrl', ListMealservicetypesCtrl);\n\n    /** @ngInject */\n    function ListMealservicetypesCtrl($scope, $state, fileReader, $filter, $uibModal, $rootScope, $compile, DTOptionsBuilder, DTColumnBuilder, MealservicetypesFactory, $timeout, Notification) {\n        $scope.dtInstance = {};\n\n        $scope.reloadData = function() {\n            $scope.dtInstance.rerender();\n        };\n\n        $scope.createdRow = function(row, data, dataIndex) {\n            // Recompiling so we can bind Angular directive to the DT\n            $compile(angular.element(row).contents())($scope);\n        };\n\n        $scope.deleteRecord = function(id) {\n            MealservicetypesFactory.deleteRecord(id).success(function (res) {\n                Notification.success(res.success);\n                $state.reload();\n            }).error(function (err) {\n                Notification.error(err.error);\n            });\n        }\n\n        $scope.actionRoles = function(data, type, full) {\n            return \"<a ng-if=\\\"havePermission('mealservicetypes','update');\\\" ui-sref='mealsvalue.mealservicetypes.edit({ id: \" + full.id + \" })'><i class='fa fa-edit'></i></a> <a ng-if=\\\"havePermission('mealservicetypes','delete');\\\" ng-confirm-click='Are you sure to delete this service type?' confirmed-click='deleteRecord( \" + full.id + \" )'><i class='fa fa-trash'></i></a>\";\n        };\n\n        $scope.statusAction = function(data, type, full) {\n            if (data.status == '0') {\n                return '<small class=\"label label-danger\">Inactive</small>';\n            } else {\n                return '<small class=\"label label-success\">Active</small>';\n            }\n        };\n\n        $scope.typeName = function(data, type, full) {\n            if (data.type == '1') {\n                return 'Free';\n            } else {\n                return 'Paid';\n            }\n        };\n\n        $scope.indexNumber = function(data, type, full, row) {\n            var i = Number(row.row) + Number(1);\n            var ind = row.settings._iDisplayStart + i;\n            return \"<span>\" + ind + \"</span>\";\n        };\n        \n\n        $scope.dtOptions = DTOptionsBuilder.newOptions()\n            .withDataProp('data')\n            .withOption('ajax', function(data, callback, settings) {\n                // map your server's response to the DataTables format and pass it to\n                MealservicetypesFactory.showDataTable(data).success(function(res) {\n                    if (res.error)\n                        $scope.reloadData();\n                    else\n                        callback(res);\n                }).error(function(err) {\n                    if (err)\n                        $scope.reloadData();\n                });\n            })\n            .withOption('processing', true)\n            .withOption('serverSide', true)\n            .withPaginationType('simple_numbers')\n            .withOption('order', [1, 'asc'])\n            .withDOM('lftip')\n            .withOption('searchDelay', 500)\n            .withOption('createdRow', $scope.createdRow);\n\n        $scope.dtColumns = [\n            DTColumnBuilder.newColumn('id').withTitle('No').withOption('searchable', false).renderWith($scope.indexNumber).withClass('table-index'),\n            DTColumnBuilder.newColumn('name').withTitle('Name').withOption('searchable', true),\n            DTColumnBuilder.newColumn('type').withTitle('Type').withOption('searchable', true),\n            DTColumnBuilder.newColumn('cost').withTitle('Cost').withOption('searchable', true),\n            DTColumnBuilder.newColumn(null).withTitle('Status').withOption('searchable', false).notSortable().renderWith($scope.statusAction),\n            DTColumnBuilder.newColumn(null).withTitle('Action').withOption('searchable', false).notSortable().renderWith($scope.actionRoles)\n        ];\n    }\n})();\n/**\n * @author v.lugovsky\n * created on 16.12.2015\n */\n(function () {\n  'use strict';\n\n  angular.module('BlurAdmin.pages.categories.momentos')\n    .controller('AddMomentosCtrl', AddMomentosCtrl);\n\n  /** @ngInject */\n  function AddMomentosCtrl($scope, fileReader, $filter, $uibModal, $rootScope, $compile, MomentosFactory, $timeout, $stateParams, $state, $injector, Notification) {\n        $scope.formscope = {status:1};\n        $scope.pageName = 'Add Momento';\n        $scope.btnName = 'Add';\n        $scope.isSubmitted = false;\n        \n        $scope.statusData = [\n            { 'value': 0, 'text': 'Inactive' },\n            { 'value': 1, 'text': 'Active' }\n        ];\n\n        var $validationProvider = $injector.get('$validation');\n        $scope.errorMessage = MomentosFactory.validation;\n\n        $scope.add_data = function(form) {\n            $validationProvider.validate(form).success(function() {\n                $scope.isSubmitted = true;\n                \n                MomentosFactory.addRecord($scope.formscope).success(function(res) {\n                    Notification.success(res.success);\n                    $state.go('categories.momentos.list');\n                    $scope.isSubmitted = false;\n                }).error(function(err) {\n                    Notification.error(err.error);\n                    $scope.isSubmitted = false;\n                });\n            }).error(function() {\n                $scope.isSubmitted = false;\n            });\n        };\n  }\n})();\n\n/**\n * @author v.lugovsky\n * created on 16.12.2015\n */\n(function () {\n  'use strict';\n\n  angular.module('BlurAdmin.pages.categories.momentos')\n    .controller('EditMomentosCtrl', EditMomentosCtrl);\n\n  /** @ngInject */\n  function EditMomentosCtrl($scope, fileReader, $filter, $uibModal, $rootScope, $compile, MomentosFactory, $timeout, $stateParams, $state, $injector, Notification) {\n        $scope.pageName = 'Edit Momento';\n        $scope.btnName = 'Update';\n        $scope.isSubmitted = false;\n        $scope.urlID = $stateParams.id;\n\n        $scope.statusData = [\n            { 'value': 0, 'text': 'Inactive' },\n            { 'value': 1, 'text': 'Active' }\n        ];\n   \n        var $validationProvider = $injector.get('$validation');\n        $scope.errorMessage = MomentosFactory.validation;\n\n        MomentosFactory.getRecord($scope.urlID).success(function(response) {\n            $scope.formscope = response.data;\n        }).error(function(error) {\n            Notification.error(error.error);\n            $state.go('categories.momentos.list');\n        });\n\n        $scope.add_data = function(form) {\n            $validationProvider.validate(form).success(function() {\n                $scope.isSubmitted = true;\n                $scope.formscope._method = 'PUT';\n                \n                MomentosFactory.updateRecord($scope.urlID, $scope.formscope).success(function(res) {\n                    Notification.success(res.success);\n                    $state.go('categories.momentos.list');\n                    $scope.isSubmitted = false;\n                }).error(function(err) {\n                    Notification.error(err.error);\n                    $scope.isSubmitted = false;\n                });\n            }).error(function() {\n                $scope.isSubmitted = false;\n            });\n        };\n  }\n})();\n\n/**\n * @author v.lugovsky\n * created on 16.12.2015\n */\n(function () {\n  'use strict';\n\n  angular.module('BlurAdmin.pages.categories.momentos')\n    .controller('ListMomentosCtrl', ListMomentosCtrl);\n\n  /** @ngInject */\n  function ListMomentosCtrl($scope, $state, fileReader, $filter, $uibModal, $rootScope, $compile, DTOptionsBuilder, DTColumnBuilder, MomentosFactory, $timeout, Notification) {\n      $scope.dtInstance = {};\n\n      $scope.reloadData = function() {\n          $scope.dtInstance.rerender();\n      };\n\n      $scope.createdRow = function(row, data, dataIndex) {\n           // Recompiling so we can bind Angular directive to the DT\n           $compile(angular.element(row).contents())($scope);\n      };\n\n      $scope.deleteRecord = function(id) {\n        MomentosFactory.deleteRecord(id).success(function (res) {\n            Notification.success(res.success);\n            $state.reload();\n        }).error(function (err) {\n            Notification.error(err.error);\n        });\n      }\n\n      $scope.actionRoles = function(data, type, full) {\n          return \"<a ng-if=\\\"havePermission('momentos','update');\\\" ui-sref='categories.momentos.edit({ id: \" + full.id + \" })'><i class='fa fa-edit'></i></a> <a ng-if=\\\"havePermission('momentos','delete');\\\" ng-confirm-click='Are you sure to delete this momentos?' confirmed-click='deleteRecord( \" + full.id + \" )'><i class='fa fa-trash'></i></a>\";\n      };\n\n        $scope.statusAction = function(data, type, full) {\n            if(data.status == '0') {\n                return '<small class=\"label label-danger\">Inactive</small>';\n            }\n            else {\n                return '<small class=\"label label-success\">Active</small>';\n            }\n        };\n\n      $scope.indexNumber = function(data, type, full, row) {\n            var i = Number(row.row) + Number(1);\n            var ind = row.settings._iDisplayStart + i;\n            return \"<span>\" + ind + \"</span>\";\n        };\n      \n      $scope.dtOptions = DTOptionsBuilder.newOptions()\n            .withDataProp('data')\n            .withOption('ajax', function(data, callback, settings) {\n                // map your server's response to the DataTables format and pass it to\n                MomentosFactory.showDataTable(data).success(function(res) {\n                    if (res.error)\n                        $scope.reloadData();\n                    else\n                        callback(res);\n                }).error(function(err) {\n                    if (err)\n                        $scope.reloadData();\n                });\n            })\n            .withOption('processing', true)\n            .withOption('serverSide', true)\n            .withPaginationType('simple_numbers')\n            .withOption('order', [1, 'asc'])\n            .withDOM('lftip')\n            .withOption('searchDelay', 500)\n            .withOption('createdRow', $scope.createdRow);\n\n        $scope.dtColumns = [\n            DTColumnBuilder.newColumn('id').withTitle('No').withOption('searchable', false).renderWith($scope.indexNumber).withClass('table-index'),\n            DTColumnBuilder.newColumn('name').withTitle('Name').withOption('searchable', true),\n            // DTColumnBuilder.newColumn('description').withTitle('Description').withOption('searchable', false).notSortable(),\n            DTColumnBuilder.newColumn(null).withTitle('Status').withOption('searchable', false).notSortable().renderWith($scope.statusAction),\n            DTColumnBuilder.newColumn(null).withTitle('Action').withOption('searchable', false).notSortable().renderWith($scope.actionRoles)\n        ];\n  }\n})();\n/**\n * @author v.lugovsky\n * created on 16.12.2015\n */\n(function () {\n  'use strict';\n\n  angular.module('BlurAdmin.pages.categories.organizations')\n    .controller('AddOrganizationsCtrl', AddOrganizationsCtrl);\n\n  /** @ngInject */\n  function AddOrganizationsCtrl($scope, fileReader, $filter, $uibModal, $rootScope, $compile, OrganizationsFactory, $timeout, $stateParams, $state, $injector, Notification) {\n        $scope.formscope = {status:1};\n        $scope.pageName = 'Add Organization Type';\n        $scope.btnName = 'Add';\n        $scope.isSubmitted = false;\n        \n        $scope.statusData = [\n            { 'value': 0, 'text': 'Inactive' },\n            { 'value': 1, 'text': 'Active' }\n        ];\n\n        var $validationProvider = $injector.get('$validation');\n        $scope.errorMessage = OrganizationsFactory.validation;\n\n        $scope.add_data = function(form) {\n            $validationProvider.validate(form).success(function() {\n                $scope.isSubmitted = true;\n                \n                OrganizationsFactory.addRecord($scope.formscope).success(function(res) {\n                    Notification.success(res.success);\n                    $state.go('categories.organizations.list');\n                    $scope.isSubmitted = false;\n                }).error(function(err) {\n                    Notification.error(err.error);\n                    $scope.isSubmitted = false;\n                });\n            }).error(function() {\n                $scope.isSubmitted = false;\n            });\n        };\n  }\n})();\n\n\n\n/**\n * @author v.lugovsky\n * created on 16.12.2015\n */\n(function () {\n  'use strict';\n\n  angular.module('BlurAdmin.pages.categories.organizations')\n    .controller('EditOrganizationsCtrl', EditOrganizationsCtrl);\n\n  /** @ngInject */\n  function EditOrganizationsCtrl($scope, fileReader, $filter, $uibModal, $rootScope, $compile, OrganizationsFactory, $timeout, $stateParams, $state, $injector, Notification) {\n        $scope.pageName = 'Edit Organization Type';\n        $scope.btnName = 'Update';\n        $scope.isSubmitted = false;\n        $scope.urlID = $stateParams.id;\n\n        $scope.statusData = [\n            { 'value': 0, 'text': 'Inactive' },\n            { 'value': 1, 'text': 'Active' }\n        ];\n   \n        var $validationProvider = $injector.get('$validation');\n        $scope.errorMessage = OrganizationsFactory.validation;\n\n        OrganizationsFactory.getRecord($scope.urlID).success(function(response) {\n            $scope.formscope = response.data;\n        }).error(function(error) {\n            Notification.error(error.error);\n            $state.go('categories.organizations.list');\n        });\n\n        $scope.add_data = function(form) {\n            $validationProvider.validate(form).success(function() {\n                $scope.isSubmitted = true;\n                $scope.formscope._method = 'PUT';\n\n                OrganizationsFactory.updateRecord($scope.urlID, $scope.formscope).success(function(res) {\n                    Notification.success(res.success);\n                    $state.go('categories.organizations.list');\n                    $scope.isSubmitted = false;\n                }).error(function(err) {\n                    Notification.error(err.error);\n                    $scope.isSubmitted = false;\n                });\n            }).error(function() {\n                $scope.isSubmitted = false;\n            });\n        };\n  }\n})();\n\n/**\n * @author v.lugovsky\n * created on 16.12.2015\n */\n(function () {\n  'use strict';\n\n  angular.module('BlurAdmin.pages.categories.organizations')\n    .controller('ListOrganizationsCtrl', ListOrganizationsCtrl);\n\n  /** @ngInject */\n  function ListOrganizationsCtrl($scope, $state, fileReader, $filter, $uibModal, $rootScope, $compile, DTOptionsBuilder, DTColumnBuilder, OrganizationsFactory, $timeout, Notification) {\n      $scope.dtInstance = {};\n\n      $scope.reloadData = function() {\n          $scope.dtInstance.rerender();\n      };\n\n      $scope.createdRow = function(row, data, dataIndex) {\n           // Recompiling so we can bind Angular directive to the DT\n           $compile(angular.element(row).contents())($scope);\n      };\n\n      $scope.deleteRecord = function(id) {\n        OrganizationsFactory.deleteRecord(id).success(function (res) {\n            Notification.success(res.success);\n            $state.reload();\n        }).error(function (err) {\n            Notification.error(err.error);\n        });\n      }\n\n      $scope.actionRoles = function(data, type, full) {\n          return \"<a ng-if=\\\"havePermission('organizations','update');\\\" ui-sref='categories.organizations.edit({ id: \" + full.id + \" })'><i class='fa fa-edit'></i></a> <a ng-if=\\\"havePermission('organizations','delete');\\\" ng-confirm-click='Are you sure to delete this organization type?' confirmed-click='deleteRecord( \" + full.id + \" )'><i class='fa fa-trash'></i></a>\";\n      };\n\n      $scope.statusAction = function(data, type, full) {\n        if(data.status == '0') {\n            return '<small class=\"label label-danger\">Inactive</small>';\n        }\n        else {\n            return '<small class=\"label label-success\">Active</small>';\n        }\n    };\n\n      $scope.indexNumber = function(data, type, full, row) {\n            var i = Number(row.row) + Number(1);\n            var ind = row.settings._iDisplayStart + i;\n            return \"<span>\" + ind + \"</span>\";\n        };\n      \n      $scope.dtOptions = DTOptionsBuilder.newOptions()\n            .withDataProp('data')\n            .withOption('ajax', function(data, callback, settings) {\n                // map your server's response to the DataTables format and pass it to\n                OrganizationsFactory.showDataTable(data).success(function(res) {\n                    if (res.error)\n                        $scope.reloadData();\n                    else\n                        callback(res);\n                }).error(function(err) {\n                    if (err)\n                        $scope.reloadData();\n                });\n            })\n            .withOption('processing', true)\n            .withOption('serverSide', true)\n            .withPaginationType('simple_numbers')\n            .withOption('order', [1, 'asc'])\n            .withDOM('lftip')\n            .withOption('searchDelay', 500)\n            .withOption('createdRow', $scope.createdRow);\n\n        $scope.dtColumns = [\n            DTColumnBuilder.newColumn('id').withTitle('No').withOption('searchable', false).renderWith($scope.indexNumber).withClass('table-index'),\n            DTColumnBuilder.newColumn('name').withTitle('Name').withOption('searchable', true),\n            // DTColumnBuilder.newColumn('description').withTitle('Description').withOption('searchable', false).notSortable(),\n            DTColumnBuilder.newColumn(null).withTitle('Status').withOption('searchable', false).notSortable().renderWith($scope.statusAction),\n            DTColumnBuilder.newColumn(null).withTitle('Action').withOption('searchable', false).notSortable().renderWith($scope.actionRoles)\n        ];\n  }\n})();\n/**\n * @author v.lugovsky\n * created on 16.12.2015\n */\n(function () {\n  'use strict';\n\n  angular.module('BlurAdmin.pages.categories.tourtypes')\n    .controller('AddTourtypesCtrl', AddTourtypesCtrl);\n\n  /** @ngInject */\n  function AddTourtypesCtrl($scope, fileReader, $filter, $uibModal, $rootScope, $compile, TourtypesFactory, $timeout, $stateParams, $state, $injector, Notification) {\n        $scope.formscope = {status:1};\n        $scope.pageName = 'Add Tour Type';\n        $scope.btnName = 'Add';\n        $scope.isSubmitted = false;\n        \n        $scope.statusData = [\n            { 'value': 0, 'text': 'Inactive' },\n            { 'value': 1, 'text': 'Active' }\n        ];\n\n        var $validationProvider = $injector.get('$validation');\n        $scope.errorMessage = TourtypesFactory.validation;\n\n        $scope.add_data = function(form) {\n            $validationProvider.validate(form).success(function() {\n                $scope.isSubmitted = true;\n                \n                TourtypesFactory.addRecord($scope.formscope).success(function(res) {\n                    Notification.success(res.success);\n                    $state.go('categories.tourtypes.list');\n                    $scope.isSubmitted = false;\n                }).error(function(err) {\n                    Notification.error(err.error);\n                    $scope.isSubmitted = false;\n                });\n            }).error(function() {\n                $scope.isSubmitted = false;\n            });\n        };\n  }\n})();\n\n/**\n * @author v.lugovsky\n * created on 16.12.2015\n */\n(function () {\n  'use strict';\n\n  angular.module('BlurAdmin.pages.categories.tourtypes')\n    .controller('EditTourtypesCtrl', EditTourtypesCtrl);\n\n  /** @ngInject */\n  function EditTourtypesCtrl($scope, fileReader, $filter, $uibModal, $rootScope, $compile, TourtypesFactory, $timeout, $stateParams, $state, $injector, Notification) {\n        $scope.pageName = 'Edit Tour Type';\n        $scope.btnName = 'Update';\n        $scope.isSubmitted = false;\n        $scope.urlID = $stateParams.id;\n\n        $scope.statusData = [\n            { 'value': 0, 'text': 'Inactive' },\n            { 'value': 1, 'text': 'Active' }\n        ];\n   \n        var $validationProvider = $injector.get('$validation');\n        $scope.errorMessage = TourtypesFactory.validation;\n\n        TourtypesFactory.getRecord($scope.urlID).success(function(response) {\n            $scope.formscope = response.data;\n        }).error(function(error) {\n            Notification.error(error.error);\n            $state.go('categories.tourtypes.list');\n        });\n\n        $scope.add_data = function(form) {\n            $validationProvider.validate(form).success(function() {\n                $scope.isSubmitted = true;\n                $scope.formscope._method = 'PUT';\n                \n                TourtypesFactory.updateRecord($scope.urlID, $scope.formscope).success(function(res) {\n                    Notification.success(res.success);\n                    $state.go('categories.tourtypes.list');\n                    $scope.isSubmitted = false;\n                }).error(function(err) {\n                    Notification.error(err.error);\n                    $scope.isSubmitted = false;\n                });\n            }).error(function() {\n                $scope.isSubmitted = false;\n            });\n        };\n  }\n})();\n\n/**\n * @author v.lugovsky\n * created on 16.12.2015\n */\n(function () {\n  'use strict';\n\n  angular.module('BlurAdmin.pages.categories.tourtypes')\n    .controller('ListTourtypesCtrl', ListTourtypesCtrl);\n\n  /** @ngInject */\n  function ListTourtypesCtrl($scope, $state, fileReader, $filter, $uibModal, $rootScope, $compile, DTOptionsBuilder, DTColumnBuilder, TourtypesFactory, $timeout, Notification) {\n      $scope.dtInstance = {};\n\n      $scope.reloadData = function() {\n          $scope.dtInstance.rerender();\n      };\n\n      $scope.createdRow = function(row, data, dataIndex) {\n           // Recompiling so we can bind Angular directive to the DT\n           $compile(angular.element(row).contents())($scope);\n      };\n\n      $scope.deleteRecord = function(id) {\n        TourtypesFactory.deleteRecord(id).success(function (res) {\n            Notification.success(res.success);\n            $state.reload();\n        }).error(function (err) {\n            Notification.error(err.error);\n        });\n      }\n\n      $scope.actionRoles = function(data, type, full) {\n          return \"<a ng-if=\\\"havePermission('tourtypes','update');\\\" ui-sref='categories.tourtypes.edit({ id: \" + full.id + \" })'><i class='fa fa-edit'></i></a> <a ng-if=\\\"havePermission('tourtypes','delete');\\\" ng-confirm-click='Are you sure to delete this tour type?' confirmed-click='deleteRecord( \" + full.id + \" )'><i class='fa fa-trash'></i></a>\";\n      };\n\n        $scope.statusAction = function(data, type, full) {\n            if(data.status == '0') {\n                return '<small class=\"label label-danger\">Inactive</small>';\n            }\n            else {\n                return '<small class=\"label label-success\">Active</small>';\n            }\n        };\n\n      $scope.indexNumber = function(data, type, full, row) {\n            var i = Number(row.row) + Number(1);\n            var ind = row.settings._iDisplayStart + i;\n            return \"<span>\" + ind + \"</span>\";\n        };  \n\n        $scope.taksAction = function(data, type, full, row){\n            if(data.defaulttask.length == 0) {\n                var action =  \"Add\";\n            }\n            else {\n                var action = \"View\";\n            }\n            return \"<a ui-sref='categories.tourtypes.view({ id: \" + full.id + \" })'>\"+action+\"</a>\";\n        };\n      \n      $scope.dtOptions = DTOptionsBuilder.newOptions()\n            .withDataProp('data')\n            .withOption('ajax', function(data, callback, settings) {\n                // map your server's response to the DataTables format and pass it to\n                TourtypesFactory.showDataTable(data).success(function(res) {\n                    if (res.error)\n                        $scope.reloadData();\n                    else\n                        callback(res);\n                }).error(function(err) {\n                    if (err)\n                        $scope.reloadData();\n                });\n            })\n            .withOption('processing', true)\n            .withOption('serverSide', true)\n            .withPaginationType('simple_numbers')\n            .withOption('order', [1, 'asc'])\n            .withDOM('lftip')\n            .withOption('searchDelay', 500)\n            .withOption('createdRow', $scope.createdRow);\n\n        $scope.dtColumns = [\n            DTColumnBuilder.newColumn('id').withTitle('No').withOption('searchable', false).renderWith($scope.indexNumber).withClass('table-index'),\n            DTColumnBuilder.newColumn('name').withTitle('Name').withOption('searchable', true),\n            DTColumnBuilder.newColumn(null).withTitle('Default Task').withOption('searchable', true).renderWith($scope.taksAction),\n            DTColumnBuilder.newColumn(null).withTitle('Status').withOption('searchable', false).notSortable().renderWith($scope.statusAction),\n            DTColumnBuilder.newColumn(null).withTitle('Action').withOption('searchable', false).notSortable().renderWith($scope.actionRoles)\n        ];\n  }\n})();\n/**\n * @author v.lugovsky\n * created on 16.12.2015\n */\n(function () {\n  'use strict';\n\n  angular.module('BlurAdmin.pages.categories.tourtypes')\n    .controller('ViewTourtypesCtrl', ViewTourtypesCtrl);\n\n  /** @ngInject */\n  function ViewTourtypesCtrl($scope, fileReader, $filter, $uibModal, $rootScope, $compile, DefaulttasksFactory, TourtypesFactory, $timeout, $stateParams, $state, $injector, Notification) {\n        $scope.pageName = 'View';\n        $scope.btnName = 'Add Task';\n        $scope.isSubmitted = false;\n        $scope.urlID = $stateParams.id;\n        $scope.user = {status:null};\n\n        $scope.statuses = [\n            { 'value': 2, 'text': 'Inactive' },\n            { 'value': 1, 'text': 'Active' }\n        ];\n\n        $scope.showStatus = function(user) {\n            var selected = [];\n            if(user.status) {\n                selected = $filter('filter')($scope.statuses, { value: user.status });\n            }\n            return selected.length ? selected[0].text : 'Not set';\n        };\n        \n        TourtypesFactory.viewRecord($scope.urlID).success(function(response) {\n            $scope.tourtype = response.data;\n        }).error(function(error) {\n            Notification.error(error.error);\n            $state.go('categories.tourtypes.list');\n        });\n\n        // add user\n        $scope.addTask = function() {\n            $scope.inserted = {\n                id: null,\n                task: '',\n                status: null\n            };\n            $scope.tourtype.defaulttask.push($scope.inserted);\n        };\n\n        $scope.cancelRow = function(index) {\n            $scope.showTable = false;\n            $scope.tourtype.defaulttask.splice(index, 1);\n            $scope.showTable = true;\n        };\n        \n        var $validationProvider = $injector.get('$validation');\n        $scope.errorMessage = DefaulttasksFactory.validation;\n\n        $scope.checkTask = function($data) {\n            if($data == '') {\n                return $scope.errorMessage.task.required;\n            }\n            else if($data.length <= 2) {\n                return $scope.errorMessage.task.minlength;\n            }\n            else if($data.length >= 200) {\n                return $scope.errorMessage.task.maxlength;\n            }\n        };\n\n        $scope.removeTask = function(id, index) {\n            DefaulttasksFactory.deleteRecord(id).success(function (res) {\n                Notification.success(res.success);\n                $scope.showTable = false;\n                $scope.tourtype.defaulttask.splice(index, 1);\n                $scope.showTable = true;\n            }).error(function (err) {\n                Notification.error(err.error);\n            });\n        }\n\n        $scope.checkStatus = function($data) {\n            if($data == null) {\n                return $scope.errorMessage.status.required;\n            }\n        };\n\n        $scope.add_data = function(data, index, id) {\n            data.tourtype_id = $scope.tourtype.id;\n            \n            if(id) {\n                data._method = 'PUT';\n                DefaulttasksFactory.updateRecord(id, data).success(function(res) {\n                    $scope.tourtype.defaulttask[index].status = data.status;\n                    Notification.success(res.success);\n                }).error(function(err) {\n                    Notification.error(err.error);\n                });\n            }\n            else {\n                DefaulttasksFactory.addRecord(data).success(function(res) {\n                    $scope.tourtype.defaulttask[index] = res.data;\n                    $scope.tourtype.defaulttask[index].status = data.status;\n                    Notification.success(res.success);\n                }).error(function(err) {\n                    Notification.error(err.error);\n                });\n            }\n        };\n  }\n})();\n\n/**\n * @author v.lugovsky\n * created on 16.12.2015\n */\n(function () {\n  'use strict';\n\n  angular.module('BlurAdmin.pages.categories.transports')\n    .controller('AddTransportsCtrl', AddTransportsCtrl);\n\n  /** @ngInject */\n  function AddTransportsCtrl($scope, fileReader, $filter, $uibModal, $rootScope, $compile, TransportsFactory, $timeout, $stateParams, $state, $injector, Notification) {\n        $scope.formscope = {status:1};\n        $scope.pageName = 'Add Transport type';\n        $scope.btnName = 'Add';\n        $scope.isSubmitted = false;\n        \n        $scope.statusData = [\n            { 'value': 0, 'text': 'Inactive' },\n            { 'value': 1, 'text': 'Active' }\n        ];\n\n        var $validationProvider = $injector.get('$validation');\n        $scope.errorMessage = TransportsFactory.validation;\n\n        $scope.add_data = function(form) {\n            $validationProvider.validate(form).success(function() {\n                $scope.isSubmitted = true;\n                \n                TransportsFactory.addRecord($scope.formscope).success(function(res) {\n                    Notification.success(res.success);\n                    $state.go('categories.transports.list');\n                    $scope.isSubmitted = false;\n                }).error(function(err) {\n                    Notification.error(err.error);\n                    $scope.isSubmitted = false;\n                });\n            }).error(function() {\n                $scope.isSubmitted = false;\n            });\n        };\n  }\n})();\n\n\n\n/**\n * @author v.lugovsky\n * created on 16.12.2015\n */\n(function () {\n  'use strict';\n\n  angular.module('BlurAdmin.pages.categories.transports')\n    .controller('EditTransportsCtrl', EditTransportsCtrl);\n\n  /** @ngInject */\n  function EditTransportsCtrl($scope, fileReader, $filter, $uibModal, $rootScope, $compile, TransportsFactory, $timeout, $stateParams, $state, $injector, Notification) {\n        $scope.pageName = 'Edit Transport type';\n        $scope.btnName = 'Update';\n        $scope.isSubmitted = false;\n        $scope.urlID = $stateParams.id;\n\n        $scope.statusData = [\n            { 'value': 0, 'text': 'Inactive' },\n            { 'value': 1, 'text': 'Active' }\n        ];\n   \n        var $validationProvider = $injector.get('$validation');\n        $scope.errorMessage = TransportsFactory.validation;\n\n        TransportsFactory.getRecord($scope.urlID).success(function(response) {\n            $scope.formscope = response.data;\n        }).error(function(error) {\n            Notification.error(error.error);\n            $state.go('categories.transports.list');\n        });\n\n        $scope.add_data = function(form) {\n            $validationProvider.validate(form).success(function() {\n                $scope.isSubmitted = true;\n                $scope.formscope._method = 'PUT';\n                \n                TransportsFactory.updateRecord($scope.urlID, $scope.formscope).success(function(res) {\n                    Notification.success(res.success);\n                    $state.go('categories.transports.list');\n                    $scope.isSubmitted = false;\n                }).error(function(err) {\n                    Notification.error(err.error);\n                    $scope.isSubmitted = false;\n                });\n            }).error(function() {\n                $scope.isSubmitted = false;\n            });\n        };\n  }\n})();\n\n/**\n * @author v.lugovsky\n * created on 16.12.2015\n */\n(function () {\n  'use strict';\n\n  angular.module('BlurAdmin.pages.categories.transports')\n    .controller('ListTransportsCtrl', ListTransportsCtrl);\n\n  /** @ngInject */\n  function ListTransportsCtrl($scope, $state, fileReader, $filter, $uibModal, $rootScope, $compile, DTOptionsBuilder, DTColumnBuilder, TransportsFactory, $timeout, Notification) {\n      $scope.dtInstance = {};\n\n      $scope.reloadData = function() {\n          $scope.dtInstance.rerender();\n      };\n\n      $scope.createdRow = function(row, data, dataIndex) {\n           // Recompiling so we can bind Angular directive to the DT\n           $compile(angular.element(row).contents())($scope);\n      };\n\n      $scope.deleteRecord = function(id) {\n        TransportsFactory.deleteRecord(id).success(function (res) {\n            Notification.success(res.success);\n            $state.reload();\n        }).error(function (err) {\n            Notification.error(err.error);\n        });\n      }\n\n      $scope.actionRoles = function(data, type, full) {\n          return \"<a ng-if=\\\"havePermission('transports','update');\\\" ui-sref='categories.transports.edit({ id: \" + full.id + \" })'><i class='fa fa-edit'></i></a> <a ng-if=\\\"havePermission('transports','delete');\\\" ng-confirm-click='Are you sure to delete this transports type?' confirmed-click='deleteRecord( \" + full.id + \" )'><i class='fa fa-trash'></i></a>\";\n      };\n\n      $scope.statusAction = function(data, type, full) {\n            if(data.status == '0') {\n                return '<small class=\"label label-danger\">Inactive</small>';\n            }\n            else {\n                return '<small class=\"label label-success\">Active</small>';\n            }\n        };\n\n      $scope.indexNumber = function(data, type, full, row) {\n            var i = Number(row.row) + Number(1);\n            var ind = row.settings._iDisplayStart + i;\n            return \"<span>\" + ind + \"</span>\";\n        };\n      \n      $scope.dtOptions = DTOptionsBuilder.newOptions()\n            .withDataProp('data')\n            .withOption('ajax', function(data, callback, settings) {\n                // map your server's response to the DataTables format and pass it to\n                TransportsFactory.showDataTable(data).success(function(res) {\n                    if (res.error)\n                        $scope.reloadData();\n                    else\n                        callback(res);\n                }).error(function(err) {\n                    if (err)\n                        $scope.reloadData();\n                });\n            })\n            .withOption('processing', true)\n            .withOption('serverSide', true)\n            .withPaginationType('simple_numbers')\n            .withOption('order', [1, 'asc'])\n            .withDOM('lftip')\n            .withOption('searchDelay', 500)\n            .withOption('createdRow', $scope.createdRow);\n\n        $scope.dtColumns = [\n            DTColumnBuilder.newColumn('id').withTitle('No').withOption('searchable', false).renderWith($scope.indexNumber).withClass('table-index'),\n            DTColumnBuilder.newColumn('name').withTitle('Name').withOption('searchable', true),\n            // DTColumnBuilder.newColumn('description').withTitle('Description').withOption('searchable', false).notSortable(),\n            DTColumnBuilder.newColumn(null).withTitle('Status').withOption('searchable', false).notSortable().renderWith($scope.statusAction),\n            DTColumnBuilder.newColumn(null).withTitle('Action').withOption('searchable', false).notSortable().renderWith($scope.actionRoles)\n        ];\n  }\n})();\n/**\n * @author v.lugovsky\n * created on 16.12.2015\n */\n(function () {\n  'use strict';\n\n  angular.module('BlurAdmin.pages.categories.visitors')\n    .controller('AddVisitorsCtrl', AddVisitorsCtrl);\n\n  /** @ngInject */\n  function AddVisitorsCtrl($scope, fileReader, $filter, $uibModal, $rootScope, $compile, VisitorsFactory, $timeout, $stateParams, $state, $injector, Notification) {\n        $scope.formscope = {status:1};\n        $scope.pageName = 'Add Visitor Type';\n        $scope.btnName = 'Add';\n        $scope.isSubmitted = false;\n        \n        $scope.statusData = [\n            { 'value': 0, 'text': 'Inactive' },\n            { 'value': 1, 'text': 'Active' }\n        ];\n\n        var $validationProvider = $injector.get('$validation');\n        $scope.errorMessage = VisitorsFactory.validation;\n\n        $scope.add_data = function(form) {\n            $validationProvider.validate(form).success(function() {\n                $scope.isSubmitted = true;\n                \n                VisitorsFactory.addRecord($scope.formscope).success(function(res) {\n                    Notification.success(res.success);\n                    $state.go('categories.visitors.list');\n                    $scope.isSubmitted = false;\n                }).error(function(err) {\n                    Notification.error(err.error);\n                    $scope.isSubmitted = false;\n                });\n            }).error(function() {\n                $scope.isSubmitted = false;\n            });\n        };\n  }\n})();\n\n\n\n/**\n * @author v.lugovsky\n * created on 16.12.2015\n */\n(function () {\n  'use strict';\n\n  angular.module('BlurAdmin.pages.categories.visitors')\n    .controller('EditVisitorsCtrl', EditVisitorsCtrl);\n\n  /** @ngInject */\n  function EditVisitorsCtrl($scope, fileReader, $filter, $uibModal, $rootScope, $compile, VisitorsFactory, $timeout, $stateParams, $state, $injector, Notification) {\n        $scope.pageName = 'Edit Visitor Type';\n        $scope.btnName = 'Update';\n        $scope.isSubmitted = false;\n        $scope.urlID = $stateParams.id;\n\n        $scope.statusData = [\n            { 'value': 0, 'text': 'Inactive' },\n            { 'value': 1, 'text': 'Active' }\n        ];\n   \n        var $validationProvider = $injector.get('$validation');\n        $scope.errorMessage = VisitorsFactory.validation;\n\n        VisitorsFactory.getRecord($scope.urlID).success(function(response) {\n            $scope.formscope = response.data;\n        }).error(function(error) {\n            Notification.error(error.error);\n            $state.go('categories.visitors.list');\n        });\n\n        $scope.add_data = function(form) {\n            $validationProvider.validate(form).success(function() {\n                $scope.isSubmitted = true;\n                $scope.formscope._method = 'PUT';\n                \n                VisitorsFactory.updateRecord($scope.urlID, $scope.formscope).success(function(res) {\n                    Notification.success(res.success);\n                    $state.go('categories.visitors.list');\n                    $scope.isSubmitted = false;\n                }).error(function(err) {\n                    Notification.error(err.error);\n                    $scope.isSubmitted = false;\n                });\n            }).error(function() {\n                $scope.isSubmitted = false;\n            });\n        };\n  }\n})();\n\n/**\n * @author v.lugovsky\n * created on 16.12.2015\n */\n(function () {\n  'use strict';\n\n  angular.module('BlurAdmin.pages.categories.visitors')\n    .controller('ListVisitorsCtrl', ListVisitorsCtrl);\n\n  /** @ngInject */\n  function ListVisitorsCtrl($scope, $state, fileReader, $filter, $uibModal, $rootScope, $compile, DTOptionsBuilder, DTColumnBuilder, VisitorsFactory, $timeout, Notification) {\n      $scope.dtInstance = {};\n\n      $scope.reloadData = function() {\n          $scope.dtInstance.rerender();\n      };\n\n      $scope.createdRow = function(row, data, dataIndex) {\n           // Recompiling so we can bind Angular directive to the DT\n           $compile(angular.element(row).contents())($scope);\n      };\n\n      $scope.deleteRecord = function(id) {\n        VisitorsFactory.deleteRecord(id).success(function (res) {\n            Notification.success(res.success);\n            $state.reload();\n        }).error(function (err) {\n            Notification.error(err.error);\n        });\n      }\n\n      $scope.actionRoles = function(data, type, full) {\n          return \"<a ng-if=\\\"havePermission('visitors','update');\\\" ui-sref='categories.visitors.edit({ id: \" + full.id + \" })'><i class='fa fa-edit'></i></a> <a ng-if=\\\"havePermission('visitors','delete');\\\" ng-confirm-click='Are you sure to delete this visitor type?' confirmed-click='deleteRecord( \" + full.id + \" )'><i class='fa fa-trash'></i></a>\";\n      };\n\n      $scope.statusAction = function(data, type, full) {\n            if(data.status == '0') {\n                return '<small class=\"label label-danger\">Inactive</small>';\n            }\n            else {\n                return '<small class=\"label label-success\">Active</small>';\n            }\n        };\n\n      $scope.indexNumber = function(data, type, full, row) {\n            var i = Number(row.row) + Number(1);\n            var ind = row.settings._iDisplayStart + i;\n            return \"<span>\" + ind + \"</span>\";\n        };\n      \n      $scope.dtOptions = DTOptionsBuilder.newOptions()\n            .withDataProp('data')\n            .withOption('ajax', function(data, callback, settings) {\n                // map your server's response to the DataTables format and pass it to\n                VisitorsFactory.showDataTable(data).success(function(res) {\n                    if (res.error)\n                        $scope.reloadData();\n                    else\n                        callback(res);\n                }).error(function(err) {\n                    if (err)\n                        $scope.reloadData();\n                });\n            })\n            .withOption('processing', true)\n            .withOption('serverSide', true)\n            .withPaginationType('simple_numbers')\n            .withOption('order', [1, 'asc'])\n            .withDOM('lftip')\n            .withOption('searchDelay', 500)\n            .withOption('createdRow', $scope.createdRow);\n\n        $scope.dtColumns = [\n            DTColumnBuilder.newColumn('id').withTitle('No').withOption('searchable', false).renderWith($scope.indexNumber).withClass('table-index'),\n            DTColumnBuilder.newColumn('name').withTitle('Name').withOption('searchable', true),\n            // DTColumnBuilder.newColumn('description').withTitle('Description').withOption('searchable', false).notSortable(),\n            DTColumnBuilder.newColumn(null).withTitle('Status').withOption('searchable', false).notSortable().renderWith($scope.statusAction),\n            DTColumnBuilder.newColumn(null).withTitle('Action').withOption('searchable', false).notSortable().renderWith($scope.actionRoles)\n        ];\n  }\n})();\n/**\n * @author v.lugovksy\n * created on 16.12.2015\n */\n(function() {\n    'use strict';\n\n    angular.module('BlurAdmin.pages.dashboard')\n        .controller('DashboardCalendarCtrl', DashboardCalendarCtrl);\n\n    /** @ngInject */\n    function DashboardCalendarCtrl(baConfig, $timeout, $rootScope, $filter, $stateParams, $state, UsersFactory, DashboardsFactory) {\n        var dashboardColors = baConfig.colors.dashboard;\n\n        /** \n         * Get calendar data\n         */\n        var calendarData = [];\n        DashboardsFactory.getCalenderRecord().success(function(response) {\n            $.each(response.data, function(i, el) {\n                var data = {\n                    title: response.data[i].name,\n                    id: response.data[i].id,\n                    start: response.data[i].start_date,\n                    end: response.data[i].start_date,\n                    color: dashboardColors.blueStone\n                };\n                calendarData.push(data);\n            });\n        }).error(function(error) {\n\n        });\n        /* End calendar data */\n\n        $timeout(function() {\n            var $element = $('#calendar').fullCalendar({\n                header: {\n                    left: 'prev,next today',\n                    center: 'title',\n                    right: 'month, agendaWeek, agendaDay'\n                },\n                defaultDate: new Date(),\n                selectable: true,\n                selectHelper: true,\n                select: function(start, end) {\n                    var addPermition = $rootScope.havePermission('tours', 'create');\n                    if (addPermition) {\n                        if (confirm(\"Are you sure want to add a tour?\")) {\n                            var sDate = moment(start._d).format('DDMMYYYYHHmmss');\n                            $state.go('tours.add', {date:sDate});\n                        }\n                    }\n                },\n                timeFormat: 'h(:mm)a',\n                editable: true,\n                eventLimit: true,\n                events: calendarData,\n                eventClick: function(event) {\n                    if (event.id) {\n                        $state.go('tours.viewdetails',{id: event.id});\n                    }\n                }\n            });\n        }, 1500);\n    }\n})();\n/**\n * @author v.lugovksy\n * created on 16.12.2015\n */\n(function () {\n  'use strict';\n\n  angular.module('BlurAdmin.pages.dashboard')\n      .directive('dashboardCalendar', dashboardCalendar);\n\n  /** @ngInject */\n  function dashboardCalendar() {\n    return {\n      restrict: 'E',\n      controller: 'DashboardCalendarCtrl',\n      templateUrl: 'app/pages/dashboard/dashboardCalendar/dashboardCalendar.html'\n    };\n  }\n})();\n/**\n * @author v.lugovsky\n * created on 23.12.2015\n */\n(function () {\n  'use strict';\n\n  /**\n   * Includes basic panel layout inside of current element.\n   */\n  angular.module('BlurAdmin.theme')\n      .directive('baPanel', baPanel);\n\n  /** @ngInject */\n  function baPanel(baPanel, baConfig) {\n    return angular.extend({}, baPanel, {\n      template: function(el, attrs) {\n        var res = '<div  class=\"panel ' + (baConfig.theme.blur ? 'panel-blur' : '') + ' full-invisible ' + (attrs.baPanelClass || '');\n        res += '\" zoom-in ' + (baConfig.theme.blur ? 'ba-panel-blur' : '') + '>';\n        res += baPanel.template(el, attrs);\n        res += '</div>';\n        return res;\n      }\n    });\n  }\n})();\n\n/**\n * @author v.lugovsky\n * created on 23.12.2015\n */\n(function () {\n  'use strict';\n\n  angular.module('BlurAdmin.theme')\n      .factory('baPanel', baPanel);\n\n  /** @ngInject */\n  function baPanel() {\n\n    /** Base baPanel directive */\n    return {\n      restrict: 'A',\n      transclude: true,\n      template: function(elem, attrs) {\n        var res = '<div class=\"panel-body\" ng-transclude></div>';\n        if (attrs.baPanelTitle) {\n          var titleTpl = '<div class=\"panel-heading clearfix\"><h3 class=\"panel-title\">' + attrs.baPanelTitle + '</h3></div>';\n          res = titleTpl + res; // title should be before\n        }\n\n        return res;\n      }\n    };\n  }\n\n})();\n\n/**\n * @author v.lugovsky\n * created on 15.01.2016\n */\n(function () {\n  'use strict';\n\n  angular.module('BlurAdmin.theme')\n      .directive('baPanelBlur', baPanelBlur);\n\n  /** @ngInject */\n  function baPanelBlur(baPanelBlurHelper, $window, $rootScope) {\n    var bodyBgSize;\n\n    baPanelBlurHelper.bodyBgLoad().then(function() {\n      bodyBgSize = baPanelBlurHelper.getBodyBgImageSizes();\n    });\n\n    $window.addEventListener('resize', function() {\n      bodyBgSize = baPanelBlurHelper.getBodyBgImageSizes();\n    });\n\n    return {\n      restrict: 'A',\n      link: function($scope, elem) {\n        if(!$rootScope.$isMobile) {\n          baPanelBlurHelper.bodyBgLoad().then(function () {\n            setTimeout(recalculatePanelStyle);\n          });\n          $window.addEventListener('resize', recalculatePanelStyle);\n\n          $scope.$on('$destroy', function () {\n            $window.removeEventListener('resize', recalculatePanelStyle);\n          });\n        }\n\n        function recalculatePanelStyle() {\n          if (!bodyBgSize) {\n            return;\n          }\n          elem.css({\n            backgroundSize: Math.round(bodyBgSize.width) + 'px ' + Math.round(bodyBgSize.height) + 'px',\n            backgroundPosition: Math.floor(bodyBgSize.positionX) + 'px ' + Math.floor(bodyBgSize.positionY) + 'px'\n          });\n        }\n\n      }\n    };\n  }\n\n})();\n\n/**\n * @author v.lugovsky\n * created on 15.01.2016\n */\n(function () {\n  'use strict';\n\n  angular.module('BlurAdmin.theme')\n      .service('baPanelBlurHelper', baPanelBlurHelper);\n\n  /** @ngInject */\n  function baPanelBlurHelper($q) {\n    var res = $q.defer();\n    var computedStyle = getComputedStyle(document.body, ':before');\n    var image = new Image();\n    image.src = computedStyle.backgroundImage.replace(/url\\((['\"])?(.*?)\\1\\)/gi, '$2');\n    image.onerror = function() {\n      res.reject();\n    };\n    image.onload = function() {\n      res.resolve();\n    };\n\n    this.bodyBgLoad = function() {\n      return res.promise;\n    };\n\n    this.getBodyBgImageSizes = function() {\n      var elemW = document.documentElement.clientWidth;\n      var elemH = document.documentElement.clientHeight;\n      if(elemW <= 640) return;\n      var imgRatio = (image.height / image.width);       // original img ratio\n      var containerRatio = (elemH / elemW);     // container ratio\n\n      var finalHeight, finalWidth;\n      if (containerRatio > imgRatio) {\n        finalHeight = elemH;\n        finalWidth = (elemH / imgRatio);\n      } else {\n        finalWidth = elemW;\n        finalHeight = (elemW * imgRatio);\n      }\n      return { width: finalWidth, height: finalHeight, positionX: (elemW - finalWidth)/2, positionY: (elemH - finalHeight)/2};\n    };\n  }\n\n})();\n\n/**\n * @author v.lugovsky\n * created on 23.12.2015\n */\n(function () {\n  'use strict';\n\n  /**\n   * Represents current element as panel, adding all necessary classes.\n   */\n  angular.module('BlurAdmin.theme')\n      .directive('baPanelSelf', baPanelSelf);\n\n  /** @ngInject */\n  function baPanelSelf(baPanel) {\n    return angular.extend({}, baPanel, {\n      link: function(scope, el, attrs) {\n        el.addClass('panel panel-white');\n        if (attrs.baPanelClass) {\n          el.addClass(attrs.baPanelClass);\n        }\n      }\n    });\n  }\n\n})();\n\n/**\n * @author v.lugovksy\n * created on 16.12.2015\n */\n(function () {\n  'use strict';\n\n  angular.module('BlurAdmin.theme.components')\n    .controller('BaSidebarCtrl', BaSidebarCtrl);\n\n  /** @ngInject */\n  function BaSidebarCtrl($scope, baSidebarService) {\n\n    $scope.menuItems = baSidebarService.getMenuItems();\n    $scope.defaultSidebarState = $scope.menuItems[0].stateRef;\n\n    $scope.hoverItem = function ($event) {\n      $scope.showHoverElem = true;\n      $scope.hoverElemHeight =  $event.currentTarget.clientHeight;\n      var menuTopValue = 66;\n      $scope.hoverElemTop = $event.currentTarget.getBoundingClientRect().top - menuTopValue;\n    };\n\n    $scope.$on('$stateChangeSuccess', function () {\n      if (baSidebarService.canSidebarBeHidden()) {\n        baSidebarService.setMenuCollapsed(true);\n      }\n    });\n  }\n})();\n/**\n * @author v.lugovksy\n * created on 16.12.2015\n */\n(function () {\n  'use strict';\n\n  angular.module('BlurAdmin.theme.components')\n      .directive('baSidebar', baSidebar);\n\n  /** @ngInject */\n  function baSidebar($timeout, baSidebarService, baUtil, layoutSizes) {\n    var jqWindow = $(window);\n    return {\n      restrict: 'E',\n      templateUrl: 'app/theme/components/baSidebar/ba-sidebar.html',\n      controller: 'BaSidebarCtrl',\n      link: function(scope, el) {\n\n        scope.menuHeight = el[0].childNodes[0].clientHeight - 84;\n        jqWindow.on('click', _onWindowClick);\n        jqWindow.on('resize', _onWindowResize);\n\n        scope.$on('$destroy', function() {\n          jqWindow.off('click', _onWindowClick);\n          jqWindow.off('resize', _onWindowResize);\n        });\n\n        function _onWindowClick($evt) {\n          if (!baUtil.isDescendant(el[0], $evt.target) &&\n              !$evt.originalEvent.$sidebarEventProcessed &&\n              !baSidebarService.isMenuCollapsed() &&\n              baSidebarService.canSidebarBeHidden()) {\n            $evt.originalEvent.$sidebarEventProcessed = true;\n            $timeout(function () {\n              baSidebarService.setMenuCollapsed(true);\n            }, 10);\n          }\n        }\n\n        // watch window resize to change menu collapsed state if needed\n        function _onWindowResize() {\n          var newMenuCollapsed = baSidebarService.shouldMenuBeCollapsed();\n          var newMenuHeight = _calculateMenuHeight();\n          if (newMenuCollapsed != baSidebarService.isMenuCollapsed() || scope.menuHeight != newMenuHeight) {\n            scope.$apply(function () {\n              scope.menuHeight = newMenuHeight;\n              baSidebarService.setMenuCollapsed(newMenuCollapsed)\n            });\n          }\n        }\n\n        function _calculateMenuHeight() {\n          return el[0].childNodes[0].clientHeight - 84;\n        }\n      }\n    };\n  }\n\n})();\n(function() {\n  'use strict';\n\n  angular.module('BlurAdmin.theme.components')\n      .provider('baSidebarService', baSidebarServiceProvider);\n\n  /** @ngInject */\n  function baSidebarServiceProvider() {\n    var staticMenuItems = [];\n\n    this.addStaticItem = function() {\n      staticMenuItems.push.apply(staticMenuItems, arguments);\n    };\n\n    /** @ngInject */\n    this.$get = function($state, layoutSizes, $rootScope) {\n      return new _factory();\n\n      function _factory() {\n        var isMenuCollapsed = shouldMenuBeCollapsed();\n\n        this.getMenuItems = function() {\n          var states = defineMenuItemStates();\n          var menuItems = states.filter(function(item) {\n            return item.level == 0;\n          });\n\n          menuItems.forEach(function(item) {\n            var children = states.filter(function(child) {\n              return child.level == 1 && child.name.indexOf(item.name) === 0;\n            });\n            item.subMenu = children.length ? children : null;\n          });\n\n          return menuItems.concat(staticMenuItems);\n        };\n\n        this.shouldMenuBeCollapsed = shouldMenuBeCollapsed;\n        this.canSidebarBeHidden = canSidebarBeHidden;\n\n        this.setMenuCollapsed = function(isCollapsed) {\n          isMenuCollapsed = isCollapsed;\n        };\n\n        this.isMenuCollapsed = function() {\n          return isMenuCollapsed;\n        };\n\n        this.toggleMenuCollapsed = function() {\n          isMenuCollapsed = !isMenuCollapsed;\n        };\n\n        this.getAllStateRefsRecursive = function(item) {\n          var result = [];\n          _iterateSubItems(item);\n          return result;\n\n          function _iterateSubItems(currentItem) {\n            currentItem.subMenu && currentItem.subMenu.forEach(function(subItem) {\n              subItem.stateRef && result.push(subItem.stateRef);\n              _iterateSubItems(subItem);\n            });\n          }\n        };\n\n        function defineMenuItemStates() {\n          return $state.get()\n              .filter(function(s) {\n                return s.sidebarMeta;\n              })\n              .map(function(s) {\n                \n                var meta = s.sidebarMeta;\n                if(s.data) {\n                  if(!$rootScope.havePermission(s.data.mainmodule, s.data.childmodule)){\n                    return {};\n                  }\n                }\n                return {\n                  name: s.name,\n                  title: s.title,\n                  level: (s.name.match(/\\./g) || []).length,\n                  order: meta.order,\n                  icon: meta.icon,\n                  stateRef: s.name,\n                };\n              })\n              .sort(function(a, b) {\n                return (a.level - b.level) * 100 + a.order - b.order;\n              });\n        }\n\n        function shouldMenuBeCollapsed() {\n          return window.innerWidth <= layoutSizes.resWidthCollapseSidebar;\n        }\n\n        function canSidebarBeHidden() {\n          return window.innerWidth <= layoutSizes.resWidthHideSidebar;\n        }\n      }\n\n    };\n\n  }\n})();\n\n/**\n * @author v.lugovsky\n * created on 03.05.2016\n */\n(function () {\n  'use strict';\n\n  angular.module('BlurAdmin.theme.components')\n      .directive('baSidebarToggleMenu', baSidebarToggleMenu)\n      .directive('baSidebarCollapseMenu', baSidebarCollapseMenu)\n      .directive('baSidebarTogglingItem', baSidebarTogglingItem)\n      .controller('BaSidebarTogglingItemCtrl', BaSidebarTogglingItemCtrl)\n      .directive('baUiSrefTogglingSubmenu', baUiSrefTogglingSubmenu)\n      .directive('baUiSrefToggler', baUiSrefToggler);\n\n  /** @ngInject */\n  function baSidebarToggleMenu(baSidebarService) {\n    return {\n      restrict: 'A',\n      link: function(scope, elem) {\n        elem.on('click', function($evt) {\n          $evt.originalEvent.$sidebarEventProcessed = true;\n          scope.$apply(function() {\n            baSidebarService.toggleMenuCollapsed();\n          });\n        });\n      }\n    };\n  }\n\n  /** @ngInject */\n  function baSidebarCollapseMenu(baSidebarService) {\n    return {\n      restrict: 'A',\n      link: function(scope, elem) {\n        elem.on('click', function($evt) {\n          $evt.originalEvent.$sidebarEventProcessed = true;\n          if (!baSidebarService.isMenuCollapsed()) {\n            scope.$apply(function() {\n              baSidebarService.setMenuCollapsed(true);\n            });\n          }\n        });\n      }\n    };\n  }\n\n  /** @ngInject */\n  function baSidebarTogglingItem() {\n    return {\n      restrict: 'A',\n      controller: 'BaSidebarTogglingItemCtrl'\n    };\n  }\n\n  /** @ngInject */\n  function BaSidebarTogglingItemCtrl($scope, $element, $attrs, $state, baSidebarService) {\n    var vm = this;\n    var menuItem = vm.$$menuItem = $scope.$eval($attrs.baSidebarTogglingItem);\n    if (menuItem && menuItem.subMenu && menuItem.subMenu.length) {\n      vm.$$expandSubmenu = function() { console.warn('$$expandMenu should be overwritten by baUiSrefTogglingSubmenu') };\n      vm.$$collapseSubmenu = function() { console.warn('$$collapseSubmenu should be overwritten by baUiSrefTogglingSubmenu') };\n\n      var subItemsStateRefs = baSidebarService.getAllStateRefsRecursive(menuItem);\n\n      vm.$expand = function() {\n        vm.$$expandSubmenu();\n        $element.addClass('ba-sidebar-item-expanded');\n      };\n\n      vm.$collapse = function() {\n        vm.$$collapseSubmenu();\n        $element.removeClass('ba-sidebar-item-expanded');\n      };\n\n      vm.$toggle = function() {\n        $element.hasClass('ba-sidebar-item-expanded') ?\n            vm.$collapse() :\n            vm.$expand();\n      };\n\n      if (_isState($state.current)) {\n        $element.addClass('ba-sidebar-item-expanded');\n      }\n\n      $scope.$on('$stateChangeStart', function (event, toState) {\n        if (!_isState(toState) && $element.hasClass('ba-sidebar-item-expanded')) {\n          vm.$collapse();\n          $element.removeClass('ba-sidebar-item-expanded');\n        }\n      });\n\n      $scope.$on('$stateChangeSuccess', function (event, toState) {\n        if (_isState(toState) && !$element.hasClass('ba-sidebar-item-expanded')) {\n          vm.$expand();\n          $element.addClass('ba-sidebar-item-expanded');\n        }\n      });\n    }\n\n    function _isState(state) {\n      return state && subItemsStateRefs.some(function(subItemState) {\n            return state.name.indexOf(subItemState) == 0;\n          });\n    }\n  }\n\n  /** @ngInject */\n  function baUiSrefTogglingSubmenu($state) {\n    return {\n      restrict: 'A',\n      require: '^baSidebarTogglingItem',\n      link: function(scope, el, attrs, baSidebarTogglingItem) {\n        baSidebarTogglingItem.$$expandSubmenu = function() { el.slideDown(); };\n        baSidebarTogglingItem.$$collapseSubmenu = function() { el.slideUp(); };\n      }\n    };\n  }\n\n  /** @ngInject */\n  function baUiSrefToggler(baSidebarService) {\n    return {\n      restrict: 'A',\n      require: '^baSidebarTogglingItem',\n      link: function(scope, el, attrs, baSidebarTogglingItem) {\n        el.on('click', function() {\n          if (baSidebarService.isMenuCollapsed()) {\n            // If the whole sidebar is collapsed and this item has submenu. We need to open sidebar.\n            // This should not affect mobiles, because on mobiles sidebar should be hidden at all\n            scope.$apply(function() {\n              baSidebarService.setMenuCollapsed(false);\n            });\n            baSidebarTogglingItem.$expand();\n          } else {\n            baSidebarTogglingItem.$toggle();\n          }\n        });\n      }\n    };\n  }\n\n})();\n\n(function() {\n  'use strict';\n\n  angular.module('BlurAdmin.theme.components')\n    .directive('baWizard', baWizard);\n\n  /** @ngInject */\n  function baWizard() {\n    return {\n      restrict: 'E',\n      transclude: true,\n      templateUrl: 'app/theme/components/baWizard/baWizard.html',\n      controllerAs: '$baWizardController',\n      controller: 'baWizardCtrl'\n    }\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular.module('BlurAdmin.theme.components')\n    .controller('baWizardCtrl', baWizardCtrl);\n\n  /** @ngInject */\n  function baWizardCtrl($scope) {\n    var vm = this;\n    vm.tabs = [];\n\n    vm.tabNum = 0;\n    vm.progress = 0;\n\n    vm.addTab = function(tab) {\n      tab.setPrev(vm.tabs[vm.tabs.length - 1]);\n      vm.tabs.push(tab);\n      vm.selectTab(0);\n    };\n\n    $scope.$watch(angular.bind(vm, function () {return vm.tabNum;}), calcProgress);\n\n    vm.selectTab = function (tabNum) {\n      vm.tabs[vm.tabNum].submit();\n      if (vm.tabs[tabNum].isAvailiable()) {\n        vm.tabNum = tabNum;\n        vm.tabs.forEach(function (t, tIndex) {\n          tIndex == vm.tabNum ? t.select(true) : t.select(false);\n        });\n      }\n    };\n\n    vm.isFirstTab = function () {\n      return vm.tabNum == 0;\n    };\n\n    vm.isLastTab = function () {\n      return vm.tabNum == vm.tabs.length - 1 ;\n    };\n\n    vm.nextTab = function () {\n      vm.selectTab(vm.tabNum + 1)\n    };\n\n    vm.previousTab = function () {\n      vm.selectTab(vm.tabNum - 1)\n    };\n\n    function calcProgress() {\n      vm.progress = ((vm.tabNum + 1) / vm.tabs.length) * 100;\n    }\n  }\n})();\n\n\n(function() {\n  'use strict';\n\n  angular.module('BlurAdmin.theme.components')\n    .directive('baWizardStep', baWizardStep);\n\n  /** @ngInject */\n  function baWizardStep() {\n    return {\n      restrict: 'E',\n      transclude: true,\n      require: '^baWizard',\n      scope: {\n        form: '='\n      },\n      templateUrl:  'app/theme/components/baWizard/baWizardStep.html',\n      link: function($scope, $element, $attrs, wizard) {\n        $scope.selected = true;\n\n        var tab = {\n          title: $attrs.title,\n          select: select,\n          submit: submit,\n          isComplete: isComplete,\n          isAvailiable: isAvailiable,\n          prevTab: undefined,\n          setPrev: setPrev\n        };\n\n        wizard.addTab(tab);\n\n        function select(isSelected) {\n          if (isSelected) {\n            $scope.selected = true;\n          } else {\n            $scope.selected = false;\n          }\n        }\n\n        function submit() {\n          $scope.form && $scope.form.$setSubmitted(true);\n        }\n\n        function isComplete() {\n          return $scope.form ? $scope.form.$valid : true;\n        }\n\n        function isAvailiable() {\n          return tab.prevTab ? tab.prevTab.isComplete() : true;\n        }\n\n        function setPrev(pTab) {\n          tab.prevTab = pTab;\n        }\n      }\n    };\n  }\n})();\n/**\n * @author v.lugovksy\n * created on 16.12.2015\n */\n(function () {\n  'use strict';\n\n  angular.module('BlurAdmin.theme.components')\n      .directive('backTop', backTop);\n\n  /** @ngInject */\n  function backTop() {\n    return {\n      restrict: 'E',\n      templateUrl: 'app/theme/components/backTop/backTop.html',\n      controller: function () {\n        $('#backTop').backTop({\n          'position': 200,\n          'speed': 100\n        });\n      }\n    };\n  }\n\n})();\n/**\n * @author v.lugovksy\n * created on 16.12.2015\n */\n(function () {\n  'use strict';\n\n  angular.module('BlurAdmin.theme.components')\n      .directive('contentTop', contentTop);\n\n  /** @ngInject */\n  function contentTop($location, $state) {\n    return {\n      restrict: 'E',\n      templateUrl: 'app/theme/components/contentTop/contentTop.html',\n      link: function($scope) {\n        $scope.$watch(function () {\n          $scope.activePageTitle = $state.current.title;\n        });\n      }\n    };\n  }\n\n})();\n/**\n * @author v.lugovksy\n * created on 16.12.2015\n */\n(function () {\n  'use strict';\n\n  angular.module('BlurAdmin.theme.components')\n      .controller('MsgCenterCtrl', MsgCenterCtrl);\n\n  /** @ngInject */\n  function MsgCenterCtrl($scope, $sce) {\n    $scope.users = {\n      0: {\n        name: 'Vlad',\n      },\n      1: {\n        name: 'Kostya',\n      },\n      2: {\n        name: 'Andrey',\n      },\n      3: {\n        name: 'Nasta',\n      }\n    };\n\n    $scope.notifications = [\n      /*{\n        userId: 0,\n        template: '&name posted a new article.',\n        time: '1 min ago'\n      },\n      {\n        userId: 1,\n        template: '&name changed his contact information.',\n        time: '2 hrs ago'\n      },\n      {\n        image: 'assets/img/shopping-cart.svg',\n        template: 'New orders received.',\n        time: '5 hrs ago'\n      },\n      {\n        userId: 2,\n        template: '&name replied to your comment.',\n        time: '1 day ago'\n      },\n      {\n        userId: 3,\n        template: 'Today is &name\\'s birthday.',\n        time: '2 days ago'\n      },\n      {\n        image: 'assets/img/comments.svg',\n        template: 'New comments on your post.',\n        time: '3 days ago'\n      },\n      {\n        userId: 1,\n        template: '&name invited you to join the event.',\n        time: '1 week ago'\n      }*/\n    ];\n\n    $scope.messages = [\n      /*{\n        userId: 3,\n        text: 'After you get up and running, you can place Font Awesome icons just about...',\n        time: '1 min ago'\n      },\n      {\n        userId: 0,\n        text: 'You asked, Font Awesome delivers with 40 shiny new icons in version 4.2.',\n        time: '2 hrs ago'\n      },\n      {\n        userId: 1,\n        text: 'Want to request new icons? Here\\'s how. Need vectors or want to use on the...',\n        time: '10 hrs ago'\n      },\n      {\n        userId: 2,\n        text: 'Explore your passions and discover new ones by getting involved. Stretch your...',\n        time: '1 day ago'\n      },\n      {\n        userId: 3,\n        text: 'Get to know who we are - from the inside out. From our history and culture, to the...',\n        time: '1 day ago'\n      },\n      {\n        userId: 1,\n        text: 'Need some support to reach your goals? Apply for scholarships across a variety of...',\n        time: '2 days ago'\n      },\n      {\n        userId: 0,\n        text: 'Wrap the dropdown\\'s trigger and the dropdown menu within .dropdown, or...',\n        time: '1 week ago'\n      }*/\n    ];\n\n    $scope.getMessage = function(msg) {\n      var text = msg.template;\n      if (msg.userId || msg.userId === 0) {\n        text = text.replace('&name', '<strong>' + $scope.users[msg.userId].name + '</strong>');\n      }\n      return $sce.trustAsHtml(text);\n    };\n  }\n})();\n/**\n * @author v.lugovksy\n * created on 16.12.2015\n */\n(function () {\n  'use strict';\n\n  angular.module('BlurAdmin.theme.components')\n      .directive('msgCenter', msgCenter);\n\n  /** @ngInject */\n  function msgCenter() {\n    return {\n      restrict: 'E',\n      templateUrl: 'app/theme/components/msgCenter/msgCenter.html',\n      controller: 'MsgCenterCtrl'\n    };\n  }\n\n})();\n/**\n * @author v.lugovksy\n * created on 16.12.2015\n */\n(function () {\n  'use strict';\n\n  angular.module('BlurAdmin.theme.components')\n      .directive('pageTop', pageTop);\n\n  /** @ngInject */\n  function pageTop() {\n    return {\n      restrict: 'E',\n      templateUrl: 'app/theme/components/pageTop/pageTop.html'\n    };\n  }\n\n})();\n/**\n * Created by n.poltoratsky\n * on 28.06.2016.\n */\n(function () {\n    'use strict';\n\n    angular.module('BlurAdmin.theme.components')\n        .directive('progressBarRound', progressBarRound);\n\n    /** @ngInject */\n    function progressBarRound(baProgressModal) {\n        return {\n            restrict: 'E',\n            templateUrl: 'app/theme/components/progressBarRound/progressBarRound.html',\n            link:function($scope, element, attrs) {\n                $scope.baProgressDialog = baProgressModal;\n                $scope.$watch(function () {\n                    return baProgressModal.getProgress();\n                }, animateBar);\n\n                function animateBar() {\n                    var circle = element.find('#loader')[0];\n                    circle.setAttribute(\"stroke-dasharray\", baProgressModal.getProgress() * 180 * Math.PI / 100 + \", 20000\");\n                    $scope.progress = baProgressModal.getProgress();\n                }\n            }\n        }\n    }\n})();\n/**\n * @author v.lugovksy\n * created on 16.12.2015\n */\n(function () {\n  'use strict';\n\n  angular.module('BlurAdmin.theme.components')\n      .directive('widgets', widgets);\n\n  /** @ngInject */\n  function widgets() {\n    return {\n      restrict: 'EA',\n      scope: {\n        ngModel: '='\n      },\n      templateUrl: 'app/theme/components/widgets/widgets.html',\n      replace: true\n    };\n  }\n\n})();\n/**\n * @author v.lugovsky\n * created on 17.12.2015\n */\n(function () {\n  'use strict';\n\n  angular.module('BlurAdmin.theme')\n      .filter('appImage', appImage);\n\n  /** @ngInject */\n  function appImage(layoutPaths) {\n    return function(input) {\n      return layoutPaths.images.root + input;\n    };\n  }\n\n})();\n\n/**\n * @author v.lugovsky\n * created on 17.12.2015\n */\n(function () {\n  'use strict';\n\n  angular.module('BlurAdmin.theme')\n      .filter('kameleonImg', kameleonImg);\n\n  /** @ngInject */\n  function kameleonImg(layoutPaths) {\n    return function(input) {\n      return layoutPaths.images.root + 'theme/icon/kameleon/' + input + '.svg';\n    };\n  }\n\n})();\n\n/**\n * @author v.lugovsky\n * created on 17.12.2015\n */\n(function () {\n  'use strict';\n\n  angular.module('BlurAdmin.theme')\n      .filter('profilePicture', profilePicture);\n\n  /** @ngInject */\n  function profilePicture(layoutPaths) {\n    return function(input, ext) {\n      ext = ext || 'png';\n      return layoutPaths.images.profile + input + '.' + ext;\n    };\n  }\n\n})();\n\n/**\n * @author a.demeshko\n * created on 23.12.2015\n */\n(function () {\n  'use strict';\n\n  angular.module('BlurAdmin.theme')\n    .filter('plainText', plainText);\n\n  /** @ngInject */\n  function plainText() {\n    return function(text) {\n      return  text ? String(text).replace(/<[^>]+>/gm, '') : '';\n    };\n  }\n\n})();\n\n/**\n * @author v.lugovsky\n * created on 10.12.2016\n */\n(function () {\n  'use strict';\n\n  angular.module('BlurAdmin.theme.inputs')\n      .directive('baSwitcher', baSwitcher);\n\n  /** @ngInject */\n  function baSwitcher() {\n    return {\n      templateUrl: 'app/theme/inputs/baSwitcher/baSwitcher.html',\n      scope: {\n        switcherStyle: '@',\n        switcherValue: '='\n      }\n    };\n  }\n\n})();\n\n/* Minified js for jQuery BackTop */\n!function(o){o.fn.backTop=function(e){var n=this,i=o.extend({position:400,speed:500,color:\"white\"},e),t=i.position,c=i.speed,d=i.color;n.addClass(\"white\"==d?\"white\":\"red\"==d?\"red\":\"green\"==d?\"green\":\"black\"),n.css({right:40,bottom:40,position:\"fixed\"}),o(document).scroll(function(){var e=o(window).scrollTop();e>=t?n.fadeIn(c):n.fadeOut(c)}),n.click(function(){o(\"html, body\").animate({scrollTop:0},{duration:1200})})}}(jQuery);\nangular.module('BlurAdmin').run(['$templateCache', function($templateCache) {$templateCache.put('app/common/templates/control_sidebar.html','<ul class=\"nav nav-tabs nav-justified control-sidebar-tabs\"><li><a href=\"#control-sidebar-home-tab\" data-toggle=\"tab\"><i class=\"fa fa-home\"></i></a></li><li><a href=\"#control-sidebar-settings-tab\" data-toggle=\"tab\"><i class=\"fa fa-gears\"></i></a></li></ul><div class=\"tab-content\"><div class=\"tab-pane\" id=\"control-sidebar-home-tab\"><h3 class=\"control-sidebar-heading\">Recent Activity</h3><ul class=\"control-sidebar-menu\"><li><a href=\"javascript::;\"><i class=\"menu-icon fa fa-birthday-cake bg-red\"></i><div class=\"menu-info\"><h4 class=\"control-sidebar-subheading\">Langdon\\'s Birthday</h4><p>Will be 23 on April 24th</p></div></a></li><li><a href=\"javascript::;\"><i class=\"menu-icon fa fa-user bg-yellow\"></i><div class=\"menu-info\"><h4 class=\"control-sidebar-subheading\">Frodo Updated His Profile</h4><p>New phone +1(800)555-1234</p></div></a></li><li><a href=\"javascript::;\"><i class=\"menu-icon fa fa-envelope-o bg-light-blue\"></i><div class=\"menu-info\"><h4 class=\"control-sidebar-subheading\">Nora Joined Mailing List</h4><p>nora@example.com</p></div></a></li><li><a href=\"javascript::;\"><i class=\"menu-icon fa fa-file-code-o bg-green\"></i><div class=\"menu-info\"><h4 class=\"control-sidebar-subheading\">Cron Job 254 Executed</h4><p>Execution time 5 seconds</p></div></a></li></ul><h3 class=\"control-sidebar-heading\">Tasks Progress</h3><ul class=\"control-sidebar-menu\"><li><a href=\"javascript::;\"><h4 class=\"control-sidebar-subheading\">Custom Template Design <span class=\"label label-danger pull-right\">70%</span></h4><div class=\"progress progress-xxs\"><div class=\"progress-bar progress-bar-danger\" style=\"width: 70%\"></div></div></a></li><li><a href=\"javascript::;\"><h4 class=\"control-sidebar-subheading\">Update Resume <span class=\"label label-success pull-right\">95%</span></h4><div class=\"progress progress-xxs\"><div class=\"progress-bar progress-bar-success\" style=\"width: 95%\"></div></div></a></li><li><a href=\"javascript::;\"><h4 class=\"control-sidebar-subheading\">Laravel Integration <span class=\"label label-warning pull-right\">50%</span></h4><div class=\"progress progress-xxs\"><div class=\"progress-bar progress-bar-warning\" style=\"width: 50%\"></div></div></a></li><li><a href=\"javascript::;\"><h4 class=\"control-sidebar-subheading\">Back End Framework <span class=\"label label-primary pull-right\">68%</span></h4><div class=\"progress progress-xxs\"><div class=\"progress-bar progress-bar-primary\" style=\"width: 68%\"></div></div></a></li></ul></div><div class=\"tab-pane\" id=\"control-sidebar-settings-tab\"><form method=\"post\"><h3 class=\"control-sidebar-heading\">General Settings</h3><div class=\"form-group\"><label class=\"control-sidebar-subheading\">Report panel usage <input type=\"checkbox\" class=\"pull-right\" checked=\"\"></label><p>Some information about this general settings option</p></div><div class=\"form-group\"><label class=\"control-sidebar-subheading\">Allow mail redirect <input type=\"checkbox\" class=\"pull-right\" checked=\"\"></label><p>Other sets of options are available</p></div><div class=\"form-group\"><label class=\"control-sidebar-subheading\">Expose author name in posts <input type=\"checkbox\" class=\"pull-right\" checked=\"\"></label><p>Allow the user to show his name in blog posts</p></div><h3 class=\"control-sidebar-heading\">Chat Settings</h3><div class=\"form-group\"><label class=\"control-sidebar-subheading\">Show me as online <input type=\"checkbox\" class=\"pull-right\" checked=\"\"></label></div><div class=\"form-group\"><label class=\"control-sidebar-subheading\">Turn off notifications <input type=\"checkbox\" class=\"pull-right\"></label></div><div class=\"form-group\"><label class=\"control-sidebar-subheading\">Delete chat history <a href=\"javascript::;\" class=\"text-red pull-right\"><i class=\"fa fa-trash-o\"></i></a></label></div></form></div></div>');\n$templateCache.put('app/common/templates/fotter.html','<strong>Copyright &copy; 2016-2017 <a ui-sref=\"learningtutorial\">{{appName}}</a>.</strong> All rights reserved.');\n$templateCache.put('app/common/templates/header.html','<div ng-controller=\"HeaderCtrl\"><div ng-if=\"auth_user\"><cc-auto-refresh-fn refresh-fn=\"refreshList()\" refresh-interval=\"refreshOpts.interval\" refresh-model=\"list\" refresh-paused=\"refreshOpts.paused\" refresh-busy=\"refreshBusy\" refresh-on-refreshed=\"setLastRefreshed(eventArgs)\"></cc-auto-refresh-fn></div><a ui-sref=\"dashboard\" class=\"logo\"><span class=\"logo-mini\"></span><span class=\"logo-lg\"><b><img src=\"images/TranZLanta_LOGO.png\" alt=\"Tranzlanta\"></b></span></a><nav class=\"navbar navbar-static-top\" role=\"navigation\"><a class=\"logo1\"><span ng-if=\"company.company_name\" class=\"logo-lg\"><b ng-bind=\"company.company_name\"></b></span></a><div class=\"navbar-custom-menu\"><ul class=\"nav navbar-nav\"><li class=\"dropdown messages-menu\" ng-if=\"state.current.name != \\'track-transaction\\'\"><a href=\"#\" ng-click=\"getRecentMessage()\" class=\"dropdown-toggle\" data-toggle=\"dropdown\" ng-disabled=\"refreshBusy\" title=\"Track Transaction\"><i class=\"fa fa-eye\"></i></a><div class=\"dropdown-menu\"><div class=\"box-body\"><div class=\"row\"><form ng-submit=\"submitTransaction(track_transaction)\" role=\"form\" name=\"track_transaction\"><div class=\"col-xs-12\"><div class=\"form-group\"><label>Select user type<code>*</code></label><select chosen=\"\" inherit-select-classes=\"true\" ng-model=\"transaction.user_type\" validator=\"required\" valid-method=\"blur\" name=\"user_type\" validation-group=\"user_type_error_message\" required-error-message=\"{{transactionMessage.user_type.required}}\" ng-options=\"type.value as type.text for type in userType\" class=\"form-control\" ng-change=\"checkManualValidation(track_transaction,\\'user_type\\')\"></select><span id=\"user_type_error_message\"></span></div></div><div class=\"col-xs-12\"><div class=\"form-group\"><label>Transaction number<code>*</code></label> <input placeholder=\"Please enter transaction number\" type=\"text\" class=\"form-control\" name=\"number\" required-error-message=\"{{transactionMessage.number.required}}\" validator=\"required\" valid-method=\"blur\" ng-model=\"transaction.number\" chars=\"text\"></div></div><div class=\"col-xs-12\"><div class=\"form-group\"><label>Sender phone number<code>*</code></label> <input placeholder=\"Please enter sender phone number\" type=\"text\" class=\"form-control\" name=\"phone_number\" phone-input=\"\" required-error-message=\"{{transactionMessage.sender_phone_number.required}}\" maxlength-error-message=\"{{transactionMessage.sender_phone_number.maxlength}}\" validator=\"required, maxlength=15\" valid-method=\"blur\" ng-model=\"transaction.phone_number\"></div></div><div class=\"col-xs-12\"><button type=\"submit\" class=\"btn btn-info\" ng-disabled=\"isSubmitted\" align=\"center\">Track Transaction</button> <a type=\"submit\" ng-click=\"transaction={user_type: null};resetTransactionForm(track_transaction)\" class=\"dropdown-toggle btn btn-info\" data-toggle=\"dropdown\" align=\"center\">Cancel</a></div></form></div></div></div></li><li class=\"dropdown messages-menu\"><a href=\"#\" ng-click=\"getRecentMessage()\" class=\"dropdown-toggle\" data-toggle=\"dropdown\" ng-disabled=\"refreshBusy\"><i class=\"fa fa-envelope-o\"></i> <span class=\"label label-success\" ng-if=\"notifications.message > 0\">{{notifications.message}}</span></a><ul class=\"dropdown-menu\"><li class=\"header text-center\"><span ng-if=\"notifications.message > 0\">You have new {{notifications.message}} new messages</span> <span ng-if=\"notifications.message == 0\">You don\\'t have any new message</span></li><li><ul class=\"menu\"><li ng-repeat=\"sender in message_list\"><a href=\"#\"><div class=\"pull-left\"><img src=\"assets/img/user2-160x160.jpg\" class=\"img-circle\" alt=\"User Image\"></div><h4>{{ sender.message_broadcast.user.name }} <small><i class=\"fa fa-clock-o\"></i><span am-time-ago=\"sender.message_broadcast.created_at | amUtc | amLocal\"></span></small></h4><p>{{ sender.message_broadcast.message | cut : true:30 }}</p></a></li></ul></li><li class=\"footer\" ng-if=\"message_list.length\"><a href=\"javascript:void(0);\" ui-sref=\"message-broadcast-view\">See All Messages</a></li></ul></li><li class=\"dropdown notifications-menu\"><a href=\"#\" ng-click=\"getRecentNotification()\" class=\"dropdown-toggle\" data-toggle=\"dropdown\" ng-disabled=\"refreshBusy\"><i class=\"fa fa-bell-o\"></i> <span class=\"label label-warning\" ng-if=\"notifications.notification > 0\">{{notifications.notification}}</span></a><ul class=\"dropdown-menu\"><li class=\"header text-center\"><span ng-if=\"notifications.notification > 0\">have {{notifications.notification}} new notifications</span> <span ng-if=\"notifications.notification == 0\">You don\\'t have any new notification</span></li><li><ul class=\"menu\"><li ng-repeat=\"notification in notification_list\"><a ui-sref=\"{{notification.replace_message.url}}\"><p style=\"margin: 0 0 0px;\">{{notification.replace_message.message | cut : true:40 }}</p><small style=\"float: right; font-size: 70%;\"><i class=\"fa fa-clock-o\" style=\"margin-right: 2px;\"></i> <span am-time-ago=\"notification.created_at | amUtc | amLocal\"></span></small></a></li></ul></li><li class=\"footer\" ng-if=\"notification_list.length\"><a ui-sref=\"notifications\" href=\"#\">View all notifications</a></li></ul></li><li class=\"dropdown user user-menu\"><a href=\"\" class=\"dropdown-toggle\" data-toggle=\"dropdown\"><img src=\"assets/img/user2-160x160.jpg\" class=\"user-image\" alt=\"User Image\"> <span class=\"hidden-xs\">{{auth_user.name}}</span></a><ul class=\"dropdown-menu\"><li class=\"user-header\"><img src=\"assets/img/user2-160x160.jpg\" class=\"img-circle\" alt=\"User Image\"><p>{{auth_user.name}} - <span ng-repeat=\"(key, value) in role\">{{value | capitalize}}</span> <small>Member since - {{auth_user.created_at | amUtc | amLocal | amDateFormat:\\'MMMM, YYYY\\'}}</small></p></li><li class=\"user-footer\"><div class=\"pull-left\"><a ui-sref=\"me\" class=\"btn btn-default btn-flat\">Settings</a></div><div class=\"pull-right\"><a class=\"btn btn-default btn-flat\" ng-click=\"logout()\" ng-disabled=\"logoutInProgress\" ng-bind=\"logoutInProgress ? \\'Signing out...\\' : \\'Sign Out\\'\">Sign out</a></div></li></ul></li><li class=\"\"><a ng-click=\"toggleModal()\"><i class=\"fa fa-question\"></i></a></li></ul></div></nav></div>');\n$templateCache.put('app/common/templates/sidebar.html','<section class=\"sidebar\"><ul class=\"sidebar-menu\"><li class=\"treeview\" ui-sref-active=\"active\" ng-if=\"havePermission(\\'dashboard\\', \\'view\\');\"><a ui-sref=\"dashboard\"><i class=\"fa fa-dashboard\"></i> <span>Dashboard</span></a></li><li class=\"treeview\" ng-if=\"havePermission(\\'roles\\', \\'view\\');\" ng-class=\"{active: (\\'roles\\' | includedByState) || (\\'add-roles\\' | includedByState) || (\\'edit-roles\\' | includedByState)}\"><a ui-sref=\"roles\"><i class=\"fa fa-tasks\"></i> <span>Roles</span></a></li><li class=\"treeview\" ng-class=\"{active: (\\'company\\' | includedByState) || (\\'add-company\\' | includedByState) || (\\'edit-company\\' | includedByState) || (\\'users\\' | includedByState) || (\\'add-users\\' | includedByState) || (\\'edit-users\\' | includedByState) || (\\'agents\\' | includedByState) || (\\'add-agents\\' | includedByState) || (\\'edit-agents\\' | includedByState) || (\\'payee-agents\\' | includedByState) || (\\'add-payee-agents\\' | includedByState) || (\\'edit-payee-agents\\' | includedByState) || (\\'web-users\\' | includedByState) || (\\'add-web-users\\' | includedByState) || (\\'edit-web-users\\' | includedByState)}\" ng-if=\"(havePermission(\\'admin\\', \\'view\\')) || (havePermission(\\'supersubadmin\\', \\'view\\')) || (havePermission(\\'agent\\', \\'view\\')) || (havePermission(\\'payeeagent\\', \\'view\\')) || (havePermission(\\'webuser\\', \\'view\\'))\"><a href=\"#\"><i class=\"fa fa-users\"></i><span>Users</span> <i class=\"fa fa-angle-left pull-right\"></i></a><ul class=\"treeview-menu\"><li ng-if=\"havePermission(\\'admin\\', \\'view\\');\" ng-class=\"{active: (\\'company\\' | includedByState) || (\\'add-company\\' | includedByState) || (\\'edit-company\\' | includedByState)}\"><a ui-sref=\"company\"><i class=\"fa fa-building\"></i> <span>Companies</span></a></li><li ng-if=\"havePermission(\\'supersubadmin\\', \\'view\\');\" ng-class=\"{active: (\\'users\\' | includedByState) || (\\'add-users\\' | includedByState) || (\\'edit-users\\' | includedByState)}\"><a ui-sref=\"users\"><i class=\"fa fa-user-secret\"></i> <span>Super Sub Admin</span></a></li><li ng-class=\"{active: (\\'agents\\' | includedByState) || (\\'add-agents\\' | includedByState) || (\\'edit-agents\\' | includedByState)}\" ng-if=\"havePermission(\\'agent\\', \\'view\\');\"><a ui-sref=\"agents\"><i class=\"fa fa-users\"></i> <span>Agents</span></a></li><li ng-class=\"{active: (\\'payee-agents\\' | includedByState) || (\\'add-payee-agents\\' | includedByState) || (\\'edit-payee-agents\\' | includedByState)}\" ng-if=\"havePermission(\\'payeeagent\\', \\'view\\');\"><a ui-sref=\"payee-agents\"><i class=\"fa fa-user\"></i> <span>Payee Agents</span></a></li><li ng-class=\"{active: (\\'web-users\\' | includedByState) || (\\'add-web-users\\' | includedByState) || (\\'edit-web-users\\' | includedByState)}\" ng-if=\"havePermission(\\'webuser\\', \\'view\\');\"><a ui-sref=\"web-users\"><i class=\"fa fa-user-plus\"></i> <span>Web Users</span></a></li></ul></li><li class=\"treeview\" ng-if=\"(havePermission(\\'banks\\', \\'view\\')) || (havePermission(\\'branch\\', \\'view\\'))\" ng-class=\"{active: (\\'banks\\' | includedByState) || (\\'add-banks\\' | includedByState) || (\\'edit-banks\\' | includedByState) || (\\'bankbranchs\\' | includedByState) || (\\'add-bankbranchs\\' | includedByState) || (\\'edit-bankbranchs\\' | includedByState) }\"><a href=\"#\"><i class=\"fa fa-user\"></i><span>Bank</span> <i class=\"fa fa-angle-left pull-right\"></i></a><ul class=\"treeview-menu\"><li ng-class=\"{active: (\\'banks\\' | includedByState) || (\\'add-banks\\' | includedByState) || (\\'edit-banks\\' | includedByState)}\" ng-if=\"havePermission(\\'banks\\', \\'view\\');\"><a ui-sref=\"banks\"><i class=\"fa fa-circle-o\"></i> <span>Bank</span></a></li><li ng-class=\"{active: (\\'bankbranchs\\' | includedByState) || (\\'add-bankbranchs\\' | includedByState) || (\\'edit-bankbranchs\\' | includedByState)}\" ng-if=\"havePermission(\\'branch\\', \\'view\\');\"><a ui-sref=\"bankbranchs\"><i class=\"fa fa-circle-o\"></i> <span>Bank Branches</span></a></li></ul></li><li class=\"treeview\" ng-class=\"{active: (\\'message-broadcast\\' | includedByState)}\" ng-if=\"havePermission(\\'messagebroadcast\\', \\'view\\');\"><a ui-sref=\"message-broadcast\"><i class=\"fa fa-edit\"></i><span>Message Broadcast</span></a></li><li class=\"treeview\" ng-class=\"{active: (\\'transaction\\' | includedByState) || (\\'add-transaction\\' | includedByState) || (\\'edit-transaction\\' | includedByState)}\" ng-if=\"havePermission(\\'transaction\\', \\'view\\');\"><a ui-sref=\"transaction\"><i class=\"fa fa-transgender\"></i> <span>Transaction</span></a></li><li class=\"treeview\" ng-class=\"{active: (\\'cheque\\' | includedByState) || (\\'view-cheque\\' | includedByState)}\" ng-if=\"havePermission(\\'cheque\\', \\'view\\');\"><a ui-sref=\"cheque\"><i class=\"fa fa-clone\"></i> <span>Cheque</span></a></li><li class=\"treeview\" ng-class=\"{active: (\\'report\\' | includedByState) || (\\'cheque-report\\' | includedByState)}\" ng-if=\"havePermission(\\'transaction\\', \\'view\\');\"><a href=\"#\"><i class=\"fa fa-book\"></i><span>Report</span> <i class=\"fa fa-angle-left pull-right\"></i></a><ul class=\"treeview-menu\"><li ng-class=\"{active: (\\'report\\' | includedByState)}\" ng-if=\"havePermission(\\'transaction\\', \\'view\\');\"><a ui-sref=\"report\"><i class=\"fa fa-circle-o\"></i> <span>Transaction Report</span></a></li><li ng-class=\"{active: (\\'cheque-report\\' | includedByState)}\" ng-if=\"havePermission(\\'transaction\\', \\'view\\');\"><a ui-sref=\"cheque-report\"><i class=\"fa fa-circle-o\"></i> <span>Cheque Report</span></a></li></ul></li><li class=\"treeview\" ng-class=\"{active: (\\'sales\\' | includedByState)}\" ng-if=\"havePermission(\\'transaction\\', \\'view\\');\"><a ui-sref=\"sales\"><i class=\"fa fa-file\"></i> <span>Sales</span></a></li><li class=\"treeview\" ng-class=\"{active: (\\'commission\\' | includedByState)}\" ng-if=\"havePermission(\\'transaction\\', \\'view\\');\"><a ui-sref=\"commission\"><i class=\"fa fa-money\"></i> <span>Commission</span></a></li><li class=\"treeview\" ng-class=\"{active: (\\'service-location\\' | includedByState) || (\\'add-service-location\\' | includedByState) || (\\'edit-service-location\\' | includedByState)}\" ng-if=\"havePermission(\\'servicelocation\\', \\'view\\') || hasRole(\\'admin\\');\"><a ui-sref=\"service-location\"><i class=\"fa fa-location-arrow\"></i> <span>Service Location</span></a></li><li class=\"treeview\" ng-if=\"havePermission(\\'servicelocation\\', \\'search\\');\" ng-class=\"{active: (\\'search-service\\' | includedByState)}\"><a ui-sref=\"search-service\"><i class=\"fa fa-search\"></i> <span>Search Service Availability</span></a></li><li class=\"treeview\" ng-class=\"{active: (\\'feedbacks\\' | includedByState) || (\\'add-feedbacks\\' | includedByState) || (\\'edit-feedbacks\\' | includedByState) || (\\'details-feedbacks\\' | includedByState)}\" ng-if=\"havePermission(\\'feedbacks\\', \\'view\\');\"><a ui-sref=\"feedbacks\"><i class=\"fa fa-transgender\"></i> <span>Feedback</span></a></li><li class=\"treeview\" ng-if=\"havePermission(\\'banks\\', \\'view\\');\" ng-class=\"{active: (\\'ofac_search\\' | includedByState)}\"><a ui-sref=\"ofac_search\"><i class=\"fa fa-search\"></i> <span>OFAC Search</span></a></li><li class=\"treeview\" ng-if=\"havePermission(\\'transactionlimitrequest\\', \\'view\\');\" ng-class=\"{active: (\\'transaction-limit-request\\' | includedByState)}\"><a ui-sref=\"transaction-limit-request\"><i class=\"fa fa-search\"></i> <span>Transaction Limit Request</span></a></li><li class=\"treeview\" ng-if=\"(havePermission(\\'aboutus\\', \\'view\\')) || (havePermission(\\'termsandconditions\\', \\'view\\'))\" ng-class=\"{active: (\\'aboutus\\' | includedByState) || (\\'edit-aboutus\\' | includedByState) || (\\'terms-conditions\\' | includedByState) || (\\'edit-terms-conditions\\' | includedByState) || (\\'contactus\\' | includedByState) || (\\'add-contactus\\' | includedByState) || (\\'policy\\' | includedByState) || (\\'offers\\' | includedByState) || (\\'add-offers\\' | includedByState) || (\\'edit-offers\\' | includedByState)}\"><a href=\"#\"><i class=\"fa fa-info\"></i><span>System Information</span> <i class=\"fa fa-angle-left pull-right\"></i></a><ul class=\"treeview-menu\"><li ng-class=\"{active: (\\'aboutus\\' | includedByState) || (\\'edit-aboutus\\' | includedByState)}\" ng-if=\"havePermission(\\'aboutus\\', \\'view\\');\"><a ui-sref=\"aboutus\"><i class=\"fa fa-circle-o\"></i>About Us</a></li><li ng-class=\"{active: (\\'terms-conditions\\' | includedByState) || (\\'edit-terms-conditions\\' | includedByState)}\" ng-if=\"havePermission(\\'termsandconditions\\', \\'view\\');\"><a ui-sref=\"terms-conditions\"><i class=\"fa fa-circle-o\"></i>Terms & Conditions</a></li><li ng-class=\"{active: (\\'contactus\\' | includedByState) }\" ng-if=\"(havePermission(\\'contactus\\', \\'view\\') || havePermission(\\'contactus\\', \\'create\\'));\"><a ui-sref=\"contactus\" ng-if=\"hasRole(\\'admin\\')\"><i class=\"fa fa-circle-o\"></i> <span>Contact Us</span></a> <a ui-sref=\"add-contactus\" ng-class=\"{ active : (\\'add-contactus\\' | includedByState)}\" ng-if=\"!hasRole(\\'admin\\')\"><i class=\"fa fa-circle-o\"></i> <span>Contact Us</span></a></li><li ng-class=\"{active: (\\'policy\\' | includedByState) }\" ng-if=\"havePermission(\\'privacyandpolicy\\', \\'view\\');\"><a ui-sref=\"policy\"><i class=\"fa fa-circle-o\"></i> <span>Privacy Policy</span></a></li><li class=\"treeview\" ng-if=\"havePermission(\\'offerandpromotion\\', \\'view\\');\" ng-class=\"{active: (\\'offers\\' | includedByState) || (\\'add-offers\\' | includedByState) || (\\'edit-offers\\' | includedByState)}\"><a ui-sref=\"offers\"><i class=\"fa fa-circle-o\"></i> <span>Offers and Promotion</span></a></li></ul></li><li class=\"treeview\" ng-if=\"havePermission(\\'notifications\\', \\'view\\');\" ng-class=\"{active: (\\'notifications\\' | includedByState)}\"><a ui-sref=\"notifications\"><i class=\"fa fa-search\"></i> <span>Notifications</span></a></li><li class=\"treeview\" ng-if=\"havePermission(\\'currencyconvertorrate\\', \\'view\\');\" ng-class=\"{active: (\\'currency\\' | includedByState)}\"><a ui-sref=\"currency\"><i class=\"fa fa-search\"></i> <span>Currency Convert</span></a></li><li class=\"treeview\" ng-class=\"{active: (\\'beneficiaries-users\\' | includedByState) || (\\'sender-users\\' | includedByState)}\"><a href=\"#\"><i class=\"fa fa-user\"></i><span>Transaction Users</span> <i class=\"fa fa-angle-left pull-right\"></i></a><ul class=\"treeview-menu\"><li ng-class=\"{active: (\\'beneficiaries-users\\' | includedByState)}\"><a ui-sref=\"beneficiaries-users\"><i class=\"fa fa-users\"></i> <span>Beneficiary</span></a></li><li ng-class=\"{active: (\\'sender-users\\' | includedByState)}\"><a ui-sref=\"sender-users\"><i class=\"fa fa-users\"></i> <span>Sender Users</span></a></li></ul></li></ul></section>');\n$templateCache.put('app/pages/ApiManagements/add.html','<div class=\"row\"><div class=\"col-md-6\"><div ba-panel=\"\" ba-panel-title=\"{{pageName}}\" ba-panel-class=\"with-scroll\"><form ng-submit=\"add_data(add_form)\" role=\"form\" name=\"add_form\"><div class=\"form-group\"><label>Company Name<code>*</code></label> <input type=\"text\" ng-model=\"formscope.name\" name=\"name\" class=\"form-control\" placeholder=\"Please enter company name\" required-error-message=\"{{errorMessage.name.required}}\" focus-me=\"\" minlength-error-message=\"{{errorMessage.name.minlength}}\" maxlength-error-message=\"{{errorMessage.name.maxlength}}\" validator=\"required, minlength=2, maxlength=50\" chars=\"slug\" maxlength=\"50\"></div><div class=\"form-group\"><label>API Key<code>*</code></label><div class=\"input-group\"><input type=\"text\" ng-model=\"formscope.api_key\" name=\"api_key\" class=\"form-control\" placeholder=\"Please enter api key\" required-error-message=\"{{errorMessage.api_key.required}}\" minlength-error-message=\"{{errorMessage.api_key.minlength}}\" maxlength-error-message=\"{{errorMessage.api_key.maxlength}}\" readonly=\"\" validator=\"required, minlength=16, maxlength=16\" valid-method=\"blur\"> <span class=\"input-group-btn\"><button class=\"btn btn-primary\" ng-click=\"changeKey()\" type=\"button\">Reset</button></span></div></div><div class=\"form-group\"><label>IP Address<code>*</code></label> <input type=\"text\" ng-model=\"formscope.ipaddress\" name=\"ipaddress\" class=\"form-control\" placeholder=\"Please enter ip address\" required-error-message=\"{{errorMessage.ipaddress.required}}\" validator=\"required, ipaddress\"></div><div class=\"form-group\" ng-if=\"state.current.name == \\'ApiManagements.edit\\'\"><label>Slug</label><div class=\"input-group\"><span>{{formscope.slug}}</span></div></div><div class=\"form-group\"><label>Status</label><select chosen=\"\" ng-model=\"formscope.status\" name=\"status\" ng-options=\"company.value as company.text for company in statusOption\" class=\"form-control\"></select></div><button type=\"submit\" ng-disabled=\"isSubmitted\" class=\"btn btn-success\" align=\"center\">{{btnName}}</button> <a type=\"submit\" ui-sref=\"ApiManagements.list\" class=\"btn btn-info\" align=\"center\">Cancel</a></form></div></div></div>');\n$templateCache.put('app/pages/ApiManagements/view.html','<div class=\"widgets\"><div class=\"row\"><div class=\"col-md-12\"><div ba-panel=\"\" ba-panel-title=\"{{ pageName }} Listing\"><div class=\"form-group select-page-size-wrap\"><button class=\"btn btn-primary\" ng-if=\"havePermission(\\'api_managements\\',\\'create\\');\" ui-sref=\"ApiManagements.add\">Add</button></div><div class=\"horizontal-scroll\"><table datatable=\"\" dt-instance=\"dtInstance\" dt-options=\"dtOptions\" dt-columns=\"dtColumns\" class=\"row-border hover\"></table></div></div></div></div></div>');\n$templateCache.put('app/pages/contactmanagements/add.html','<div class=\"widgets\"><div class=\"row\"><div class=\"col-md-8\"><div ba-panel=\"\" ba-panel-title=\"{{pageName}}\" ba-panel-class=\"with-scroll\"><div class=\"ng-cloak\"><form class=\"form-validation\" ng-submit=\"add_data(add_form)\" role=\"form\" name=\"add_form\"><div class=\"row\"><div class=\"form-group col-lg-4 col-md-12 col-sm-12\"><label for=\"input01\">First Name<code>*</code></label> <input type=\"text\" focus-me=\"\" class=\"form-control\" ng-model=\"formscope.first_name\" placeholder=\"Please enter first name\" name=\"first_name\" required-error-message=\"{{errorMessage.first_name.required}}\" minlength-error-message=\"{{errorMessage.first_name.minlength}}\" maxlength-error-message=\"{{errorMessage.first_name.maxlength}}\" validator=\"required, minlength=2, maxlength=20\" valid-method=\"blur\" chars=\"letters\"></div><div class=\"form-group col-lg-4 col-md-12 col-sm-12\"><label for=\"input01\">Middle Name</label> <input type=\"text\" class=\"form-control\" ng-model=\"formscope.middle_name\" placeholder=\"Please enter first name\" name=\"middle_name\"></div><div class=\"form-group col-lg-4 col-md-12 col-sm-12\"><label for=\"input01\">Last Name<code>*</code></label> <input type=\"text\" class=\"form-control\" ng-model=\"formscope.last_name\" placeholder=\"Please enter Last name\" name=\"last_name\" required-error-message=\"{{errorMessage.last_name.required}}\" minlength-error-message=\"{{errorMessage.last_name.minlength}}\" maxlength-error-message=\"{{errorMessage.last_name.maxlength}}\" validator=\"required, minlength=2, maxlength=20\" valid-method=\"blur\" chars=\"letters\"></div></div><div class=\"row\"><div class=\"form-group col-lg-6 col-md-12 col-sm-12\"><label for=\"input01\">Email<code>*</code></label> <input type=\"email\" class=\"form-control\" ng-model=\"formscope.email\" placeholder=\"Please enter email\" name=\"email\" required-error-message=\"{{errorMessage.email.required}}\" email-error-message=\"{{errorMessage.email.invalidEmail}}\" minlength-error-message=\"{{errorMessage.email.minlength}}\" maxlength-error-message=\"{{errorMessage.email.maxlength}}\" validator=\"required, email, minlength=2, maxlength=100\" valid-method=\"blur\"></div><div class=\"form-group col-lg-6 col-md-12 col-sm-12\"><label for=\"textarea01\">Visitor Type<code>*</code></label><select chosen=\"\" ng-model=\"formscope.visitor_type\" name=\"visitor_type\" ng-options=\"company.id as company.name for company in VisitorOption\" class=\"form-control\" required-error-message=\"{{errorMessage.visitor_type.required}}\" validator=\"required\" valid-method=\"watch, blur\" validation-group=\"visitor_type_error_message\"></select><span id=\"visitor_type_error_message\"></span></div></div><div class=\"row\"><div class=\"form-group col-lg-6 col-md-12 col-sm-12\"><label for=\"textarea01\">Organization</label> <input type=\"text\" class=\"form-control\" ng-model=\"formscope.organization\" placeholder=\"Please enter your organization name\" chars=\"text\" name=\"organization\"></div><div class=\"form-group col-lg-6 col-md-12 col-sm-12\"><label for=\"textarea01\">Organization Type</label><select chosen=\"\" ng-model=\"formscope.organization_id\" name=\"organization_id\" ng-options=\"company.id as company.name for company in OrganizationOption\" class=\"form-control\"></select></div></div><div class=\"row\"><div class=\"form-group col-lg-6 col-md-12 col-sm-12\"><label for=\"input04\">Mobile<code>*</code></label> <input type=\"text\" class=\"form-control\" ng-model=\"formscope.mobile\" placeholder=\"Please enter your mobile number\" phone-input=\"\" name=\"mobile\" required-error-message=\"{{errorMessage.mobile.required}}\" maxlength-error-message=\"{{errorMessage.mobile.maxlength}}\" minlength-error-message=\"{{errorMessage.mobile.minlength}}\" validator=\"required, maxlength=15, minlength=10\" valid-method=\"blur\" chars=\"numbers\"></div><div class=\"form-group col-lg-6 col-md-12 col-sm-12\"><label for=\"input04\">Alternate Phone Number</label> <input type=\"text\" class=\"form-control\" ng-model=\"formscope.phone_number\" placeholder=\"Please enter your alternate phone number\" phone-input=\"\" name=\"phone_number\" chars=\"numbers\"></div></div><div class=\"row\"><div class=\"form-group col-lg-6 col-md-12 col-sm-12\"><label>Street 1</label> <input type=\"text\" class=\"form-control\" ng-model=\"formscope.address\" placeholder=\"Please enter Street 1\" name=\"address\" chars=\"text\"></div><div class=\"form-group col-lg-6 col-md-12 col-sm-12\"><label>Street 2</label> <input type=\"text\" class=\"form-control\" ng-model=\"formscope.address1\" placeholder=\"Please enter Street 2\" name=\"address1\" chars=\"text\"></div></div><div class=\"row\"><div class=\"form-group col-lg-6 col-md-12 col-sm-12\"><label>Country</label><select chosen=\"\" ng-model=\"formscope.country_id\" name=\"country_id\" ng-options=\"country.id as country.country_name for country in countries\" class=\"form-control\"></select></div><div class=\"form-group col-lg-6 col-md-12 col-sm-12\"><label>State</label> <input type=\"text\" class=\"form-control\" ng-model=\"formscope.state\" placeholder=\"Please enter state name\" name=\"state\" chars=\"text\"></div></div><div class=\"row\"><div class=\"form-group col-lg-6 col-md-12 col-sm-12\"><label>City</label> <input type=\"text\" class=\"form-control\" ng-model=\"formscope.city\" placeholder=\"Please enter city name\" name=\"city\" chars=\"text\"></div><div class=\"form-group col-lg-6 col-md-12 col-sm-12\"><label>Zip Code</label> <input type=\"text\" placeholder=\"Please enter zip code\" class=\"form-control\" name=\"zip_code\" ng-model=\"formscope.zip_code\" chars=\"numbers\"></div></div><div class=\"row\"><div class=\"form-group col-lg-6 col-md-12 col-sm-12\"><label for=\"textarea01\">Gender</label><select chosen=\"\" ng-model=\"formscope.gender\" name=\"gender\" ng-options=\"company.value as company.label for company in genderOption\" class=\"form-control\"></select></div><div class=\"form-group col-lg-6 col-md-12 col-sm-12\"><label>Status<code>*</code></label><select chosen=\"\" ng-model=\"formscope.status\" name=\"status\" ng-options=\"company.value as company.text for company in statusOption\" class=\"form-control\" required-error-message=\"{{errorMessage.status.required}}\" validator=\"required\" valid-method=\"blur\" validation-group=\"status_error_message\"></select><span id=\"status_error_message\"></span></div></div><div class=\"row\"><div class=\"form-group col-md-12\"><button type=\"submit\" ng-disabled=\"isSubmitted\" class=\"btn btn-success\" align=\"center\">{{btnName}}</button> <a type=\"submit\" ui-sref=\"contactmanagements.list\" class=\"btn btn-info\" align=\"center\">Cancel</a></div></div></form></div></div></div></div></div>');\n$templateCache.put('app/pages/contactmanagements/view.html','<div class=\"widgets\"><div class=\"row\"><div class=\"col-md-12\"><div ba-panel=\"\" ba-panel-title=\"{{ activePageTitle }} Listing\"><div class=\"form-group select-page-size-wrap\"><button class=\"btn btn-primary\" ng-if=\"havePermission(\\'contactmanagements\\',\\'create\\');\" ui-sref=\"contactmanagements.add\">Add</button></div><div class=\"horizontal-scroll\"><table datatable=\"\" dt-instance=\"dtInstance\" dt-options=\"dtOptions\" dt-columns=\"dtColumns\" class=\"row-border hover\"></table></div></div></div></div></div>');\n$templateCache.put('app/pages/contactmanagements/viewdetails.html','<div class=\"widgets\"><div class=\"viewTourMain\"><div class=\"message\"><div class=\"row\"><div class=\"col-md-12\"><div ba-panel=\"\" ba-panel-class=\"\"><button ui-sref=\"contactmanagements.list\" type=\"button\" class=\"back-button btn btn-default btn-with-icon pull-right\"><i class=\"ion-chevron-left\"></i>Back</button><div class=\"person-info\"></div><div class=\"col-md-12\"><div class=\"row\"><div class=\"form-group col-lg-6 col-md-12 col-sm-12\"><h3 class=\"with-line\">General Information</h3><div class=\"form-group row clearfix\"><label class=\"col-sm-3 col-xs-6\">Name:</label><div class=\"col-sm-9 col-xs-6\">{{formscope.name || \\'-\\'}}</div></div><div class=\"form-group row clearfix\"><label class=\"col-sm-3 col-xs-6\">Gender:</label><div class=\"col-sm-9 col-xs-6\">{{ showStatus(formscope)}}</div></div><div class=\"form-group row clearfix\"><label class=\"col-sm-3 col-xs-6\">Visitor:</label><div class=\"col-sm-9 col-xs-6\">{{formscope.visitor.name || \\'-\\'}}</div></div><div class=\"form-group row clearfix\"><label class=\"col-sm-3 col-xs-6\">Organization:</label><div class=\"col-sm-9 col-xs-6\">{{ formscope.organization || \\'-\\'}}</div></div><div class=\"form-group row clearfix\"><label class=\"col-sm-3 col-xs-6\">Organization Type:</label><div class=\"col-sm-9 col-xs-6\">{{ organizationType(formscope)}}</div></div></div><div class=\"form-group col-lg-6 col-md-12 col-sm-12\"><h3 class=\"with-line\">Contact Information</h3><div class=\"form-group row clearfix\"><label class=\"col-sm-3 col-xs-6\">Email:</label><div class=\"col-sm-9 col-xs-6\">{{formscope.email || \\'-\\'}}</div></div><div class=\"form-group row clearfix\"><label class=\"col-sm-3 col-xs-6\">Mobile:</label><div class=\"col-sm-9 col-xs-6\">{{formscope.mobile || \\'-\\'}}</div></div><div class=\"form-group row clearfix\"><label class=\"col-sm-3 col-xs-6\">Phone Number:</label><div class=\"col-sm-9 col-xs-6\">{{formscope.phone_number || \\'-\\'}}</div></div></div></div><div class=\"row\"><div class=\"form-group col-lg-6 col-md-12 col-sm-12\"><h3 class=\"with-line\">Address Information</h3><div class=\"form-group row clearfix\"><label class=\"col-sm-3 col-xs-6\">Street 1:</label><div class=\"col-sm-9 col-xs-6\">{{formscope.address || \\'-\\'}}</div></div><div class=\"form-group row clearfix\"><label class=\"col-sm-3 col-xs-6\">Street 2:</label><div class=\"col-sm-9 col-xs-6\">{{formscope.address1 || \\'-\\'}}</div></div><div class=\"form-group row clearfix\"><label class=\"col-sm-3 col-xs-6\">City:</label><div class=\"col-sm-9 col-xs-6\">{{formscope.city || \\'-\\'}}</div></div><div class=\"form-group row clearfix\"><label class=\"col-sm-3 col-xs-6\">State:</label><div class=\"col-sm-9 col-xs-6\">{{formscope.state || \\'-\\'}}</div></div><div class=\"form-group row clearfix\"><label class=\"col-sm-3 col-xs-6\">Country:</label><div class=\"col-sm-9 col-xs-6\">{{formscope.country.country_name || \\'-\\'}}</div></div><div class=\"form-group row clearfix\"><label class=\"col-sm-3 col-xs-6\">Zip Code:</label><div class=\"col-sm-9 col-xs-6\">{{formscope.zip_code || \\'-\\'}}</div></div></div><div class=\"form-group col-lg-6 col-md-12 col-sm-12\"><h3 class=\"with-line\">Professional Information</h3><div class=\"form-group row clearfix\"><label class=\"col-sm-3 col-xs-6\">Join Date:</label><div class=\"col-sm-9 col-xs-6\">{{formscope.created_at | amDateFormat:\\'(dddd) DD, MMMM YYYY\\'}}</div></div><div class=\"form-group row clearfix\"><label class=\"col-sm-3 col-xs-6\">Status:</label><div class=\"col-sm-9 col-xs-6\">{{ (formscope.status == 1) ? \\'Active\\' : \\'Inactive\\' }}</div></div></div></div></div></div></div></div></div></div></div>');\n$templateCache.put('app/pages/dashboard/dashboard.html','<div class=\"row\"><div class=\"col-xs-12 col-sm-12\" ba-panel=\"\" ba-panel-class=\"popular-app medium-panel\"><div class=\"popular-app-cost row\"><div class=\"col-xs-9\">Total Tours</div><div class=\"col-xs-3 text-right popular-app-info-font-color\"><a type=\"submit\" ui-sref=\"tours.list\" title=\"View Tour list\" align=\"center\">{{totalTour}}</a></div></div><div class=\"popular-app-info row\"><div class=\"form-group col-xs-6 col-sm-4 col-md-3 col-lg-2 text-center\" ng-repeat=\"(key, value) in tourFilterData\"><div class=\"info-label\">{{ key.replace(\"_\", \" \").replace(\"_\", \" \"); }}</div><div ng-if=\"$index != 5\" class=\"popular-app-info-font-color\"><a href=\"#/tours/list?id={{$index+1}}\">{{ value }}</a></div><div ng-if=\"$index == 5\" class=\"popular-app-info-font-color\">{{ value }}</div></div></div></div></div><div class=\"row\"><div class=\"col-md-12\"><div ba-panel=\"\" ba-panel-title=\"Upcoming tours\"><div class=\"form-group select-page-size-wrap\"><button class=\"btn btn-primary\" ng-if=\"havePermission(\\'tours\\',\\'create\\');\" ui-sref=\"tours.add\">Add Tour</button></div><div class=\"horizontal-scroll\"><table datatable=\"\" dt-instance=\"$parent.dtInstance\" dt-options=\"dtOptions\" dt-columns=\"dtColumns\" class=\"row-border hover\"></table></div></div></div></div><div class=\"row\"><div class=\"col-xs-12\" ba-panel=\"\" ba-panel-title=\"Tour Schedule\" ba-panel-class=\"xmedium-panel feed-comply-panel with-scroll calendar-panel\"><dashboard-calendar></dashboard-calendar></div></div><div class=\"row pie-charts\" ng-if=\"charts.length\"><div class=\"pie-chart-item-container\" ng-repeat=\"chart in charts\"><div ba-panel=\"\"><div class=\"pie-chart-item\"><div class=\"ion-ios-people chart\" data-pack=\"ios\" data-tags=\"stalker, person, users, head, human\" style=\"display: inline-block;font-size: 75px;\"></div><div class=\"description\"><div>{{ chart.role_name }}</div><div class=\"description-stats\">{{ chart.count }}</div></div></div></div></div></div>');\n$templateCache.put('app/pages/defaulttasks/add.html','<div class=\"widgets\"><div class=\"row\"><div class=\"col-md-6\"><div ba-panel=\"\" ba-panel-title=\"Add Users\" ba-panel-class=\"with-scroll\"><div class=\"ng-cloak\" ng-controller=\"UsersCtrl as selectpickerVm\"><form class=\"form-validation\" ng-submit=\"add_data(add_form)\" role=\"form\" name=\"add_form\"><div class=\"form-group col-md-12\"><div class=\"form-group col-md-6\"><label for=\"input01\">First Name<code>*</code></label> <input type=\"text\" class=\"form-control\" ng-model=\"formscope.first_name\" placeholder=\"Please enter first name\" name=\"first_name\" required-error-message=\"{{errorMessage.first_name.required}}\" minlength-error-message=\"{{errorMessage.first_name.minlength}}\" maxlength-error-message=\"{{errorMessage.first_name.maxlength}}\" validator=\"required, minlength=2, maxlength=20\" valid-method=\"blur\" chars=\"letters\"></div><div class=\"form-group col-md-6\"><label for=\"input01\">Last Name<code>*</code></label> <input type=\"text\" class=\"form-control\" ng-model=\"formscope.last_name\" placeholder=\"Please enter Last name\" name=\"last_name\" required-error-message=\"{{errorMessage.last_name.required}}\" minlength-error-message=\"{{errorMessage.last_name.minlength}}\" maxlength-error-message=\"{{errorMessage.last_name.maxlength}}\" validator=\"required, minlength=2, maxlength=20\" valid-method=\"blur\" chars=\"letters\"></div></div><div class=\"form-group col-md-12\"><div class=\"form-group col-md-12\"><label for=\"input01\">Email<code>*</code></label> <input type=\"email\" class=\"form-control\" ng-model=\"formscope.email\" placeholder=\"Please enter email\" name=\"email\" required-error-message=\"{{errorMessage.email.required}}\" email-error-message=\"{{errorMessage.email.invalidEmail}}\" minlength-error-message=\"{{errorMessage.email.minlength}}\" maxlength-error-message=\"{{errorMessage.email.maxlength}}\" validator=\"required, email, minlength=2, maxlength=100\" valid-method=\"blur\"></div></div><div class=\"form-group col-md-12\"><div class=\"form-group col-md-6\"><label for=\"textarea01\">Organization Type<code>*</code></label><select ng-model=\"formscope.organization_id\" name=\"organization_id\" ng-options=\"company.id as company.name for company in OrganizationOption\" class=\"form-control\" required-error-message=\"{{errorMessage.organization_id.required}}\" validator=\"required\" valid-method=\"blur\"></select></div><div class=\"form-group col-md-6\"><label for=\"textarea01\">Visitor Type<code>*</code></label><select ng-model=\"formscope.visitor_type\" name=\"visitor_type\" ng-options=\"company.id as company.name for company in VisitorOption\" class=\"form-control\" required-error-message=\"{{errorMessage.visitor_type.required}}\" validator=\"required\" valid-method=\"blur\"></select></div></div><div class=\"form-group col-md-12\"><div class=\"form-group col-md-6\"><label for=\"input04\">Phone Number<code>*</code></label> <input type=\"text\" class=\"form-control\" ng-model=\"formscope.phone_number\" placeholder=\"Please enter your phone number\" phone-input=\"\" name=\"phone_number\" required-error-message=\"{{errorMessage.phone_number.required}}\" maxlength-error-message=\"{{errorMessage.phone_number.maxlength}}\" minlength-error-message=\"{{errorMessage.phone_number.minlength}}\" validator=\"required, maxlength=15, minlength=10\" valid-method=\"blur\" chars=\"numbers\"></div><div class=\"form-group col-md-6\"><label for=\"input04\">Mobile<code>*</code></label> <input type=\"text\" class=\"form-control\" ng-model=\"formscope.mobile\" placeholder=\"Please enter your mobile number\" phone-input=\"\" name=\"mobile\" required-error-message=\"{{errorMessage.mobile.required}}\" maxlength-error-message=\"{{errorMessage.mobile.maxlength}}\" minlength-error-message=\"{{errorMessage.mobile.minlength}}\" validator=\"required, maxlength=15, minlength=10\" valid-method=\"blur\" chars=\"numbers\"></div></div><div class=\"form-group col-md-12\"><div class=\"form-group col-md-12\"><label for=\"textarea01\">Address<code>*</code></label> <textarea placeholder=\"Please enter address\" class=\"form-control\" ng-model=\"formscope.address\" name=\"address\" required-error-message=\"{{errorMessage.address.required}}\" validator=\"required\" valid-method=\"blur\"></textarea></div></div><div class=\"form-group col-md-12\"><div class=\"form-group col-md-6\"><label for=\"textarea01\">Gender<code>*</code></label><select ng-model=\"formscope.gender\" name=\"gender\" ng-options=\"company.value as company.label for company in genderOption\" class=\"form-control\" required-error-message=\"{{errorMessage.gender.required}}\" validator=\"required\" valid-method=\"blur\"></select></div><div class=\"form-group col-md-6\"><label>Status<code>*</code></label><select ng-model=\"formscope.status\" name=\"status\" ng-options=\"company.value as company.text for company in statusOption\" class=\"form-control\" required-error-message=\"{{errorMessage.status.required}}\" validator=\"required\" valid-method=\"blur\"></select></div></div><div class=\"form-group col-md-12\"><button type=\"submit\" ng-disabled=\"isSubmitted\" class=\"btn btn-success\" align=\"center\">{{btnName}}</button> <a type=\"submit\" ui-sref=\"defaulttasks.list\" class=\"btn btn-info\" align=\"center\">Cancel</a></div></form></div></div></div></div></div>');\n$templateCache.put('app/pages/defaulttasks/view.html','<div class=\"widgets\"><div class=\"row\"><div class=\"col-md-12\"><div ba-panel=\"\" ba-panel-title=\"{{ activePageTitle }} Listing\"><div class=\"form-group select-page-size-wrap\"><button class=\"btn btn-primary\" ng-if=\"havePermission(\\'defaulttasks\\',\\'create\\');\" ui-sref=\"defaulttasks.add\">Add</button></div><div class=\"horizontal-scroll\"><table datatable=\"\" dt-instance=\"dtInstance\" dt-options=\"dtOptions\" dt-columns=\"dtColumns\" class=\"row-border hover\"></table></div></div></div></div></div>');\n$templateCache.put('app/pages/forgotpassword/reset.html','<h1>Reset your password</h1><form class=\"form-horizontal\" ng-submit=\"resetSubmit(add_form)\" role=\"form\" name=\"add_form\"><div class=\"form-group\"><label for=\"inputEmail3\" class=\"col-sm-4 control-label\">Email</label><div class=\"col-sm-8\"><input placeholder=\"Please enter email\" type=\"text\" class=\"form-control\" name=\"email\" id=\"inputEmail3\" required-error-message=\"{{errorMessage.email.required}}\" minlength-error-message=\"{{errorMessage.email.minlength}}\" maxlength-error-message=\"{{errorMessage.email.maxlength}}\" email-error-message=\"{{errorMessage.email.invalidEmail}}\" validator=\"required, minlength=2, maxlength=100, email\" valid-method=\"blur\" ng-model=\"formscope.email\"></div></div><div class=\"form-group\"><label for=\"inputEmail3\" class=\"col-sm-4 control-label\">Password</label><div class=\"col-sm-8\"><input type=\"password\" class=\"form-control\" ng-model=\"formscope.password\" placeholder=\"Please enter password\" disallow-spaces=\"\" name=\"password\" required-error-message=\"{{errorMessage.password.required}}\" maxlength-error-message=\"{{errorMessage.password.maxlength}}\" minlength-error-message=\"{{errorMessage.password.minlength}}\" validator=\"required, maxlength=20, minlength=6\" valid-method=\"blur\"></div></div><div class=\"form-group\"><label for=\"inputEmail3\" class=\"col-sm-4 control-label\">Confirm Password</label><div class=\"col-sm-8\"><input type=\"password\" class=\"form-control\" ng-model=\"formscope.confirm_password\" placeholder=\"Please enter confirm password\" required-error-message=\"{{errorMessage.confirm_password.required}}\" validator=\"required, confirmPassword\" valid-method=\"blur\" name=\"confirm_password\"></div></div><div class=\"form-group\"><div class=\"col-sm-offset-2 col-sm-10\"><button type=\"submit\" class=\"btn btn-default btn-auth\" ng-disabled=\"isSubmitted\"><i class=\"fa fa-spinner fa-spin\" aria-hidden=\"true\" ng-show=\"loginProgress\"></i> Change</button></div></div></form>');\n$templateCache.put('app/pages/forgotpassword/view.html','<h1>Forgot password</h1><span class=\"auth-link\">Please enter your email so we can send you a link to reset your password</span><form class=\"form-horizontal\" ng-submit=\"forgotSubmit(add_form)\" role=\"form\" name=\"add_form\"><div class=\"form-group\"><label for=\"inputEmail3\" class=\"col-sm-2 control-label\">Email</label><div class=\"col-sm-10\"><input placeholder=\"Please enter email\" type=\"text\" class=\"form-control\" name=\"email\" id=\"inputEmail3\" required-error-message=\"{{errorMessage.email.required}}\" focus-me=\"\" minlength-error-message=\"{{errorMessage.email.minlength}}\" maxlength-error-message=\"{{errorMessage.email.maxlength}}\" email-error-message=\"{{errorMessage.email.invalidEmail}}\" validator=\"required, minlength=2, maxlength=100, email\" valid-method=\"blur\" ng-model=\"formscope.email\"></div></div><div class=\"form-group\"><div class=\"col-sm-offset-2 col-sm-10\"><button type=\"submit\" class=\"btn btn-default btn-auth\" ng-disabled=\"isSubmitted\"><i class=\"fa fa-spinner fa-spin\" aria-hidden=\"true\" ng-show=\"loginProgress\"></i> Submit</button> <a ui-sref=\"login\" class=\"forgot-pass\">Login?</a></div></div></form>');\n$templateCache.put('app/pages/login/login.html','<h1><img src=\"{{logoImage}}\"></h1><form class=\"form-horizontal\" method=\"post\" name=\"loginForm\" ng-submit=\"loginSubmit(loginForm.$valid)\" novalidate=\"\"><div class=\"form-group\"><label for=\"inputEmail3\" class=\"col-sm-2 control-label\">Email</label><div class=\"col-sm-10\"><input type=\"email\" focus-me=\"\" class=\"form-control\" id=\"inputEmail3\" placeholder=\"Email\" ng-model=\"admin.email\"> <span style=\"color:red\" ng-show=\"loginForm.email.$error.required\">Please enter email. <span ng-show=\"loginForm.email.$error.email\">Please enter valid email address.</span></span></div></div><div class=\"form-group\"><label for=\"inputPassword3\" class=\"col-sm-2 control-label\">Password</label><div class=\"col-sm-10\"><input type=\"password\" class=\"form-control\" id=\"inputPassword3\" placeholder=\"Password\" ng-model=\"admin.password\"> <span style=\"color:red\" ng-show=\"loginForm.password.$dirty && loginForm.password.$invalid\"><span ng-show=\"loginForm.password.$error.required\">Please enter password.</span></span></div></div><div class=\"form-group\"><div class=\"col-sm-offset-2 col-sm-10\"><button type=\"submit\" class=\"btn btn-default btn-auth\" ng-disabled=\"loginProgress\"><i class=\"fa fa-spinner fa-spin\" aria-hidden=\"true\" ng-show=\"loginProgress\"></i> Sign in</button><a ui-sref=\"forgotpassword\" class=\"forgot-pass\">Forgot password?</a></div></div></form>');\n$templateCache.put('app/pages/notifications/view.html','<div class=\"widgets\" ng-hide=\"state.includes(\\'roles.edit\\')\"><div class=\"row\"><div class=\"col-md-12\"><div ba-panel=\"\" ba-panel-title=\"{{ activePageTitle }} Listing\"><div class=\"form-group select-page-size-wrap\"></div><div class=\"horizontal-scroll\"><table datatable=\"\" dt-instance=\"dtInstance\" dt-options=\"dtOptions\" dt-columns=\"dtColumns\" class=\"row-border hover\"></table></div><div></div></div></div></div></div><ui-view></ui-view>');\n$templateCache.put('app/pages/profile/profile.html','<div ba-panel=\"\" ba-panel-class=\"profile-page\"><div class=\"panel-content\"><div class=\"progress-info\">Your profile is 70% Complete</div><div class=\"progress\"><div class=\"progress-bar progress-bar-primary progress-bar-striped active\" role=\"progressbar\" aria-valuenow=\"70\" aria-valuemin=\"0\" aria-valuemax=\"100\" style=\"width: 70%\"></div></div><h3 class=\"with-line\">General Information</h3><div class=\"row\"><div class=\"col-md-6\"><div class=\"form-group row clearfix\"><label for=\"inputFirstName\" class=\"col-sm-3 control-label\">Picture</label><div class=\"col-sm-9\"><div class=\"userpic\"><div class=\"userpic-wrapper\"><img ng-src=\"{{ picture }}\" ng-click=\"uploadPicture()\"></div><i class=\"ion-ios-close-outline\" ng-click=\"removePicture()\" ng-if=\"!noPicture\"></i> <a href=\"\" class=\"change-userpic\" ng-click=\"uploadPicture()\">Change Profile Picture</a> <input type=\"file\" ng-show=\"false\" id=\"uploadFile\" ng-file-select=\"onFileSelect($files)\"></div></div></div></div><div class=\"col-md-6\"></div></div><div class=\"row\"><div class=\"col-md-6\"><div class=\"form-group row clearfix\"><label for=\"inputFirstName\" class=\"col-sm-3 control-label\">First Name</label><div class=\"col-sm-9\"><input type=\"text\" class=\"form-control\" id=\"inputFirstName\" placeholder=\"\" value=\"Anastasiya\"></div></div><div class=\"form-group row clearfix\"><label for=\"inputLastName\" class=\"col-sm-3 control-label\">Last Name</label><div class=\"col-sm-9\"><input type=\"text\" class=\"form-control\" id=\"inputLastName\" placeholder=\"\" value=\"\"></div></div></div><div class=\"col-md-6\"><div class=\"form-group row clearfix\"><label class=\"col-sm-3 control-label\">Department</label><div class=\"col-sm-9\"><select class=\"form-control\" selectpicker=\"\"><option>Web Development</option><option>System Development</option><option>Sales</option><option>Human Resources</option></select></div></div><div class=\"form-group row clearfix\"><label for=\"inputOccupation\" class=\"col-sm-3 control-label\">Occupation</label><div class=\"col-sm-9\"><input type=\"text\" class=\"form-control\" id=\"inputOccupation\" placeholder=\"\" value=\"Front End Web Developer\"></div></div></div></div><h3 class=\"with-line\">Change Password</h3><div class=\"row\"><div class=\"col-md-6\"><div class=\"form-group row clearfix\"><label for=\"inputPassword\" class=\"col-sm-3 control-label\">Password</label><div class=\"col-sm-9\"><input type=\"password\" class=\"form-control\" id=\"inputPassword\" placeholder=\"\" value=\"12345678\"></div></div></div><div class=\"col-md-6\"><div class=\"form-group row clearfix\"><label for=\"inputConfirmPassword\" class=\"col-sm-3 control-label\">Confirm Password</label><div class=\"col-sm-9\"><input type=\"password\" class=\"form-control\" id=\"inputConfirmPassword\" placeholder=\"\"></div></div></div></div><h3 class=\"with-line\">Contact Information</h3><div class=\"row\"><div class=\"col-md-6\"><div class=\"form-group row clearfix\"><label for=\"inputEmail3\" class=\"col-sm-3 control-label\">Email</label><div class=\"col-sm-9\"><input type=\"email\" class=\"form-control\" id=\"inputEmail3\" placeholder=\"\" value=\"contact@akveo.com\"></div></div><div class=\"form-group row clearfix\"><label for=\"inputPhone\" class=\"col-sm-3 control-label\">Phone</label><div class=\"col-sm-9\"><input type=\"text\" class=\"form-control\" id=\"inputPhone\" placeholder=\"\" value=\"+1 (23) 456 7890\"></div></div></div><div class=\"col-md-6\"><div class=\"form-group row clearfix\"><label class=\"col-sm-3 control-label\">Office Location</label><div class=\"col-sm-9\"><select class=\"form-control\" title=\"Standard Select\" selectpicker=\"\"><option>San Francisco</option><option>London</option><option>Minsk</option><option>Tokio</option></select></div></div><div class=\"form-group row clearfix\"><label for=\"inputRoom\" class=\"col-sm-3 control-label\">Room</label><div class=\"col-sm-9\"><input type=\"text\" class=\"form-control\" id=\"inputRoom\" placeholder=\"\" value=\"303\"></div></div></div></div><h3 class=\"with-line\">Social Profiles</h3><div class=\"social-profiles row clearfix\"><div class=\"col-md-3 col-sm-4\" ng-repeat=\"item in socialProfiles\"><a class=\"sn-link\" href=\"\" ng-click=\"showModal(item)\" ng-if=\"!item.href\"><i class=\"socicon {{ item.icon }}\"></i> <span>{{ item.name }}</span></a> <a class=\"sn-link connected\" href=\"{{ item.href }}\" target=\"_blank\" ng-if=\"item.href\"><i class=\"socicon {{ item.icon }}\"></i> <span>{{ item.name }}</span> <em class=\"ion-ios-close-empty sn-link-close\" ng-mousedown=\"unconnect(item)\"></em></a></div></div><h3 class=\"with-line\">Send Email Notifications</h3><div class=\"notification row clearfix\"><div class=\"col-sm-6\"><div class=\"form-group row clearfix\"><label class=\"col-xs-8\">When I receive a message</label><div class=\"col-xs-4\"><switch color=\"primary\" ng-model=\"switches[0]\"></switch></div></div><div class=\"form-group row clearfix\"><label class=\"col-xs-8\">When Someone sends me an invitation</label><div class=\"col-xs-4\"><switch color=\"primary\" ng-model=\"switches[1]\"></switch></div></div><div class=\"form-group row clearfix\"><label class=\"col-xs-8\">When profile information changes</label><div class=\"col-xs-4\"><switch color=\"primary\" ng-model=\"switches[2]\"></switch></div></div></div><div class=\"col-sm-6\"><div class=\"form-group row clearfix\"><label class=\"col-xs-8\">When anyone logs into your account from a new device or browser</label><div class=\"col-xs-4\"><switch color=\"primary\" ng-model=\"switches[3]\"></switch></div></div><div class=\"form-group row clearfix\"><label class=\"col-xs-8\">Weekly Reports</label><div class=\"col-xs-4\"><switch color=\"primary\" ng-model=\"switches[4]\"></switch></div></div><div class=\"form-group row clearfix\"><label class=\"col-xs-8\">Daily Reports</label><div class=\"col-xs-4\"><switch color=\"primary\" ng-model=\"switches[5]\"></switch></div></div></div></div><button type=\"button\" class=\"btn btn-primary btn-with-icon save-profile\"><i class=\"ion-android-checkmark-circle\"></i>Update Profile</button></div></div>');\n$templateCache.put('app/pages/profile/profileModal.html','<div class=\"modal-content\"><div class=\"modal-header\"><button type=\"button\" class=\"close\" ng-click=\"$dismiss()\" aria-label=\"Close\"><em class=\"ion-ios-close-empty sn-link-close\"></em></button><h4 class=\"modal-title\" id=\"myModalLabel\">Add Account</h4></div><form name=\"linkForm\"><div class=\"modal-body\"><p>Paste a link to your profile into the box below</p><div class=\"form-group\"><input type=\"text\" class=\"form-control\" placeholder=\"Link to Profile\" ng-model=\"link\"></div></div><div class=\"modal-footer\"><button type=\"button\" class=\"btn btn-primary\" ng-click=\"ok(link)\">Save changes</button></div></form></div>');\n$templateCache.put('app/pages/roles/add.html','<div class=\"widgets\"><div class=\"row\"><div class=\"col-md-6\"><div ba-panel=\"\" ba-panel-title=\"{{pageName}} Role\" ba-panel-class=\"with-scroll\"><form class=\"form-validation\" ng-submit=\"submitRole(role_form)\" role=\"form\" name=\"role_form\"><div class=\"form-group\"><label>Role Name<code>*</code></label> <input focus-me=\"\" chars=\"letters\" placeholder=\"Please enter role name\" type=\"text\" class=\"form-control\" name=\"role_name\" required-error-message=\"{{roleMessage.name.required}}\" minlength-error-message=\"{{roleMessage.name.minlength}}\" maxlength-error-message=\"{{roleMessage.name.maxlength}}\" validator=\"required, minlength=2, maxlength=20\" valid-method=\"blur submit\" ng-model=\"role.name\"></div><div class=\"form-group\"><label>Role Description<code>*</code></label> <input placeholder=\"Please enter role description\" type=\"text\" class=\"form-control\" name=\"role_description\" required-error-message=\"{{roleMessage.description.required}}\" minlength-error-message=\"{{roleMessage.description.minlength}}\" maxlength-error-message=\"{{roleMessage.description.maxlength}}\" validator=\"required, minlength=2, maxlength=100\" valid-method=\"blur submit\" ng-model=\"role.description\"></div><div class=\"form-group\"><label>Permissions</label> <input type=\"text\" class=\"form-control\" ng-model=\"myQuery\" placeholder=\"Search permissions\"><div ivh-treeview=\"role.permissions\" ivh-treeview-expand-to-depth=\"1\" ivh-treeview-filter=\"myQuery\"></div></div><button type=\"submit\" class=\"btn btn-info\" ng-disabled=\"isSubmitted\" align=\"center\">{{action}}</button> <a type=\"submit\" ui-sref=\"roles.list\" class=\"btn btn-info\" align=\"center\">Cancel</a></form></div></div></div></div>');\n$templateCache.put('app/pages/roles/login.html','<main class=\"auth-main\"><div class=\"auth-block\"><h1>Sign in to Tour Management</h1><form class=\"form-horizontal\"><div class=\"form-group\"><label for=\"inputEmail3\" class=\"col-sm-2 control-label\">Email</label><div class=\"col-sm-10\"><input type=\"email\" class=\"form-control\" id=\"inputEmail3\" placeholder=\"Email\"></div></div><div class=\"form-group\"><label for=\"inputPassword3\" class=\"col-sm-2 control-label\">Password</label><div class=\"col-sm-10\"><input type=\"password\" class=\"form-control\" id=\"inputPassword3\" placeholder=\"Password\"></div></div><div class=\"form-group\"><div class=\"col-sm-offset-2 col-sm-10\"><button type=\"submit\" class=\"btn btn-default btn-auth\">Sign in</button> <a href=\"\" class=\"forgot-pass\">Forgot password?</a></div></div></form></div></main>');\n$templateCache.put('app/pages/roles/view.html','<div class=\"widgets\" ng-hide=\"state.includes(\\'roles.edit\\') || state.includes(\\'roles.add\\')\"><div class=\"row\"><div class=\"col-md-12\"><div ba-panel=\"\" ba-panel-title=\"{{ activePageTitle }} Listing\"><div class=\"form-group select-page-size-wrap\"><button class=\"btn btn-primary\" ng-if=\"havePermission(\\'roles\\',\\'create\\');\" ui-sref=\"roles.add\">Add</button></div><div class=\"horizontal-scroll\"><table datatable=\"\" dt-instance=\"dtInstance\" dt-options=\"dtOptions\" dt-columns=\"dtColumns\" class=\"row-border hover\"></table></div><div></div></div></div></div></div>');\n$templateCache.put('app/pages/settings/view.html','<div class=\"widgets\"><div class=\"row\"><div class=\"col-md-6\"><div ba-panel=\"\" ba-panel-title=\"Edit Settings\" ba-panel-class=\"with-scroll\"><form class=\"form-validation\" ng-submit=\"updateSetting(add_form)\" role=\"form\" name=\"add_form\"><div class=\"form-group\"><label>Admin Email<code>*</code></label> <input placeholder=\"Please enter admin email\" type=\"text\" class=\"form-control\" name=\"admin_email\" required-error-message=\"{{errorMessage.admin_email.required}}\" focus-me=\"\" minlength-error-message=\"{{errorMessage.admin_email.minlength}}\" maxlength-error-message=\"{{errorMessage.admin_email.maxlength}}\" email-error-message=\"{{errorMessage.admin_email.invalidEmail}}\" validator=\"required, minlength=2, maxlength=100, email\" valid-method=\"blur\" ng-model=\"formscope.admin_email\"></div><div class=\"form-group\"><label>Confirm link expired Time(Hours)<code>*</code></label> <input placeholder=\"Please enter hours\" type=\"text\" class=\"form-control\" name=\"confirm_link_expired\" required-error-message=\"{{errorMessage.confirm_link_expired.required}}\" minlength-error-message=\"{{errorMessage.confirm_link_expired.minlength}}\" maxlength-error-message=\"{{errorMessage.confirm_link_expired.maxlength}}\" validator=\"required, minlength=1, maxlength=3\" chars=\"numbers\" valid-method=\"blur\" ng-model=\"formscope.confirm_link_expired\"></div><button type=\"submit\" class=\"btn btn-info\" ng-disabled=\"isSubmitted\" align=\"center\">{{action}}</button></form></div></div></div></div>');\n$templateCache.put('app/pages/tours/acknowledge.html','<div class=\"message-container\" style=\"border-left: none; width: 100%; background-color: #fff !important;\"><div class=\"message more-text-widget\" ng-if=\"formscope.link_expired == 1\"><p style=\"color: #e85656; font-size: 20px;\">{{formscope.errorMessage}}</p></div><div class=\"message\" ng-if=\"formscope.link_expired == 2\"><div class=\"row\" style=\"padding-right: 1%;\"><div class=\"message-details more-text-widget\" ng-if=\"formscope.status == 1\"><p style=\"color: #209e91; font-size: 18px;\">You have acknowledge the tour Successfully!</p></div><div class=\"message-details more-text-widget\" ng-if=\"formscope.status == 2\"><p style=\"color: #e85656; font-size: 18px;\">You have rejected the tour!!!</p></div></div><div class=\"message-details\"><span class=\"subject\">Tour Contact Person Information</span></div><div class=\"line\"></div><div class=\"person-info row\"><div class=\"col-lg-4 col-md-12 no-padding\"><div class=\"name\"><h2 class=\"name-h\">{{contactManagerDetails.visitor.name || \\'-\\'}}</h2><div><span class=\"mail-tag tag label label-success\">{{showVisitorOption(contactManagerDetails.visitor) || \\'-\\'}}</span> <span class=\"mail-tag tag label label-info\">{{showGenderOption(contactManagerDetails.visitor) || \\'-\\'}}</span></div></div></div><div class=\"col-lg-4 col-md-6 col-xs-12 no-padding\"><div class=\"contact-info phone-email\"><div><i class=\"ion-iphone\"></i> <span class=\"phone\">{{contactManagerDetails.visitor.mobile | tel}}</span></div><div ng-if=\"contactManagerDetails.visitor.phone_number\"><i class=\"ion-iphone\"></i> <span class=\"phone\">{{contactManagerDetails.visitor.phone_number | tel}}</span></div><div><i class=\"ion-email\"></i> <span class=\"email\">{{contactManagerDetails.visitor.email || \\'-\\'}}</span></div></div></div><div class=\"col-lg-4 col-md-6 col-xs-12 no-padding\"><div class=\"contact-info position-address\"><div><span class=\"position\">{{showOrganizationTypeOption(contactManagerDetails.visitor) || \\'-\\'}}</span></div><div><i class=\"ion-location\"></i> <span class=\"address\">{{contactManagerDetails.fullAddress || \\'-\\'}}</span></div></div></div></div><div class=\"message-details\"><span class=\"subject\">Tour Information</span></div><div class=\"line\"></div><div class=\"message-body\"><div class=\"col-md-12\"><div class=\"col-lg-6 col-md-12\"><div class=\"panel panel-default\"><div class=\"panel-heading\">General Information</div><div class=\"panel-body\"><div class=\"form-group col-md-12\"><label class=\"col-sm-3 control-label\">Name:</label><div class=\"col-sm-9\">{{formscope.name || \\'-\\'}}</div></div><div class=\"form-group col-md-12\"><label class=\"col-sm-3 control-label\">Organization:</label><div class=\"col-sm-9\">{{formscope.organization || \\'-\\'}}</div></div><div class=\"form-group col-md-12\"><label class=\"col-sm-3 control-label\">Tour Date:</label><div class=\"col-sm-9\">{{formscope.start_date | amDateFormat:\\'(dddd) DD, MMMM YYYY\\'}}</div></div><div class=\"form-group col-md-12\"><label class=\"col-sm-3 control-label\">Transport Type:</label><div class=\"col-sm-9\">{{formscope.tour_transport.name || \\'-\\'}}</div></div><div class=\"form-group col-md-12\"><label class=\"col-sm-3 control-label\">Person:</label><div class=\"col-sm-9\"><p><span>Children:</span> {{formscope.children}}</p><p><span>Adults:</span> {{formscope.adults}}</p><p><span>Senior:</span> {{formscope.senior}}</p></div></div><div class=\"form-group col-md-12\"><label class=\"col-sm-3 control-label\">Special Request:</label><div class=\"col-sm-9\">{{formscope.special_request || \\'-\\'}}</div></div></div></div></div><div class=\"col-lg-6 col-md-12\"><div class=\"panel panel-default\"><div class=\"panel-heading\">Tour Task</div><div class=\"panel-body\"><div class=\"form-group col-md-12\"><label class=\"col-sm-3 control-label\">Tour Type:</label><div class=\"col-sm-9\">{{formscope.tour_tapes.name}}</div></div><div class=\"form-group col-md-12\"><label class=\"col-sm-3 control-label\">Task:</label><div class=\"col-sm-9 pull-right\" ng-repeat=\"task in formscope.tasks\"><p class=\"m-b-xs\">{{task.task}}</p><div class=\"line\"></div></div></div></div></div></div></div></div><div class=\"message-details\"><span class=\"subject\">Visitors Information</span></div><div class=\"line\"></div><div class=\"message-body\"><div class=\"col-md-12\"><div ba-panel=\"\" ba-panel-title=\"Visitors\" ba-panel-class=\"with-scroll\" ng-if=\"visitors.length\"><div class=\"horizontal-scroll\"><table datatable=\"ng\" dt-instance=\"visitorInstance\" dt-options=\"visitorOptions\" dt-column-defs=\"visitorColumnDefs\" class=\"row-border hover\"><thead><tr class=\"sortable\"><th>Name</th><th>Email</th><th>Mobile</th><th>Organization type</th><th>Type</th><th>Organization</th></tr></thead><tbody><tr ng-repeat=\"visitor in visitors\"><td>{{visitor.name}}</td><td><a class=\"email-link\" ng-href=\"mailto:{{visitor.email}}\">{{visitor.email}}</a></td><td>{{visitor.mobile}}</td><td>{{showOrganizationTypeOption(visitor)}}</td><td>{{showVisitorOption(visitor)}}</td><td>{{visitor.organization}}</td></tr></tbody></table></div></div></div></div><div ng-if=\"formscope.meals\" class=\"message-details\"><span class=\"subject\">Meals Information</span></div><div ng-if=\"formscope.meals\" class=\"line\"></div><div class=\"message-body\"><div class=\"col-md-12\"><div ng-if=\"formscope.meals\"><div class=\"col-md-4\" ng-repeat=\"meal in mealsType\"><div class=\"panel panel-default bootstrap-panel xsmall-panel\"><div class=\"panel-heading\">{{showMealsTypeOption(meal)}}</div><div class=\"panel-body\"><p><label>Specific item:</label> {{meal.specific_item}}</p><p><label>Catering manager:</label> {{showCateringManager(meal)}}</p><p><label>People:</label> {{meal.people}}</p><p><label>Meal Service:</label> {{showMealServiceTypeOption(meal)}}</p><p><label>Meal Location:</label> {{showMealServiceLocationsOption(meal)}}</p></div></div></div></div></div></div><div class=\"message-details\" ng-if=\"formscope.status == 0\"><span class=\"subject\">Action</span></div><div class=\"line\" ng-if=\"formscope.status == 0\"></div><div class=\"message-body\" ng-if=\"formscope.status == 0\"><div class=\"col-md-12\"><div class=\"form-group col-md-6\"><label>Comment</label> <textarea placeholder=\"Please enter comment\" class=\"form-control\" ng-model=\"formscope.comment\" name=\"request\" chars=\"text\"></textarea></div><div class=\"form-group col-md-12\"><a type=\"submit\" ng-disabled=\"isSubmitted\" ng-click=\"approveRejectTour(1)\" class=\"btn btn-success\" align=\"center\">Approve</a> <a type=\"submit\" ng-disabled=\"isSubmitted\" ng-click=\"approveRejectTour(3)\" class=\"btn btn-danger\" align=\"center\">Reject</a></div></div></div></div></div>');\n$templateCache.put('app/pages/tours/add.html','<div class=\"widgets\"><div class=\"row\"><div class=\"col-md-12\"><div ba-panel=\"\" ba-panel-title=\"{{pageName}}\" ba-panel-class=\"with-scroll\"><div class=\"ng-cloak form-group col-md-12\"><form class=\"form-validation\" editable-form=\"\" role=\"form\" name=\"add_form\"><div class=\"row\"><h3 class=\"with-line\">Tour Information</h3><div class=\"form-group col-lg-4 col-md-12 col-sm-12\"><label>Name<code>*</code></label> <input type=\"text\" focus-me=\"\" class=\"form-control\" ng-model=\"formscope.name\" placeholder=\"Please enter name\" name=\"tour_name\" required-error-message=\"{{errorMessage.name.required}}\" minlength-error-message=\"{{errorMessage.name.minlength}}\" maxlength-error-message=\"{{errorMessage.name.maxlength}}\" validator=\"required, minlength=2, maxlength=50\" valid-method=\"blur\" chars=\"company-name\"></div><div class=\"form-group col-lg-4 col-md-12 col-sm-12\"><label for=\"input01\">Tour Date<code>*</code></label><div class=\"\" moment-picker=\"formscope.start_date\" max-view=\"hour\" start-view=\"month\" min-date=\"minDateMoment\" format=\"YYYY-MM-DD HH:mm:ss\"><input class=\"form-control\" readonly=\"\" name=\"start_date\" required-error-message=\"{{errorMessage.start_date.required}}\" validator=\"required\" valid-method=\"blur\" placeholder=\"Please select the tour date\" ng-model=\"formscope.start_date\" ng-model-options=\"{ updateOn: \\'blur\\' }\"></div></div><div class=\"form-group col-lg-4 col-md-12 col-sm-12\"><label>Transport Type<code>*</code></label><select chosen=\"\" ng-model=\"formscope.transport_id\" name=\"transport_id\" ng-options=\"type.id as type.name for type in TransportOption\" class=\"form-control\" required-error-message=\"{{errorMessage.transport_id.required}}\" validator=\"required\" valid-method=\"watch, blur\" validation-group=\"transport_id_error_message\"></select><span id=\"transport_id_error_message\"></span></div></div><div class=\"row\"><div class=\"form-group col-lg-4 col-md-12 col-sm-12\"><label for=\"input01\">No. of Senior(Above 65+)<code>*</code></label> <input type=\"text\" class=\"form-control\" ng-model=\"formscope.senior\" placeholder=\"Please enter senior count\" name=\"senior\" required-error-message=\"{{errorMessage.senior.required}}\" minlength-error-message=\"{{errorMessage.senior.minlength}}\" maxlength-error-message=\"{{errorMessage.senior.maxlength}}\" validator=\"required, minlength=1, maxlength=5\" valid-method=\"blur\" chars=\"numbers\"></div><div class=\"form-group col-lg-4 col-md-12 col-sm-12\"><label for=\"input01\">No. of Adults<code>*</code></label> <input type=\"text\" class=\"form-control\" ng-model=\"formscope.adults\" placeholder=\"Please enter adults count\" name=\"adults\" required-error-message=\"{{errorMessage.adults.required}}\" minlength-error-message=\"{{errorMessage.adults.minlength}}\" maxlength-error-message=\"{{errorMessage.adults.maxlength}}\" validator=\"required, minlength=1, maxlength=5\" valid-method=\"blur\" chars=\"numbers\"></div><div class=\"form-group col-lg-4 col-md-12 col-sm-12\"><label for=\"input01\">No. of Children (Below 18)</label> <input type=\"text\" class=\"form-control\" ng-model=\"formscope.children\" placeholder=\"Please enter children count\" name=\"children\" chars=\"numbers\"></div></div><div class=\"row\"><div class=\"form-group col-lg-4 col-md-12 col-sm-12\"><label>Organization<code>*</code></label><angucomplete-alt id=\"mainOrganization\" placeholder=\"Please enter organization name\" pause=\"100\" initial-value=\"formscope.organization\" selected-object=\"residentSelected\" local-data=\"organizationOption\" search-fields=\"organization\" title-field=\"organization\" minlength=\"1\" input-class=\"form-control\" match-class=\"highlight\" field-required=\"true\" auto-match=\"true\" override-suggestions=\"true\" ng-model=\"formscope.organization\" name=\"organization\" required-error-message=\"{{errorMessage.organization.required}}\" minlength-error-message=\"{{errorMessage.organization.minlength}}\" maxlength-error-message=\"{{errorMessage.organization.maxlength}}\" validator=\"required, minlength=2, maxlength=50\" valid-method=\"watch, blur\" chars=\"text\"></angucomplete-alt></div><div class=\"form-group col-lg-4 col-md-12 col-sm-12\"><label>Special Request</label> <textarea placeholder=\"Please enter special request\" class=\"form-control\" ng-model=\"formscope.special_request\" name=\"special_request\"></textarea></div></div><div class=\"row\" ng-if=\"state.current.name == \\'tours.edit\\'\" ng-show=\"edittourtype\"><h3 class=\"with-line\">Tour type</h3><div class=\"form-group col-lg-4 col-md-12 col-sm-12\"><label>Tour Type<code>*</code></label><select chosen=\"\" ng-model=\"formscope.tourtype_id\" name=\"tourtype_id\" ng-options=\"type.id as type.name for type in TourTypeOption\" class=\"form-control\" required-error-message=\"{{errorMessage.tourtype_id.required}}\" validator=\"required\" valid-method=\"watch, blur\" validation-group=\"tourtype_id_error_message\"></select><span id=\"tourtype_id_error_message\"></span></div></div><div class=\"row\" ng-if=\"state.current.name == \\'tours.add\\'\"><h3 class=\"with-line\">Tour type and task Information <a type=\"submit\" ng-if=\"addTaskBtn\" ng-click=\"showModal()\" class=\"pull-right btn btn-success\" align=\"Add Task\">Add Task</a></h3><div class=\"form-group col-lg-4 col-md-12 col-sm-12\"><label>Tour Type<code>*</code></label><select chosen=\"\" ng-model=\"formscope.tourtype_id\" name=\"tourtype_id\" ng-options=\"type.id as type.name for type in TourTypeOption\" class=\"form-control\" required-error-message=\"{{errorMessage.tourtype_id.required}}\" validator=\"required\" valid-method=\"watch, blur\" validation-group=\"tourtype_id_error_message\"></select><span id=\"tourtype_id_error_message\"></span></div><div class=\"form-group col-md-12 col-sm-12\"><label class=\"col-md-12 col-sm-12\" ng-if=\"addTaskBtn\">Task List</label><div class=\"social-profiles row clearfix\"><div class=\"col-lg-4 col-md-12 col-sm-12\" ng-repeat=\"item in activeTaskList\"><a class=\"sn-link connected\" href=\"\"><span><div class=\"task-tag\">{{ item.task }}</div></span> <em class=\"ion-ios-close-empty sn-link-close\" ng-mousedown=\"unconnect($index)\"></em></a></div></div></div></div><div class=\"row\"><h3 class=\"with-line\"><a type=\"submit\" ng-if=\"havePermission(\\'visitor_in_tour\\',\\'create\\')\" ng-click=\"addVisitor()\" class=\"pull-right btn btn-success\" align=\"Add Visitor\">Add</a> Visitors Information</h3><div ba-panel=\"\" ba-panel-title=\"Visitors\" ba-panel-class=\"with-scroll\" ng-if=\"visitors.length\"><div class=\"horizontal-scroll\"><table datatable=\"ng\" dt-instance=\"visitorInstance\" dt-options=\"visitorOptions\" dt-column-defs=\"visitorColumnDefs\" class=\"row-border hover\"><thead><tr class=\"sortable\"><th>No</th><th>Name</th><th>Email</th><th>Mobile</th><th>Organization type</th><th>Type</th><th>Contact manager</th><th style=\"width: 13%;\">Action</th></tr></thead><tbody><tr ng-repeat=\"visitor in visitors\"><td class=\"table-id\">{{$index + 1}}</td><td>{{visitor.name}}</td><td><a class=\"email-link\" ng-href=\"mailto:{{visitor.email}}\">{{visitor.email}}</a></td><td>{{visitor.mobile}}</td><td>{{showOrganizationTypeOption(visitor)}}</td><td>{{showVisitorOption(visitor)}}</td><td><input ng-model=\"formscope.contact_manager\" name=\"contact_manager\" id=\"inlineRadio1\" value=\"{{visitor.email}}\" type=\"radio\"></td><td><a ng-if=\"havePermission(\\'visitor_in_tour\\',\\'update\\')\" ng-click=\"editVisitor(visitor, $index)\" class=\"btn btn-info btn-sm\" align=\"center\">Edit</a> <a ng-if=\"havePermission(\\'visitor_in_tour\\',\\'delete\\')\" ng-confirm-click=\"Are you sure to delete this visitor?\" confirmed-click=\"removeVisitor(visitor)\" class=\"btn btn-danger btn-sm\" align=\"center\" ng-hide=\"visitor.email == formscope.contact_manager\">Delete</a></td></tr></tbody></table></div></div></div><div class=\"row\"><h3 class=\"with-line\">Meals Service <a ng-if=\"formscope.meals\" type=\"submit\" ng-click=\"addMeals()\" class=\"pull-right btn btn-success\" align=\"Add Meal\">Add</a></h3><div class=\"col-md-12\"><div class=\"form-group\"><label class=\"checkbox-inline custom-checkbox nowrap\"><input ng-model=\"formscope.meals\" value=\"formscope.meals\" type=\"checkbox\"> <span>Is catering needed?</span></label></div></div><div ng-if=\"formscope.meals\"><div class=\"col-lg-4 col-md-12 col-sm-12\" ng-repeat=\"meal in mealsType\"><div class=\"panel panel-default bootstrap-panel xsmall-panel\"><div class=\"panel-heading\">{{meal.meal_txt}} <a href=\"\" class=\"pull-right ng-scope\" ng-confirm-click=\"Are you sure to delete this meal?\" confirmed--click=\"removeMeal($index)\"><i class=\"ion-close-round\"></i></a> <a href=\"\" class=\"pull-right\" ng-click=\"editMeals(meal, $index)\" style=\"padding-right: 10px;\"><i class=\"ion-edit\"></i></a></div><div class=\"panel-body\"><p><label>Specific item:</label> {{meal.specific_item}}</p><p><span><label>Catering manager:</label> {{meal.catering_manager_txt}}</span></p><p><span><label>People:</label> {{meal.people}}</span></p><p><label>Meal Service:</label> {{meal.mealservice_txt}}</p><p><label>Meal Location:</label> {{meal.meallocation_txt}}</p></div></div></div></div></div><div class=\"row\"><h3 class=\"with-line\">General Information</h3><div class=\"form-group col-lg-4 col-md-12 col-sm-12\"><label>Tour Manager<code>*</code></label><select chosen=\"\" ng-model=\"formscope.manager\" name=\"manager\" ng-options=\"type.id as type.name disable when type.isDisabled for type in managersOption\" class=\"form-control\" required-error-message=\"{{errorMessage.manager.required}}\" validator=\"required\" valid-method=\"watch, blur\" validation-group=\"manager_error_message\"></select><span id=\"manager_error_message\"></span></div><div class=\"form-group col-lg-4 col-md-12 col-sm-12\" ng-if=\"state.current.name == \\'tours.edit\\'\"><label>Status<code>*</code></label><select chosen=\"\" ng-change=\"changeStatus(formscope.status);\" ng-model=\"formscope.status\" name=\"status\" ng-options=\"type.value as type.label disable when type.isDisabled for type in tourStatusOption\" class=\"form-control\"></select></div></div><div class=\"row\"><div class=\"form-group col-xs-12 col-lg-6 col-md-12 col-sm-12\"><h3 class=\"with-line\"><a type=\"submit\" ng-if=\"havePermission(\\'document_in_tour\\',\\'update\\')\" ng-click=\"addDocument()\" class=\"pull-right btn btn-success\" align=\"Add Document\">Add</a>Documents Information</h3><div class=\"horizontal-scroll form-group\"><table datatable=\"ng\" dt-instance=\"documentInstance\" dt-options=\"documentOptions\" dt-column-defs=\"dtColumnDefs\" class=\"row-border hover\"><thead><tr><th>No</th><th>Title</th><th>Link</th><th>User</th><th>Action</th></tr></thead><tbody><tr ng-repeat=\"doc in docList\"><td>{{$index+1}}</td><td>{{doc.title}}</td><td><a target=\"_blank\" href=\"{{doc.link}}\">View</a></td><td>{{doc.name}}</td><td><a ng-if=\"havePermission(\\'document_in_tour\\',\\'update\\') && loginID == doc.created_by\" ng-click=\"editDocument(doc, $index);\"><i class=\"fa fa-edit\"></i></a> <a ng-if=\"havePermission(\\'document_in_tour\\',\\'delete\\') && loginID == doc.created_by\" ng-confirm-click=\"Are you sure to delete this document?\" confirmed--click=\"removeDoc($index)\"><i class=\"fa fa-trash-o\"></i></a></td></tr></tbody></table></div></div><div class=\"form-group col-xs-12 col-lg-6 col-md-12 col-sm-12\"><h3 class=\"with-line\"><a type=\"submit\" ng-if=\"havePermission(\\'note_in_tour\\',\\'update\\')\" ng-click=\"addNote()\" class=\"pull-right btn btn-success\" align=\"Add Note\">Add</a> Notes</h3><div class=\"horizontal-scroll\"><table datatable=\"ng\" dt-instance=\"notesInstance\" dt-options=\"notesOptions\" dt-column-defs=\"notesColumnDefs\" class=\"row-border hover\"><thead><tr><th>No</th><th>Note</th><th>User</th><th>Action</th></tr></thead><tbody><tr ng-repeat=\"note in notes\"><td>{{$index+1}}</td><td>{{note.note}}</td><td>{{note.name}}</td><td><a ng-if=\"havePermission(\\'note_in_tour\\',\\'update\\') && loginID == note.created_by\" ng-click=\"editNote(note, $index);\"><i class=\"fa fa-edit\"></i></a> <a ng-if=\"havePermission(\\'note_in_tour\\',\\'delete\\') && loginID == note.created_by\" ng-confirm-click=\"Are you sure to delete this note?\" confirmed--click=\"removeNotes($index)\"><i class=\"fa fa-trash-o\"></i></a></td></tr></tbody></table></div></div></div><div class=\"row\"><button ng-if=\"state.current.name == \\'tours.add\\'\" ng-click=\"mailModal(add_form)\" ng-disabled=\"isSubmitted\" class=\"btn btn-success\" align=\"center\"><i class=\"fa fa-spinner fa-spin\" aria-hidden=\"true\" ng-show=\"loginProgress\"></i> {{btnName}}</button> <button ng-if=\"state.current.name == \\'tours.edit\\'\" ng-click=\"add_data(add_form)\" ng-disabled=\"isSubmitted\" class=\"btn btn-success\" align=\"center\"><i class=\"fa fa-spinner fa-spin\" aria-hidden=\"true\" ng-show=\"loginProgress\"></i> {{btnName}}</button> <a type=\"submit\" ui-sref=\"tours.list\" class=\"btn btn-info\" align=\"center\">Cancel</a></div></form></div></div></div></div></div>');\n$templateCache.put('app/pages/tours/addvisitor_backup.html','<div class=\"modal-content\"><div class=\"modal-header\"><button type=\"button\" class=\"close\" ng-click=\"$dismiss()\" aria-label=\"Close\"><em class=\"ion-ios-close-empty sn-link-close\"></em></button><h4 class=\"modal-title\" id=\"myModalLabel\">Add Visitor</h4></div><form ng-submit=\"add_data(add_form)\" role=\"form\" name=\"add_form\"><div class=\"modal-body\"><p>Add visitor information.</p><div class=\"row\"><div class=\"form-group col-md-6\"><label for=\"input04\">Phone Number<code>*</code></label> <input type=\"text\" ng-blur=\"checkPhoneNumber(formscope.phone_number)\" class=\"form-control\" ng-model=\"formscope.phone_number\" placeholder=\"Please enter your phone number\" phone-input=\"\" name=\"phone_number\" required-error-message=\"{{errorMessage.phone_number.required}}\" maxlength-error-message=\"{{errorMessage.phone_number.maxlength}}\" minlength-error-message=\"{{errorMessage.phone_number.minlength}}\" validator=\"required, maxlength=15, minlength=10\" valid-method=\"blur\" chars=\"numbers\"></div><div class=\"form-group col-md-6\"><label for=\"input04\">Mobile<code>*</code></label> <input type=\"text\" class=\"form-control\" ng-model=\"formscope.mobile\" placeholder=\"Please enter your mobile number\" phone-input=\"\" name=\"mobile\" required-error-message=\"{{errorMessage.mobile.required}}\" maxlength-error-message=\"{{errorMessage.mobile.maxlength}}\" minlength-error-message=\"{{errorMessage.mobile.minlength}}\" validator=\"required, maxlength=15, minlength=10\" valid-method=\"blur\" chars=\"numbers\"></div></div><div class=\"row\"><div class=\"form-group col-md-4\"><label for=\"input01\">First Name<code>*</code></label> <input type=\"text\" class=\"form-control\" ng-model=\"formscope.first_name\" placeholder=\"Please enter first name\" name=\"first_name\" required-error-message=\"{{errorMessage.first_name.required}}\" minlength-error-message=\"{{errorMessage.first_name.minlength}}\" maxlength-error-message=\"{{errorMessage.first_name.maxlength}}\" validator=\"required, minlength=2, maxlength=20\" valid-method=\"blur\" chars=\"letters\"></div><div class=\"form-group col-md-4\"><label for=\"input01\">Middle Name</label> <input type=\"text\" class=\"form-control\" ng-model=\"formscope.middle_name\" placeholder=\"Please enter first name\" name=\"middle_name\"></div><div class=\"form-group col-md-4\"><label for=\"input01\">Last Name<code>*</code></label> <input type=\"text\" class=\"form-control\" ng-model=\"formscope.last_name\" placeholder=\"Please enter Last name\" name=\"last_name\" required-error-message=\"{{errorMessage.last_name.required}}\" minlength-error-message=\"{{errorMessage.last_name.minlength}}\" maxlength-error-message=\"{{errorMessage.last_name.maxlength}}\" validator=\"required, minlength=2, maxlength=20\" valid-method=\"blur\" chars=\"letters\"></div></div><div class=\"row\"><div class=\"form-group col-md-4\"><label for=\"textarea01\">Organization Type<code>*</code></label><select ng-model=\"formscope.organization_id\" name=\"organization_id\" ng-options=\"company.id as company.name for company in OrganizationOption\" class=\"form-control\" required-error-message=\"{{errorMessage.organization_id.required}}\" validator=\"required\" valid-method=\"blur\"></select></div><div class=\"form-group col-md-4\"><label for=\"input01\">Organization Name<code>*</code></label><angucomplete-alt id=\"ex1\" placeholder=\"Please enter organization name\" pause=\"100\" initial-value=\"formscope.organization\" selected-object=\"residentSelected\" local-data=\"organizationNameOption\" search-fields=\"organization\" title-field=\"organization\" minlength=\"1\" input-class=\"form-control\" match-class=\"highlight\" field-required=\"true\" auto-match=\"true\" override-suggestions=\"true\"></angucomplete-alt></div><div class=\"form-group col-md-4\"><label for=\"textarea01\">Visitor Type<code>*</code></label><select ng-model=\"formscope.visitor_type\" name=\"visitor_type\" ng-options=\"company.id as company.name for company in VisitorOption\" class=\"form-control\" required-error-message=\"{{errorMessage.visitor_type.required}}\" validator=\"required\" valid-method=\"blur\"></select></div></div><div class=\"row\"><div class=\"form-group col-md-6\"><label for=\"input01\">Email<code>*</code></label> <input type=\"email\" class=\"form-control\" ng-model=\"formscope.email\" placeholder=\"Please enter email\" name=\"email\" required-error-message=\"{{errorMessage.email.required}}\" email-error-message=\"{{errorMessage.email.invalidEmail}}\" minlength-error-message=\"{{errorMessage.email.minlength}}\" maxlength-error-message=\"{{errorMessage.email.maxlength}}\" validator=\"required, email, minlength=2, maxlength=100\" valid-method=\"blur\"></div><div class=\"form-group col-md-6\"><label for=\"textarea01\">Gender</label><select ng-model=\"formscope.gender\" name=\"gender\" ng-options=\"company.value as company.label for company in genderOption\" class=\"form-control\"></select></div></div><div class=\"row\"><div class=\"form-group col-xs-6\"><label>Street 1<code>*</code></label> <input type=\"text\" class=\"form-control\" ng-model=\"formscope.address\" placeholder=\"Please enter Street 1\" name=\"address\" required-error-message=\"{{errorMessage.address.required}}\" minlength-error-message=\"{{errorMessage.address.minlength}}\" maxlength-error-message=\"{{errorMessage.address.maxlength}}\" validator=\"required, minlength=2, maxlength=100\" valid-method=\"blur\" chars=\"text\"></div><div class=\"form-group col-xs-6\"><label>Street 2<code>*</code></label> <input type=\"text\" class=\"form-control\" ng-model=\"formscope.address1\" placeholder=\"Please enter Street 2\" name=\"address1\" required-error-message=\"{{errorMessage.address1.required}}\" minlength-error-message=\"{{errorMessage.address1.minlength}}\" maxlength-error-message=\"{{errorMessage.address1.maxlength}}\" validator=\"minlength=2, maxlength=100\" valid-method=\"blur\" chars=\"text\"></div></div><div class=\"row\"><div class=\"form-group col-xs-6\"><label>Country<code>*</code></label><select ng-model=\"formscope.country_id\" name=\"country_id\" ng-options=\"country.id as country.country_name for country in countries\" class=\"form-control\" required-error-message=\"{{errorMessage.country_id.required}}\" validator=\"required\" valid-method=\"blur\"></select></div><div class=\"form-group col-xs-6\"><label>State<code>*</code></label> <input type=\"text\" class=\"form-control\" ng-model=\"formscope.state\" placeholder=\"Please enter state name\" name=\"state\" required-error-message=\"{{errorMessage.state.required}}\" minlength-error-message=\"{{errorMessage.state.minlength}}\" maxlength-error-message=\"{{errorMessage.state.maxlength}}\" validator=\"required, minlength=2, maxlength=50\" valid-method=\"blur\" chars=\"text\"></div></div><div class=\"row\"><div class=\"form-group col-xs-6\"><label>City<code>*</code></label> <input type=\"text\" class=\"form-control\" ng-model=\"formscope.city\" placeholder=\"Please enter city name\" name=\"city\" required-error-message=\"{{errorMessage.city.required}}\" minlength-error-message=\"{{errorMessage.city.minlength}}\" maxlength-error-message=\"{{errorMessage.city.maxlength}}\" validator=\"required, minlength=2, maxlength=100\" valid-method=\"blur\" chars=\"text\"></div><div class=\"form-group col-xs-6\"><label>Zip Code<code>*</code></label> <input type=\"text\" placeholder=\"Please enter zip code\" class=\"form-control\" name=\"zip_code\" ng-model=\"formscope.zip_code\" required-error-message=\"{{errorMessage.state.required}}\" minlength-error-message=\"{{errorMessage.state.minlength}}\" maxlength-error-message=\"{{errorMessage.state.maxlength}}\" validator=\"required, minlength=2, maxlength=6\" valid-method=\"blur\" chars=\"numbers\"></div></div></div><div class=\"modal-footer\"><button type=\"submit\" ng-disabled=\"isSubmitted\" class=\"btn btn-success\" align=\"center\">{{btnName}}</button></div></form></div>');\n$templateCache.put('app/pages/tours/commentModal.html','<div class=\"modal-content\"><div class=\"modal-header\"><button type=\"button\" class=\"close\" ng-click=\"$dismiss()\" aria-label=\"Close\"><em class=\"ion-ios-close-empty sn-link-close\"></em></button><h4 class=\"modal-title\" id=\"myModalLabel\">Comment</h4></div><form name=\"linkForm\"><div class=\"modal-body\"><div class=\"form-group\"><textarea placeholder=\"Please enter comment\" class=\"form-control\" ng-model=\"comment\" name=\"comment\" chars=\"text\"></textarea></div><span style=\"color:red;\" ng-if=\"message\">{{message}}</span></div><div class=\"modal-footer\"><button type=\"button\" class=\"btn btn-primary\" ng-click=\"ok(comment)\">Comment</button></div></form></div>');\n$templateCache.put('app/pages/tours/documentModal.html','<div class=\"modal-content\"><div class=\"modal-header\"><button type=\"button\" class=\"close\" ng-click=\"$dismiss()\" aria-label=\"Close\"><em class=\"ion-ios-close-empty sn-link-close\"></em></button><h4 class=\"modal-title\" id=\"myModalLabel\">{{titleName}}</h4></div><form ng-submit=\"add_data(add_form)\" role=\"form\" name=\"add_form\"><div class=\"modal-body\"><div class=\"row col-md-12\"><div class=\"form-group col-md-6\"><label>Document Title<code>*</code></label> <input focus-me=\"\" type=\"text\" class=\"form-control\" ng-model=\"formdocscope.title\" placeholder=\"Document title\" name=\"title\" required-error-message=\"{{errorMessage.title.required}}\" minlength-error-message=\"{{errorMessage.title.minlength}}\" maxlength-error-message=\"{{errorMessage.title.maxlength}}\" validator=\"required, minlength=2, maxlength=50\" valid-method=\"blur\"></div><div class=\"form-group col-md-6\"><label>Document Link<code>*</code></label> <input type=\"text\" class=\"form-control\" ng-model=\"formdocscope.link\" placeholder=\"http://example.com\" name=\"link\" required-error-message=\"{{errorMessage.link.required}}\" url-error-message=\"{{errorMessage.link.error}}\" validator=\"required, link\" valid-method=\"blur\"></div></div></div><div class=\"modal-footer\"><button type=\"submit\" ng-disabled=\"isSubmitted\" class=\"btn btn-success\" align=\"center\">{{btnName}}</button></div></form></div>');\n$templateCache.put('app/pages/tours/feedback.html','<div class=\"message-container\" style=\"border-left: none; width: 100%; background-color: #fff !important;\"><div class=\"message more-text-widget text-center\" ng-if=\"formscope.link_expired == 1\"><p style=\"color: #e85656; font-size: 20px;\">{{formscope.errorMessage}}</p></div><div class=\"message\" ng-if=\"displayForm\"><div class=\"message-body text-center\" ng-if=\"filled\"><b>{{filledForm}}</b></div><div class=\"message-body\" ng-if=\"!filled\"><form class=\"form-validation\" ng-submit=\"add_data(add_form)\" role=\"form\" name=\"add_form\"><div class=\"col-md-12\"><div class=\"row\"><div class=\"form-group col-md-6\"><label>Rating:</label><jk-rating-stars on-rating=\"setRating(rating)\" rating=\"firstRate\"></jk-rating-stars></div></div><div class=\"row\"><div class=\"form-group col-md-6\"><label>Comments:</label> <textarea placeholder=\"Please enter feedback\" class=\"form-control\" ng-model=\"formscope.comment\" name=\"comment\" required-error-message=\"{{errorMessage.feedback.required}}\" validator=\"required\" valid-method=\"blur\"></textarea></div></div><div class=\"row\"><div class=\"form-group col-md-12\"><button type=\"submit\" ng-disabled=\"isSubmitted\" class=\"btn btn-success\" align=\"center\">{{btnName}}</button></div></div></div></form></div></div></div>');\n$templateCache.put('app/pages/tours/mailModal.html','<div class=\"modal-content\" ng-if=\"displayEditor\"><div class=\"modal-header\"><h4 class=\"modal-title text-center\" id=\"myModalLabel\">Mail Confirmation</h4></div><div class=\"modal-body\"><div><label>Mail Subject</label> <input type=\"text\" placeholder=\"Please enter mail subject\" ng-model=\"formscope.mailSubject\" class=\"form-control\"></div><div style=\"margin-top: 10px;\"><label style=\"display: block;\">Mail Body</label><text-angular placeholder=\"Please enter mail body\" ng-model=\"formscope.mailContent\" ta-toolbar=\"[[\\'h1\\',\\'h2\\',\\'h3\\',\\'h4\\',\\'h5\\',\\'h6\\',\\'p\\'],[\\'bold\\',\\'italics\\',\\'underline\\']]\"></text-angular></div></div><div class=\"modal-footer\"><div class=\"row col-md-12 text-center\"><a type=\"submit\" ng-click=\"sendMail()\" class=\"btn btn-success\">Send Mail</a> <a type=\"submit\" ng-click=\"donotsendMail()\" class=\"btn btn-danger\">Do Not Send Mail</a></div></div></div>');\n$templateCache.put('app/pages/tours/mealModal.html','<div class=\"modal-content\"><div class=\"modal-header\"><button type=\"button\" class=\"close\" ng-click=\"$dismiss()\" aria-label=\"Close\"><em class=\"ion-ios-close-empty sn-link-close\"></em></button><h4 class=\"modal-title\" id=\"myModalLabel\"><span>{{formTitle}}</span> Meal Service</h4></div><form ng-submit=\"add_data(add_form)\" role=\"form\" name=\"add_form\"><div class=\"modal-body\"><div class=\"row col-md-12\"><div class=\"form-group col-md-6\"><label>Meal Type<code>*</code></label><select chosen=\"\" ng-model=\"formscope.meal_id\" name=\"meal_id\" ng-options=\"type.id as type.name disable when type.isDisabled for type in mealsTypeOption\" class=\"form-control\" required-error-message=\"{{errorMessage.meal_id.required}}\" validator=\"required\" valid-method=\"watch, blur\" validation-group=\"meal_type_error_message\"></select><span id=\"meal_type_error_message\"></span> <input type=\"hidden\" ng-model=\"formscope.old_meal_id\" name=\"old_meal_id\"></div><div class=\"form-group col-md-6\"><label>Specific Items</label> <input type=\"text\" class=\"form-control\" ng-model=\"formscope.specific_item\" placeholder=\"Please enter specific item\" name=\"specific_item\" chars=\"letters\"></div></div><div class=\"row col-md-12\"><div class=\"form-group col-md-6\"><label>How Many People<code>*</code></label> <input type=\"text\" class=\"form-control\" ng-keyup=\"checkNumber($event)\" ng-model=\"formscope.people\" placeholder=\"Please enter people count\" name=\"people\" required-error-message=\"{{errorMessage.people.required}}\" minlength-error-message=\"{{errorMessage.people.minlength}}\" maxlength-error-message=\"{{errorMessage.people.maxlength}}\" validator=\"required, minlength=1, maxlength=5\" valid-method=\"blur\" chars=\"numbers\"></div><div class=\"form-group col-md-6\"><label>Catering Manager<code>*</code></label><select chosen=\"\" ng-model=\"formscope.catering_manager\" name=\"catering_manager\" ng-options=\"type.id as type.name disable when type.isDisabled for type in usersOption\" class=\"form-control\" required-error-message=\"{{errorMessage.catering_manager.required}}\" validator=\"required\" valid-method=\"watch, blur\" validation-group=\"catering_manager_error_message\"></select><span id=\"catering_manager_error_message\"></span></div></div><div class=\"row col-md-12\"><div class=\"form-group col-md-6\"><label>Meal Service Type<code>*</code></label><select chosen=\"\" ng-model=\"formscope.meal_service_type_id\" name=\"meal_service_type_id\" ng-options=\"type.id as type.name for type in mealServiceTypeOption\" class=\"form-control\" required-error-message=\"{{errorMessage.meal_service_type_id.required}}\" validator=\"required\" valid-method=\"watch, blur\" validation-group=\"meal_service_type_id_error_message\"></select><span id=\"meal_service_type_id_error_message\"></span></div><div class=\"form-group col-md-6\"><label>Meal Service Location<code>*</code></label><select chosen=\"\" ng-model=\"formscope.meal_service_location_id\" name=\"meal_service_location_id\" ng-options=\"type.id as type.name for type in mealServiceLocationsOption\" class=\"form-control\" required-error-message=\"{{errorMessage.meal_service_location_id.required}}\" validator=\"required\" valid-method=\"watch, blur\" validation-group=\"meal_service_location_id_error_message\"></select><span id=\"meal_service_location_id_error_message\"></span></div></div></div><div class=\"modal-footer\"><button type=\"submit\" ng-disabled=\"isSubmitted\" class=\"btn btn-success\" align=\"center\">{{btnName}}</button></div></form></div>');\n$templateCache.put('app/pages/tours/noteModal.html','<div class=\"modal-content\"><div class=\"modal-header\"><button type=\"button\" class=\"close\" ng-click=\"$dismiss()\" aria-label=\"Close\"><em class=\"ion-ios-close-empty sn-link-close\"></em></button><h4 class=\"modal-title\" id=\"myModalLabel\">{{titleName}}</h4></div><form ng-submit=\"add_data(add_form)\" role=\"form\" name=\"add_form\"><div class=\"modal-body\"><div class=\"row col-md-12\"><div class=\"form-group\"><label>Note<code>*</code></label><textarea focus-me=\"\" placeholder=\"Note...\" class=\"form-control\" ng-model=\"formnotescope.note\" name=\"note\" required-error-message=\"{{errorMessage.note.required}}\" minlength-error-message=\"{{errorMessage.note.minlength}}\" validator=\"required, minlength=2\" valid-method=\"blur\">\\n                    </textarea></div></div></div><div class=\"modal-footer\"><button type=\"submit\" ng-disabled=\"isSubmitted\" class=\"btn btn-success\" align=\"center\">{{btnName}}</button></div></form></div>');\n$templateCache.put('app/pages/tours/taskModal.html','<div class=\"modal-content\"><div class=\"modal-header\"><button type=\"button\" class=\"close\" ng-click=\"$dismiss()\" aria-label=\"Close\"><em class=\"ion-ios-close-empty sn-link-close\"></em></button><h4 class=\"modal-title\" id=\"myModalLabel\">Add Task</h4></div><form name=\"linkForm\"><div class=\"modal-body\"><div class=\"form-group\"><input type=\"text\" focus-me=\"\" class=\"form-control\" placeholder=\"Please add task\" chars=\"text\" maxlength=\"50\" ng-model=\"task\"></div><span style=\"color:red;\" ng-if=\"message\">{{message}}</span></div><div class=\"modal-footer\"><button type=\"button\" class=\"btn btn-primary\" ng-click=\"ok(task)\">Add Task</button></div></form></div>');\n$templateCache.put('app/pages/tours/view.html','<div class=\"widgets\"><div class=\"row\"><div class=\"col-md-12\"><div ba-panel=\"\" ba-panel-title=\"{{ activePageTitle }} Listing\"><div class=\"form-group\"><div class=\"form-group col-xs-12 col-sm-4 col-lg-2 pull-right\"><select ng-change=\"filerdatatable()\" ng-model=\"formData.filterData\" name=\"filterData\" ng-options=\"company.value as company.label for company in searchData\" class=\"form-control\"></select></div><button class=\"btn btn-primary\" ng-if=\"havePermission(\\'tours\\',\\'create\\');\" ui-sref=\"tours.add\">Add Tour</button></div><div class=\"horizontal-scroll col-lg-12\"><table datatable=\"\" dt-instance=\"$parent.dtInstance\" dt-options=\"dtOptions\" dt-columns=\"dtColumns\" class=\"row-border hover\"></table></div></div></div></div></div>');\n$templateCache.put('app/pages/tours/viewdetails (copy).html','<div class=\"message-container viewTourMain\"><div class=\"message\"><div class=\"row paddingright1\"><button ui-sref=\"tours.list\" type=\"button\" class=\"back-button btn btn-default btn-with-icon pull-right px-2\"><i class=\"ion-chevron-left\"></i>Back</button></div><div class=\"message-details\"><span class=\"subject\">Tour Contact Person Information</span></div><div class=\"line\"></div><div class=\"person-info row\"><div class=\"col-lg-4 col-md-12 no-padding\"><div class=\"name\"><h2 class=\"name-h\">{{contactManagerDetails.visitor.name}}</h2><div><span class=\"mail-tag tag label label-success\">{{contactManagerDetails.visitor.visitor_txt}}</span> <span class=\"mail-tag tag label label-info\">{{contactManagerDetails.visitor.gender_txt}}</span></div></div></div><div class=\"col-lg-4 col-md-6 col-xs-12 no-padding\"><div class=\"contact-info phone-email\"><div><i class=\"ion-iphone\"></i> <span class=\"phone\">{{contactManagerDetails.visitor.phone_number | tel}}</span></div><div><i class=\"ion-iphone\"></i> <span class=\"phone\">{{contactManagerDetails.visitor.mobile | tel}}</span></div><div><i class=\"ion-email\"></i> <span class=\"email\">{{contactManagerDetails.visitor.email}}</span></div></div></div><div class=\"col-lg-4 col-md-6 col-xs-12 no-padding\"><div class=\"contact-info position-address\"><div><span class=\"position\">{{contactManagerDetails.visitor.organization_txt}}</span></div><div><i class=\"ion-location\"></i> <span class=\"address\">{{contactManagerDetails.visitor.address}}</span></div></div></div></div><div class=\"message-details\"><span class=\"subject\">Tour Information</span></div><div class=\"line\"></div><div class=\"message-body\"><div class=\"col-md-12\"><div class=\"col-lg-6 col-md-12\"><div class=\"panel panel-default\"><div class=\"panel-heading\">General Information</div><div class=\"panel-body\"><div class=\"form-group col-md-12\"><label class=\"col-sm-3 control-label\">Name:</label><div class=\"col-sm-9\">{{formscope.name}}</div></div><div class=\"form-group col-md-12\"><label class=\"col-sm-3 control-label\">Organization:</label><div class=\"col-sm-9\">{{formscope.organization}}</div></div><div class=\"form-group col-md-12\"><label class=\"col-sm-3 control-label\">Arrival Date:</label><div class=\"col-sm-9\">{{formscope.start_date | amDateFormat:\\'(dddd) DD, MMMM YYYY\\'}}</div></div><div class=\"form-group col-md-12\"><label class=\"col-sm-3 control-label\">Transport Type:</label><div class=\"col-sm-9\">{{formscope.tour_transport.name}}</div></div><div class=\"form-group col-md-12\"><label class=\"col-sm-3 control-label\">Location:</label><div class=\"col-sm-9\">{{formscope.tour_location.name}}</div></div><div class=\"form-group col-md-12\"><label class=\"col-sm-3 control-label\">Person:</label><div class=\"col-sm-9\"><p><span>Children:</span> {{formscope.children}}</p><p><span>Adults:</span> {{formscope.adults}}</p><p><span>Senior:</span> {{formscope.senior}}</p></div></div><div class=\"form-group col-md-12\"><label class=\"col-sm-3 control-label\">Special Request:</label><div class=\"col-sm-9\">{{formscope.special_request}}</div></div></div></div></div><div class=\"col-lg-6 col-md-12\"><div class=\"panel panel-default\"><div class=\"panel-heading\">Tour Task</div><div class=\"panel-body\"><div class=\"form-group col-md-12\"><label class=\"col-sm-3 control-label\">Tour Type:</label><div class=\"col-sm-9\">{{formscope.tour_tapes.name}}</div></div><div class=\"form-group col-md-12\"><label class=\"col-sm-3 control-label\">Task:</label><div class=\"col-sm-9\" ng-repeat=\"task in formscope.tasks\"><p>{{task.task}}</p><div class=\"line\"></div></div></div></div></div></div></div></div><div class=\"message-details\"><span class=\"subject\">Visitors Information</span></div><div class=\"line\"></div><div class=\"message-body\"><div class=\"col-md-12\"><div class=\"col-md-4\" ng-repeat=\"visitor in visitors\"><div class=\"panel panel-default bootstrap-panel\"><div class=\"panel-heading\">{{visitor.name}} ({{visitor.gender_txt}})</div><div class=\"panel-body\"><p><label>Email:</label> {{visitor.email}}</p><p><label>Contact Number:</label> {{visitor.phone_number}}, {{visitor.mobile}}</p><p><label>Organization Type:</label> {{visitor.organization_txt}}</p><p><label>Visitor Type:</label> {{visitor.visitor_txt}}</p><p><label>Address:</label> {{visitor.address}}</p></div></div></div></div></div><div class=\"message-details\"><span class=\"subject\">Meals Information</span></div><div class=\"line\"></div><div class=\"message-body\"><div class=\"col-md-12\"><div ng-if=\"formscope.meals\"><div class=\"col-md-4\" ng-repeat=\"meal in mealsType\"><div class=\"panel panel-default bootstrap-panel xsmall-panel\"><div class=\"panel-heading\">{{meal.meal_txt}}</div><div class=\"panel-body\"><p><label>Specific item:</label> {{meal.specific_item}}</p><p><span><label>Catering manager:</label> {{meal.catering_manager_txt}}</span> <span class=\"pull-right\"><label>People:</label> {{meal.people}}</span></p><p><label>Meal Service:</label> {{meal.mealservice_txt}}</p><p><label>Meal Location:</label> {{meal.meallocation_txt}}</p></div></div></div></div></div></div></div></div>');\n$templateCache.put('app/pages/tours/viewdetails.html','<div class=\"widgets\"><div class=\"viewTourMain\"><div class=\"message\"><div class=\"row\"><div class=\"col-md-12\"><h3 class=\"with-line\"><a ng-show=\"editTourBtn\" class=\"btn btn-primary ng-scope pull-right\" style=\"margin-left: 10px;\" ng-if=\"havePermission(\\'tours\\',\\'update\\');\" ui-sref=\"tours.edit({ id: formscope.id })\">Edit</a> <button ui-sref=\"tours.list\" type=\"button\" class=\"back-button btn btn-default btn-with-icon pull-right\"><i class=\"ion-chevron-left\"></i>Back</button> {{pageName}}</h3><div ba-panel=\"\" ba-panel-class=\"with-scroll horizontal-tabs tabs-panel medium-panel\" style=\"height: auto !important;\"><uib-tabset active=\"$tabSetStatus.activeTab\"><uib-tab heading=\"Tour Information\"><div class=\"form-group col-md-6\"><h3 class=\"with-line\">Contact Person Information</h3><div class=\"form-group row clearfix\"><label class=\"col-xs-12 col-sm-3\">Name:</label><div class=\"col-xs-12 col-sm-9\">{{contactManagerDetails.visitor.name}}</div></div><div class=\"form-group row clearfix\"><label class=\"col-xs-12 col-sm-3\">Email:</label><div class=\"col-xs-12 col-sm-9\">{{contactManagerDetails.visitor.email}}</div></div><div class=\"form-group row clearfix\"><label class=\"col-xs-12 col-sm-3\">Mobile:</label><div class=\"col-xs-12 col-sm-9\">{{contactManagerDetails.visitor.mobile | tel}}</div></div><div class=\"form-group row clearfix\"><label class=\"col-xs-12 col-sm-3\">Organization:</label><div class=\"col-xs-12 col-sm-9\">{{contactManagerDetails.visitor.organization}}</div></div></div><div class=\"form-group col-md-6\"><h3 class=\"with-line\">Tour Manager Information</h3><div ng-if=\"formscope.manager\"><div class=\"form-group row clearfix\"><label class=\"col-xs-12 col-sm-3\">Name:</label><div class=\"col-xs-12 col-sm-9\">{{formscope.tour_manager.name}}</div></div><div class=\"form-group row clearfix\"><label class=\"col-xs-12 col-sm-3\">Email:</label><div class=\"col-xs-12 col-sm-9\">{{formscope.tour_manager.email}}</div></div><div class=\"form-group row clearfix\"><label class=\"col-xs-12 col-sm-3\">Phone:</label><div class=\"col-xs-12 col-sm-9\">{{formscope.tour_manager.phone_number | tel}}</div></div></div></div><div class=\"form-group col-md-12\"><h3 class=\"with-line\">Tour Information</h3><div class=\"form-group col-md-6\"><div class=\"form-group row clearfix\"><label class=\"col-xs-12 col-sm-3\">Name:</label><div class=\"col-xs-12 col-sm-9\">{{formscope.name}}</div></div><div class=\"form-group row clearfix\"><label class=\"col-xs-12 col-sm-3\">Organization:</label><div class=\"col-xs-12 col-sm-9\">{{formscope.organization}}</div></div><div class=\"form-group row clearfix\"><label class=\"col-xs-12 col-sm-3\">Tour Date:</label><div class=\"col-xs-12 col-sm-9\">{{formscope.start_date | amDateFormat:\\'(dddd) DD, MMMM YYYY\\'}}</div></div><div class=\"form-group row clearfix\"><label class=\"col-xs-12 col-sm-3\">Transport Type:</label><div class=\"col-xs-12 col-sm-9\">{{formscope.tour_transport.name}}</div></div><div class=\"form-group row clearfix\"><label class=\"col-xs-12 col-sm-3\">Tour Type:</label><div class=\"col-xs-12 col-sm-9\">{{formscope.tour_tapes.name || \\'-\\'}}</div></div></div><div class=\"form-group col-md-6\"><div class=\"form-group row clearfix\"><label class=\"col-xs-12 col-sm-3\">Visitor Category:</label><div class=\"col-xs-12 col-sm-9\">{{visitorcategory}}</div></div><div class=\"form-group row clearfix\"><label class=\"col-xs-12 col-sm-3\">Special Request:</label><div class=\"col-xs-12 col-sm-9\">{{formscope.special_request}}</div></div><div class=\"form-group row clearfix\"><label class=\"col-xs-12 col-sm-3\">Person:</label><div class=\"col-xs-12 col-sm-92 col-sm-3\"><p><span>Children:</span> {{formscope.children}}</p></div><div class=\"col-xs-12 col-sm-3\"><p><span>Adults:</span> {{formscope.adults}}</p></div><div class=\"col-xs-12 col-sm-3\"><p><span>Senior:</span> {{formscope.senior}}</p></div></div><div class=\"form-group row clearfix\"><label class=\"col-xs-12 col-sm-3\">Total Guests:</label><div class=\"col-xs-12 col-sm-9\">{{formscope.total_guest}}</div></div></div></div><div class=\"row\"><div class=\"form-group col-md-12\"><div class=\"form-group col-xs-12 col-lg-6 col-md-12 col-sm-12\"><h3 class=\"with-line\"><a type=\"submit\" ng-if=\"tourCompleted && havePermission(\\'document_in_tour\\',\\'create\\')\" ng-click=\"addDocument()\" class=\"pull-right btn btn-success\" align=\"Add Document\">Add</a>Documents Information</h3><div class=\"horizontal-scroll\"><table datatable=\"ng\" dt-instance=\"documentInstance\" dt-options=\"documentOptions\" dt-column-defs=\"dtColumnDefs\" class=\"row-border hover\"><thead><tr><th>No</th><th>Title</th><th>Link</th><th>User</th><th>Action</th></tr></thead><tbody><tr ng-repeat=\"doc in docList\"><td>{{$index+1}}</td><td>{{doc.title}}</td><td><a target=\"_blank\" href=\"{{doc.link}}\">View</a></td><td>{{doc.name}}</td><td><a ng-if=\"havePermission(\\'document_in_tour\\',\\'update\\') && tourCompleted && loginID == doc.created_by\" ng-click=\"editDocument(doc, $index);\"><i class=\"fa fa-edit\"></i></a> <a ng-if=\"havePermission(\\'document_in_tour\\',\\'delete\\') && tourCompleted && loginID == doc.created_by\" ng-confirm-click=\"Are you sure to delete this document?\" confirmed--click=\"removeDoc($index)\"><i class=\"fa fa-trash-o\"></i></a></td></tr></tbody></table></div></div><div class=\"form-group col-xs-12 col-lg-6 col-md-12 col-sm-12\"><h3 class=\"with-line\"><a type=\"submit\" ng-if=\"tourCompleted && havePermission(\\'note_in_tour\\',\\'create\\')\" ng-click=\"addNote()\" class=\"pull-right btn btn-success\" align=\"Add Note\">Add</a> Notes</h3><div class=\"horizontal-scroll\"><table datatable=\"ng\" dt-instance=\"notesInstance\" dt-options=\"notesOptions\" dt-column-defs=\"notesColumnDefs\" class=\"row-border hover\"><thead><tr><th>No</th><th>Note</th><th>User</th><th>Action</th></tr></thead><tbody><tr ng-repeat=\"note in notes\"><td>{{$index+1}}</td><td>{{note.note}}</td><td>{{note.name}}</td><td><a ng-if=\"havePermission(\\'note_in_tour\\',\\'update\\') && tourCompleted && loginID == note.created_by\" ng-click=\"editNote(note, $index);\"><i class=\"fa fa-edit\"></i></a> <a ng-if=\"havePermission(\\'note_in_tour\\',\\'delete\\') && tourCompleted && loginID == note.created_by\" ng-confirm-click=\"Are you sure to delete this note?\" confirmed--click=\"removeNotes($index)\"><i class=\"fa fa-trash-o\"></i></a></td></tr></tbody></table></div></div></div></div><div class=\"row\"><div class=\"form-group col-md-12\"><div class=\"form-group col-md-4\" ng-if=\"havePermission(\\'tours\\',\\'updatestatus\\');\"><h3 class=\"with-line\">Tour Status</h3><select chosen=\"\" ng-change=\"changeStatus(formscope.status);\" ng-model=\"formscope.status\" name=\"status\" ng-options=\"type.value as type.label disable when type.isDisabled for type in tourStatusOption\" class=\"form-control\"></select></div><div class=\"form-group col-md-12\"><div ba-panel=\"\" ba-panel-title=\"Activity\" ba-panel-class=\"with-scroll\" ng-if=\"activity.length\"><div class=\"horizontal-scroll\" style=\"padding: 15px\"><table datatable=\"ng\" dt-instance=\"historyInstance\" dt-options=\"historyOptions\" dt-column-defs=\"historyColumnDefs\" class=\"row-border hover\"><thead><tr class=\"sortable\"><th>Activity</th><th>Date Time</th></tr></thead><tbody><tr ng-repeat=\"visitor in activity\"><td>{{visitor.activity}}</td><td>{{visitor.created_at | amUtc | amLocal | amDateFormat:\\'DD-MM-YYYY h:mm A\\'}}</td></tr></tbody></table></div></div></div></div></div></uib-tab><uib-tab heading=\"Tour Task\"><div class=\"form-group col-md-12\"><button ng-show=\"tourCompleted\" ng-if=\"havePermission(\\'tourtasks\\',\\'create\\');\" class=\"btn btn-primary\" ng-click=\"addTask()\">Add Task</button></div><div class=\"form-group col-md-12\"><div class=\"horizontal-scroll\"><table class=\"table table-bordered table-hover table-condensed\" ng-if=\"showTable === true\"><tr><td>Task</td><td>Assign User</td><td>Status</td><td>Actions</td></tr><tr ng-repeat=\"user in formscope.tasks\" class=\"editable-row\"><td><span editable-text=\"user.task\" e-chars=\"alpha-numeric\" e-name=\"task\" e-form=\"rowform\" e-required=\"\" onbeforesave=\"checkTask($data)\">{{ user.task || \\'empty\\' }}</span></td><td class=\"select-td\"><span editable-select=\"user.user_id\" e-name=\"user_id\" e-form=\"rowform\" e-selectpicker=\"\" e-ng-options=\"s.id as s.name disable when s.isDisabled for s in volunteersOption\" onbeforesave=\"checkStatus($data)\">{{ showUsers(user) }}</span></td><td class=\"select-td\"><span>{{ showStatus(user) }}</span></td><td><form onbeforesave=\"add_data($data, user.id, $index)\" role=\"form\" editable-form=\"\" name=\"rowform\" ng-show=\"rowform.$visible\" class=\"form-buttons form-inline\" shown=\"inserted == user\"><button type=\"submit\" ng-disabled=\"rowform.$waiting\" class=\"btn btn-primary editable-table-button btn-xs\">Save</button> <button ng-if=\"user.id == null\" type=\"button\" ng-disabled=\"rowform.$waiting\" ng-click=\"cancelRow($index)\" class=\"btn btn-default editable-table-button btn-xs\">Cancel</button> <button ng-if=\"user.id != null\" type=\"button\" ng-disabled=\"rowform.$waiting\" ng-click=\"rowform.$cancel()\" class=\"btn btn-default editable-table-button btn-xs\">Cancel</button></form><div class=\"buttons\" ng-show=\"!rowform.$visible\"><button ng-if=\"tourCompleted && havePermission(\\'tourtasks\\',\\'update\\');\" class=\"btn btn-primary editable-table-button btn-xs\" ng-click=\"rowform.$show()\">Edit</button> <button ng-if=\"tourCompleted && havePermission(\\'tourtasks\\',\\'delete\\');\" class=\"btn btn-danger editable-table-button btn-xs\" ng-confirm-click=\"Are you sure to delete this task?\" confirmed-click=\"removeUser($index, user.id)\">Delete</button><div ng-if=\"user.acknowledge == 0 && userID == user.user_id\"><button ng-if=\"tourCompleted && havePermission(\\'tourtasks\\',\\'accept\\')\" class=\"btn btn-primary editable-table-button btn-xs\" ng-click=\"actionTask(user.id, 1, $index)\">Accept</button> <button ng-if=\"tourCompleted && havePermission(\\'tourtasks\\',\\'reject\\')\" class=\"btn btn-danger editable-table-button btn-xs\" ng-confirm-click=\"Are you sure to reject this task?\" confirmed-click=\"actionTask(user.id, 2, $index)\">Reject</button></div></div></td></tr></table></div></div></uib-tab><uib-tab heading=\"Feedback\" ng-if=\"formscope.tour_feedback\"><div class=\"form-group col-md-6\"><div class=\"form-group row clearfix\"><label class=\"col-xs-2\">Rating:</label><div class=\"col-xs-9\">{{formscope.tour_feedback.rating}}</div></div><div class=\"form-group row clearfix\"><label class=\"col-xs-2\">Comment:</label><div class=\"col-xs-9\">{{formscope.tour_feedback.comment}}</div></div></div></uib-tab><uib-tab heading=\"Visitors Information\"><div ba-panel=\"\" ba-panel-title=\"Visitors\" ba-panel-class=\"with-scroll\" ng-if=\"visitors.length\"><div class=\"horizontal-scroll\" style=\"padding: 15px\"><table datatable=\"ng\" dt-instance=\"visitorInstance\" dt-options=\"visitorOptions\" dt-column-defs=\"visitorColumnDefs\" class=\"row-border hover\"><thead><tr class=\"sortable\"><th>Name</th><th>Email</th><th>Mobile</th><th>Organization type</th><th>Type</th><th>Organization</th><th>Momento</th></tr></thead><tbody><tr ng-repeat=\"visitor in visitors\"><td>{{visitor.name}}</td><td><a class=\"email-link\" ng-href=\"mailto:{{visitor.email}}\">{{visitor.email}}</a></td><td>{{visitor.mobile}}</td><td>{{showOrganizationTypeOption(visitor)}}</td><td>{{showVisitorOption(visitor)}}</td><td>{{visitor.organization}}</td><td>{{visitor.momentos_name || \\'-\\'}}</td></tr></tbody></table></div></div></uib-tab><uib-tab heading=\"Meals Information\" ng-if=\"formscope.meals\"><div class=\"col-md-4\" ng-repeat=\"meal in mealsType\"><div class=\"panel panel-default bootstrap-panel\"><div class=\"panel-heading\">{{showMealsTypeOption(meal)}}</div><div class=\"panel-body pading1522\" style=\"padding: 15px 22px;\"><p><label>Specific item:</label> {{meal.specific_item}}</p><p><span><label>Catering manager:</label> {{showCateringManager(meal)}}</span></p><p><span><label>People:</label> {{meal.people}}</span></p><p><label>Meal Service:</label> {{showMealServiceTypeOption(meal)}}</p><p><label>Meal Location:</label> {{showMealServiceLocationsOption(meal)}}</p></div></div></div></uib-tab></uib-tabset></div></div></div></div></div></div>');\n$templateCache.put('app/pages/tours/visitorModal (copy).html','<div class=\"modal-content\"><div class=\"modal-header\"><button type=\"button\" class=\"close\" ng-click=\"$dismiss()\" aria-label=\"Close\"><em class=\"ion-ios-close-empty sn-link-close\"></em></button><h4 class=\"modal-title\" id=\"myModalLabel\">Add Visitor</h4></div><form ng-submit=\"add_data(add_form)\" role=\"form\" name=\"add_form\"><div class=\"modal-body\"><p>Add visitor information.</p>{{formscope.first_name}}<div class=\"row\"><div class=\"form-group col-lg-4 col-md-12 col-sm-12\"><label for=\"input01\">First Name<code>*</code></label><input type=\"text\" class=\"form-control\" ng-model=\"formscope.first_name\" placeholder=\"Please enter first name\" name=\"first_name\" required-error-message=\"{{errorMessage.first_name.required}}\" minlength-error-message=\"{{errorMessage.first_name.minlength}}\" maxlength-error-message=\"{{errorMessage.first_name.maxlength}}\" validator=\"required, minlength=2, maxlength=20\" valid-method=\"blur\" chars=\"letters\" ng-blur=\"checkPhoneNumber(\\'first_name\\', formscope.first_name)\"></div><div class=\"form-group col-lg-4 col-md-12 col-sm-12\"><label for=\"input01\">Middle Name</label> <input type=\"text\" class=\"form-control\" ng-model=\"formscope.middle_name\" placeholder=\"Please enter first name\" name=\"middle_name\"></div><div class=\"form-group col-lg-4 col-md-12 col-sm-12\"><label for=\"input01\">Last Name<code>*</code></label><input type=\"text\" class=\"form-control\" ng-model=\"formscope.last_name\" placeholder=\"Please enter Last name\" name=\"last_name\" required-error-message=\"{{errorMessage.last_name.required}}\" minlength-error-message=\"{{errorMessage.last_name.minlength}}\" maxlength-error-message=\"{{errorMessage.last_name.maxlength}}\" validator=\"required, minlength=2, maxlength=20\" valid-method=\"blur\" chars=\"letters\" ng-blur=\"checkPhoneNumber(\\'last_name\\', formscope.last_name)\"></div></div><div class=\"row\"><div class=\"form-group col-lg-6 col-md-12 col-sm-12\"><label for=\"input01\">Email<code>*</code></label><input type=\"email\" class=\"form-control\" ng-model=\"formscope.email\" placeholder=\"Please enter email\" name=\"email\" ng-blur=\"checkPhoneNumber(\\'email\\', formscope.email)\" required-error-message=\"{{errorMessage.email.required}}\" email-error-message=\"{{errorMessage.email.invalidEmail}}\" minlength-error-message=\"{{errorMessage.email.minlength}}\" maxlength-error-message=\"{{errorMessage.email.maxlength}}\" validator=\"required, email, minlength=2, maxlength=100\" valid-method=\"blur\"></div><div class=\"form-group col-lg-6 col-md-12 col-sm-12\"><label for=\"input04\">Mobile<code>*</code></label> <input type=\"text\" class=\"form-control\" ng-blur=\"checkPhoneNumber(\\'mobile\\', formscope.mobile)\" ng-model=\"formscope.mobile\" placeholder=\"Please enter your mobile number\" phone-input=\"\" name=\"mobile\" required-error-message=\"{{errorMessage.mobile.required}}\" maxlength-error-message=\"{{errorMessage.mobile.maxlength}}\" minlength-error-message=\"{{errorMessage.mobile.minlength}}\" validator=\"required, maxlength=15, minlength=10\" valid-method=\"blur\" chars=\"numbers\"></div></div><div class=\"row\"><div class=\"form-group col-lg-6 col-md-12 col-sm-12\"><label for=\"input04\">Alternate Phone Number</label> <input type=\"text\" class=\"form-control\" ng-model=\"formscope.phone_number\" placeholder=\"Please enter your alternate phone number\" phone-input=\"\" name=\"phone_number\" chars=\"numbers\"></div><div class=\"form-group col-lg-6 col-md-12 col-sm-12\"><label for=\"input04\">Gender</label><select chosen=\"\" ng-model=\"formscope.gender\" name=\"gender\" ng-options=\"company.value as company.label for company in genderOption\" class=\"form-control\"></select></div></div><div class=\"row\"><div class=\"form-group col-lg-4 col-md-12 col-sm-12\"><label for=\"textarea01\">Visitor Type<code>*</code></label><select chosen=\"\" ng-model=\"formscope.visitor_type\" name=\"visitor_type\" ng-options=\"company.id as company.name for company in VisitorOption\" class=\"form-control\" required-error-message=\"{{errorMessage.visitor_type.required}}\" validator=\"required\" valid-method=\"blur\" validation-group=\"visitor_type_error_message\"></select><span id=\"visitor_type_error_message\"></span></div><div class=\"form-group col-lg-4 col-md-12 col-sm-12\"><label for=\"textarea01\">Organization Type</label><select chosen=\"\" ng-model=\"formscope.organization_id\" name=\"organization_id\" ng-options=\"company.id as company.name for company in OrganizationOption\" class=\"form-control\"></select></div><div class=\"form-group col-lg-4 col-md-12 col-sm-12\"><label for=\"input01\">Organization Name</label><angucomplete-alt id=\"ex1\" placeholder=\"Please enter organization name\" pause=\"100\" initial-value=\"formscope.organization\" selected-object=\"residentSelected\" local-data=\"organizationNameOption\" search-fields=\"organization\" title-field=\"organization\" minlength=\"1\" input-class=\"form-control\" match-class=\"highlight\" auto-match=\"true\" override-suggestions=\"true\"></angucomplete-alt></div></div><div class=\"row\"><div class=\"form-group col-lg-6 col-md-12 col-sm-12\"><label>Street 1</label> <input type=\"text\" class=\"form-control\" ng-model=\"formscope.address\" placeholder=\"Please enter Street 1\" name=\"address\" chars=\"text\"></div><div class=\"form-group col-lg-6 col-md-12 col-sm-12\"><label>Street 2</label> <input type=\"text\" class=\"form-control\" ng-model=\"formscope.address1\" placeholder=\"Please enter Street 2\" name=\"address1\" chars=\"text\"></div></div><div class=\"row\"><div class=\"form-group col-lg-6 col-md-12 col-sm-12\"><label>Country</label><select chosen=\"\" ng-model=\"formscope.country_id\" name=\"country_id\" ng-options=\"country.id as country.country_name for country in countries\" class=\"form-control\"></select></div><div class=\"form-group col-lg-6 col-md-12 col-sm-12\"><label>State</label> <input type=\"text\" class=\"form-control\" ng-model=\"formscope.state\" placeholder=\"Please enter state name\" name=\"state\" chars=\"text\"></div></div><div class=\"row\"><div class=\"form-group col-lg-6 col-md-12 col-sm-12\"><label>City</label> <input type=\"text\" class=\"form-control\" ng-model=\"formscope.city\" placeholder=\"Please enter city name\" name=\"city\" chars=\"text\"></div><div class=\"form-group col-lg-6 col-md-12 col-sm-12\"><label>Zip Code</label> <input type=\"text\" placeholder=\"Please enter zip code\" class=\"form-control\" name=\"zip_code\" ng-model=\"formscope.zip_code\" chars=\"numbers\"></div></div></div><div class=\"modal-footer\"><button type=\"submit\" ng-disabled=\"isSubmitted\" class=\"btn btn-success\" align=\"center\">{{btnName}}</button></div></form></div>');\n$templateCache.put('app/pages/tours/visitorModal.html','<div class=\"modal-content\"><div class=\"modal-header\"><button type=\"button\" class=\"close\" ng-click=\"$dismiss()\" aria-label=\"Close\"><em class=\"ion-ios-close-empty sn-link-close\"></em></button><h4 class=\"modal-title\" id=\"myModalLabel\">{{titleName}}</h4></div><form ng-submit=\"add_data(add_form)\" role=\"form\" name=\"add_form\"><div class=\"modal-body\"><p>{{btnName}} visitor information.</p><div class=\"row\"><div class=\"form-group col-lg-4 col-md-12 col-sm-12\"><label for=\"input01\">First Name<code>*</code></label><div class=\"angucomplete-holder angucomplete-dropdown-visible\" ng-class=\"{\\'angucomplete-dropdown-visible\\': showDropdownFirstName}\"><input focus-me=\"\" id=\"FirstName\" type=\"text\" class=\"form-control\" ng-model=\"formscope.first_name\" placeholder=\"Please enter first name\" name=\"first_name\" required-error-message=\"{{errorMessage.first_name.required}}\" minlength-error-message=\"{{errorMessage.first_name.minlength}}\" maxlength-error-message=\"{{errorMessage.first_name.maxlength}}\" validator=\"required, minlength=2, maxlength=20\" chars=\"letters\" valid-method=\"blur\" ng-keyup=\"checkPhoneNumber(formscope.first_name, \\'first_name\\', $event)\" autocomplete=\"off\" ac-outside-click=\"showDropdownFirstName = false\"><div id=\"FirstName_dropdown\" class=\"angucomplete-dropdown\" ng-show=\"showDropdownFirstName\"><div class=\"angucomplete-searching\" ng-show=\"!searchResult1 || searchResult1.length == 0\">{{textNoResults}}</div><div class=\"angucomplete-row ng-scope\" ng-repeat=\"result in searchResult1\" ng-click=\"selectResult(result)\" ng-mouseenter=\"hoverRow($index)\" ng-class=\"{\\'angucomplete-selected-row\\': $index == currentIndex}\"><div class=\"angucomplete-title\" ng-bind-html=\"result.name\"></div><div ng-if=\"result.mobile && result.mobile != \\'\\'\" class=\"angucomplete-description\" ng-bind-html=\"result.mobile\"></div></div></div></div></div><div class=\"form-group col-lg-4 col-md-12 col-sm-12\"><label for=\"input01\">Middle Name</label> <input type=\"text\" class=\"form-control\" ng-model=\"formscope.middle_name\" placeholder=\"Please enter middle name\" name=\"middle_name\"></div><div class=\"form-group col-lg-4 col-md-12 col-sm-12\"><label for=\"input01\">Last Name<code>*</code></label><input type=\"text\" class=\"form-control\" ng-model=\"formscope.last_name\" placeholder=\"Please enter Last name\" name=\"last_name\" required-error-message=\"{{errorMessage.last_name.required}}\" minlength-error-message=\"{{errorMessage.last_name.minlength}}\" maxlength-error-message=\"{{errorMessage.last_name.maxlength}}\" validator=\"required, minlength=2, maxlength=20\" valid-method=\"blur\" chars=\"letters\" ac-outside-click=\"showDropdownLastName = false\" ng-keyup=\"checkPhoneNumber(formscope.last_name, \\'last_name\\', $event)\" autocomplete=\"off\"><div class=\"angucomplete-dropdown\" ng-show=\"showDropdownLastName\"><div class=\"angucomplete-searching\" ng-show=\"!searchResult1 || searchResult1.length == 0\">{{textNoResults}}</div><div class=\"angucomplete-row\" ng-repeat=\"result in searchResult1\" ng-click=\"selectResult(result)\" ng-mouseenter=\"hoverRow($index)\" ng-class=\"{\\'angucomplete-selected-row\\': $index == currentIndex}\"><div class=\"angucomplete-title\" ng-bind-html=\"result.name\"></div><div ng-if=\"result.mobile && result.mobile != \\'\\'\" class=\"angucomplete-description\" ng-bind-html=\"result.mobile\"></div></div></div></div></div><div class=\"row\"><div class=\"form-group col-lg-6 col-md-12 col-sm-12\"><label for=\"input01\">Email<code>*</code></label><input type=\"email\" class=\"form-control\" ng-model=\"formscope.email\" placeholder=\"Please enter email\" name=\"email\" required-error-message=\"{{errorMessage.email.required}}\" email-error-message=\"{{errorMessage.email.invalidEmail}}\" minlength-error-message=\"{{errorMessage.email.minlength}}\" maxlength-error-message=\"{{errorMessage.email.maxlength}}\" validator=\"required, email, minlength=2, maxlength=100\" valid-method=\"blur\" ac-outside-click=\"showDropdownEmail = false\" ng-keyup=\"checkPhoneNumber(formscope.email, \\'email\\', $event)\" autocomplete=\"off\"><div class=\"angucomplete-dropdown\" ng-show=\"showDropdownEmail\"><div class=\"angucomplete-searching\" ng-show=\"!searchResult1 || searchResult1.length == 0\">{{textNoResults}}</div><div class=\"angucomplete-row\" ng-repeat=\"result in searchResult1\" ng-click=\"selectResult(result)\" ng-mouseenter=\"hoverRow($index)\" ng-class=\"{\\'angucomplete-selected-row\\': $index == currentIndex}\"><div class=\"angucomplete-title\" ng-bind-html=\"result.name\"></div><div ng-if=\"result.mobile && result.mobile != \\'\\'\" class=\"angucomplete-description\" ng-bind-html=\"result.mobile\"></div></div></div></div><div class=\"form-group col-lg-6 col-md-12 col-sm-12\"><label for=\"input04\">Mobile<code>*</code></label><input type=\"text\" class=\"form-control\" ng-blur=\"checkPhoneNumber(formscope.mobile)\" ng-model=\"formscope.mobile\" placeholder=\"Please enter your mobile number\" phone-input=\"\" name=\"mobile\" required-error-message=\"{{errorMessage.mobile.required}}\" maxlength-error-message=\"{{errorMessage.mobile.maxlength}}\" minlength-error-message=\"{{errorMessage.mobile.minlength}}\" validator=\"required, maxlength=15, minlength=10\" valid-method=\"blur\" chars=\"numbers\" ng-keyup=\"checkPhoneNumber(formscope.mobile, \\'mobile\\', $event)\" autocomplete=\"off\" ac-outside-click=\"showDropdownMobile = false\"><div class=\"angucomplete-dropdown\" ng-show=\"showDropdownMobile\"><div class=\"angucomplete-searching\" ng-show=\"!searchResult1 || searchResult1.length == 0\">{{textNoResults}}</div><div class=\"angucomplete-row\" ng-repeat=\"result in searchResult1\" ng-click=\"selectResult(result)\" ng-mouseenter=\"hoverRow($index)\" ng-class=\"{\\'angucomplete-selected-row\\': $index == currentIndex}\"><div class=\"angucomplete-title\" ng-bind-html=\"result.name\"></div><div ng-if=\"result.mobile && result.mobile != \\'\\'\" class=\"angucomplete-description\" ng-bind-html=\"result.mobile\"></div></div></div></div></div><div class=\"row\"><div class=\"form-group col-lg-6 col-md-12 col-sm-12\"><label for=\"input04\">Alternate Phone Number</label> <input type=\"text\" class=\"form-control\" ng-model=\"formscope.phone_number\" placeholder=\"Please enter your alternate phone number\" phone-input=\"\" name=\"phone_number\" chars=\"numbers\"></div><div class=\"form-group col-lg-6 col-md-12 col-sm-12\"><label for=\"input04\">Gender</label><select chosen=\"\" ng-model=\"formscope.gender\" name=\"gender\" ng-options=\"company.value as company.label for company in genderOption\" class=\"form-control\"></select></div></div><div class=\"row\"><div class=\"form-group col-lg-4 col-md-12 col-sm-12\"><label for=\"textarea01\">Visitor Type<code>*</code></label><select chosen=\"\" ng-model=\"formscope.visitor_type\" name=\"visitor_type\" ng-options=\"company.id as company.name for company in VisitorOption\" class=\"form-control\" required-error-message=\"{{errorMessage.visitor_type.required}}\" validator=\"required\" valid-method=\"watch, blur\" validation-group=\"visitor_type_error_message\"></select><span id=\"visitor_type_error_message\"></span></div><div class=\"form-group col-lg-4 col-md-12 col-sm-12\"><label for=\"textarea01\">Organization Type</label><select chosen=\"\" ng-model=\"formscope.organization_id\" name=\"organization_id\" ng-options=\"company.id as company.name for company in OrganizationOption\" class=\"form-control\"></select></div><div class=\"form-group col-lg-4 col-md-12 col-sm-12\"><label for=\"input01\">Organization Name</label><angucomplete-alt id=\"organization\" placeholder=\"Please enter organization name\" pause=\"100\" initial-value=\"formscope.organization\" selected-object=\"residentSelected\" local-data=\"organizationNameOption\" ng-model=\"formscope.organization\" search-fields=\"organization\" title-field=\"organization\" minlength=\"1\" input-class=\"form-control\" match-class=\"highlight\" override-suggestions=\"true\"></angucomplete-alt></div></div><div class=\"row\"><div class=\"form-group col-lg-6 col-md-12 col-sm-12\"><label>Street 1</label> <input type=\"text\" class=\"form-control\" ng-model=\"formscope.address\" placeholder=\"Please enter Street 1\" name=\"address\" chars=\"text\"></div><div class=\"form-group col-lg-6 col-md-12 col-sm-12\"><label>Street 2</label> <input type=\"text\" class=\"form-control\" ng-model=\"formscope.address1\" placeholder=\"Please enter Street 2\" name=\"address1\" chars=\"text\"></div></div><div class=\"row\"><div class=\"form-group col-lg-6 col-md-12 col-sm-12\"><label>Country</label><select chosen=\"\" ng-model=\"formscope.country_id\" name=\"country_id\" ng-options=\"country.id as country.country_name for country in countries\" class=\"form-control\"></select></div><div class=\"form-group col-lg-6 col-md-12 col-sm-12\"><label>State</label> <input type=\"text\" class=\"form-control\" ng-model=\"formscope.state\" placeholder=\"Please enter state name\" name=\"state\" chars=\"text\"></div></div><div class=\"row\"><div class=\"form-group col-lg-6 col-md-12 col-sm-12\"><label>City</label> <input type=\"text\" class=\"form-control\" ng-model=\"formscope.city\" placeholder=\"Please enter city name\" name=\"city\" chars=\"text\"></div><div class=\"form-group col-lg-6 col-md-12 col-sm-12\"><label>Zip Code</label> <input type=\"text\" placeholder=\"Please enter zip code\" class=\"form-control\" name=\"zip_code\" ng-model=\"formscope.zip_code\" chars=\"numbers\"></div></div><div class=\"row\" ng-if=\"addMomento === true\"><div class=\"form-group col-lg-6 col-md-12 col-sm-12\"><label>Momentos</label><select chosen=\"\" ng-model=\"formscope.momentos\" name=\"momentos\" ng-options=\"momento.id as momento.name for momento in MomentosOption\" class=\"form-control\"></select></div></div></div><div class=\"modal-footer\"><button type=\"submit\" ng-disabled=\"isSubmitted\" class=\"btn btn-success\" align=\"center\">{{btnName}}</button></div></form></div>');\n$templateCache.put('app/pages/useravailabilities/view.html','<div class=\"widgets\"><div class=\"row\"><div class=\"col-md-12\"><div ba-panel=\"\" ba-panel-title=\"{{ activePageTitle }} Listing\"><div class=\"horizontal-scroll\"><table datatable=\"\" dt-instance=\"dtInstance\" dt-options=\"dtOptions\" dt-columns=\"dtColumns\" class=\"row-border hover\"></table></div></div></div></div></div>');\n$templateCache.put('app/pages/users/add.html','<div class=\"widgets\"><div class=\"row\"><div class=\"col-md-12\"><div ba-panel=\"\" ba-panel-title=\"{{pageName}}\" ba-panel-class=\"with-scroll\"><div class=\"ng-cloak\"><form class=\"form-validation\" role=\"form\" name=\"add_form\"><div class=\"row\"><div class=\"form-group col-lg-6 col-md-12 col-sm-12\"><label for=\"input01\">Email<code>*</code></label> <input focus-me=\"\" type=\"email\" class=\"form-control\" ng-model=\"formscope.email\" placeholder=\"Please enter email\" name=\"email\" ng-if=\"state.current.name == \\'users.add\\'\" required-error-message=\"{{errorMessage.email.required}}\" email-error-message=\"{{errorMessage.email.invalidEmail}}\" minlength-error-message=\"{{errorMessage.email.minlength}}\" maxlength-error-message=\"{{errorMessage.email.maxlength}}\" validator=\"required, email, minlength=2, maxlength=100\" valid-method=\"blur\"> <span ng-if=\"state.current.name == \\'users.edit\\'\">{{formscope.email}}</span></div><div class=\"form-group col-lg-6 col-md-12 col-sm-12\"><label>User Type<code>*</code></label><select chosen=\"\" ng-model=\"formscope.user_type\" name=\"user_type\" ng-options=\"company.id as company.name for company in userTypeOption\" class=\"form-control\" validation-group=\"user_type_error_message\" required-error-message=\"{{errorMessage.user_type.required}}\" validator=\"required\" valid-method=\"watch, blur\"></select><span id=\"user_type_error_message\"></span></div></div><div class=\"row\"><div class=\"form-group col-lg-4 col-md-12 col-sm-12\"><label for=\"input01\">First Name</label> <input type=\"text\" class=\"form-control\" ng-model=\"formscope.first_name\" placeholder=\"Please enter first name\" name=\"first_name\" chars=\"letters\"></div><div class=\"form-group col-lg-4 col-md-12 col-sm-12\"><label for=\"input01\">Middle Name</label> <input type=\"text\" class=\"form-control\" ng-model=\"formscope.middle_name\" placeholder=\"Please enter middle name\" name=\"middle_name\" chars=\"letters\"></div><div class=\"form-group col-lg-4 col-md-12 col-sm-12\"><label for=\"input01\">Last Name</label> <input type=\"text\" class=\"form-control\" ng-model=\"formscope.last_name\" placeholder=\"Please enter Last name\" name=\"last_name\" chars=\"letters\"></div></div><div class=\"row\"><div class=\"form-group col-lg-6 col-md-12 col-sm-12\"><label>Date of Birth(YYYY-MM-DD)</label> <input my-date=\"\" type=\"text\" class=\"form-control\" ng-model=\"formscope.dob\" placeholder=\"Please select the birth date\" name=\"dob\"></div><div class=\"form-group col-lg-6 col-md-12 col-sm-12\"><label for=\"textarea01\">Gender</label><select chosen=\"\" ng-model=\"formscope.gender\" name=\"gender\" ng-options=\"company.value as company.label for company in genderOption\" class=\"form-control\"></select></div></div><div class=\"row\"><div class=\"form-group col-lg-6 col-md-12 col-sm-12\"><label for=\"input04\">Phone Number</label> <input type=\"text\" class=\"form-control\" ng-model=\"formscope.phone_number\" placeholder=\"Please enter your phone number\" phone-input=\"\" name=\"phone_number\"></div><div class=\"form-group col-lg-6 col-md-12 col-sm-12\"><label for=\"input04\">Mobile Number</label> <input type=\"text\" class=\"form-control\" ng-model=\"formscope.mobile\" placeholder=\"Please enter your mobile number\" phone-input=\"\" name=\"mobile\"></div></div><div class=\"row\"><div class=\"form-group col-lg-6 col-md-12 col-sm-12\"><label>Street 1</label> <input type=\"text\" class=\"form-control\" ng-model=\"formscope.address\" placeholder=\"Please enter Street 1\" name=\"address\"></div><div class=\"form-group col-lg-6 col-md-12 col-sm-12\"><label>Street 2</label> <input type=\"text\" class=\"form-control\" ng-model=\"formscope.address1\" placeholder=\"Please enter Street 2\" name=\"address1\"></div></div><div class=\"row\"><div class=\"form-group col-lg-6 col-md-12 col-sm-12\"><label>Country</label><select chosen=\"\" ng-model=\"formscope.country_id\" name=\"country_id\" ng-options=\"country.id as country.country_name for country in countries\" class=\"form-control\"></select></div><div class=\"form-group col-lg-6 col-md-12 col-sm-12\"><label>State</label> <input type=\"text\" class=\"form-control\" ng-model=\"formscope.state\" placeholder=\"Please enter state name\" name=\"state\"></div></div><div class=\"row\"><div class=\"form-group col-lg-6 col-md-12 col-sm-12\"><label>City</label> <input type=\"text\" class=\"form-control\" ng-model=\"formscope.city\" placeholder=\"Please enter city name\" name=\"city\"></div><div class=\"form-group col-lg-6 col-md-12 col-sm-12\"><label>Zip Code</label> <input type=\"text\" placeholder=\"Please enter zip code\" class=\"form-control\" name=\"zip_code\" ng-model=\"formscope.zip_code\"></div></div><div class=\"row\"><div class=\"form-group col-lg-6 col-md-12 col-sm-12\"><label for=\"textarea01\">Status<code>*</code></label><select chosen=\"\" ng-model=\"formscope.status\" name=\"status\" ng-options=\"status.value as status.label for status in statusOption\" required-error-message=\"{{errorMessage.status.required}}\" validator=\"required\" valid-method=\"watch, blur\" class=\"form-control\" validation-group=\"status_error_message\"></select><span id=\"status_error_message\"></span></div><div class=\"form-group col-lg-6\"><label>Profile Picture</label> <input ng-if=\"state.current.name == \\'users.add\\'\" type=\"file\" ng-model=\"formscope.profile_pic\" ngf-accept=\"\\'image/*\\'\" name=\"profile_pic\" ngf-select=\"\" ngf-max-size=\"2MB\" ngf-validate=\"{size: {min: 1, max: \\'2MB\\'}, pattern: \\'image/*\\'}\"> <input ng-if=\"state.current.name == \\'users.edit\\'\" type=\"file\" ng-model=\"formscope.profile_pic\" ngf-accept=\"\\'image/*\\'\" name=\"profile_pic\" ngf-select=\"\" ngf-max-size=\"2MB\" ngf-validate=\"{size: {min: 1, max: \\'2MB\\'}, pattern: \\'image/*\\'}\"> <label class=\"control-label has-error ng-scope colorred\" ng-if=\"add_form.profile_pic.$error.required && add_form.profile_pic.$error.pattern != true && (add_form.profile_pic.$touched || Submitted)\">{{errorMessage.image.required}}</label> <label class=\"control-label has-error ng-scope colorred\" ng-if=\"add_form.profile_pic.$error.pattern\">{{errorMessage.image.pdfFile}}</label> <label class=\"control-label has-error ng-scope colorred\" ng-if=\"add_form.profile_pic.$error.maxSize\">{{errorMessage.image.maxSize}}</label></div></div><div class=\"row\"><div class=\"form-group col-lg-6\"><button ng-if=\"state.current.name == \\'users.edit\\'\" ng-click=\"add_data(add_form)\" ng-disabled=\"isSubmitted\" class=\"btn btn-success\" align=\"center\"><i class=\"fa fa-spinner fa-spin\" aria-hidden=\"true\" ng-show=\"loginProgress\"></i> {{btnName}}</button> <button ng-if=\"state.current.name == \\'users.add\\'\" ng-click=\"mailModal(add_form)\" ng-disabled=\"isSubmitted\" class=\"btn btn-success\" align=\"center\"><i class=\"fa fa-spinner fa-spin\" aria-hidden=\"true\" ng-show=\"loginProgress\"></i> {{btnName}}</button> <a type=\"submit\" ui-sref=\"users.list\" class=\"btn btn-info\" align=\"center\">Cancel</a></div></div></form></div></div></div></div></div>');\n$templateCache.put('app/pages/users/changePassword.html','<div class=\"modal-content\"><div class=\"modal-header\"><button type=\"button\" class=\"close\" ng-click=\"$dismiss()\" aria-label=\"Close\"><em class=\"ion-ios-close-empty sn-link-close\"></em></button><h4 class=\"modal-title\" id=\"myModalLabel\">{{titleName}}</h4></div><form ng-submit=\"change_password(add_form)\" role=\"form\" name=\"add_form\"><div class=\"modal-body\"><div class=\"row\"><div class=\"form-group col-lg-12\"><label for=\"input04\">New Password</label> <input type=\"password\" class=\"form-control\" ng-model=\"changepassformscope.new_password\" placeholder=\"Please enter password\" name=\"new_password\" required-error-message=\"{{errorMessage.new_password.required}}\" minlength-error-message=\"{{errorMessage.new_password.minlength}}\" maxlength-error-message=\"{{errorMessage.new_password.maxlength}}\" validator=\"required, minlength=6, maxlength=16\" valid-method=\"blur\"></div></div><div class=\"row\"><div class=\"form-group col-lg-12\"><label for=\"input04\">Confirm Password</label> <input type=\"password\" class=\"form-control\" ng-model=\"changepassformscope.confirm_password\" placeholder=\"Please enter confirm password\" name=\"confirm_password\" required-error-message=\"{{errorMessage.confirm_password.required}}\" validator=\"required, confirmPassword\" valid-method=\"blur\"></div></div></div><div class=\"modal-footer\"><button type=\"submit\" ng-disabled=\"isSubmitted\" class=\"btn btn-success\" align=\"center\">{{btnName}}</button></div></form></div>');\n$templateCache.put('app/pages/users/editprofile.html','<div ba-panel=\"\" ba-panel-class=\"profile-page\"><div class=\"panel-content\"><form class=\"form-validation\" ng-submit=\"add_data(add_form)\" role=\"form\" name=\"add_form\"><h3 class=\"with-line\">General Information</h3><div class=\"row\"><div class=\"col-md-6\"><div class=\"form-group row clearfix\"><label for=\"inputFirstName\" class=\"col-sm-3 control-label\">Picture</label><div class=\"col-sm-9\"><div class=\"userpic\"><div class=\"userpic-wrapper\"><img ng-src=\"{{ imageUrl }}\" ng-click=\"uploadPicture()\"></div><input type=\"file\" id=\"uploadFile\" ng-show=\"false\" ng-model=\"formscope.profile_pic\" ngf-accept=\"\\'image/*\\'\" name=\"profile_pic\" ngf-select=\"\" ngf-max-size=\"2MB\" ngf-validate=\"{size: {min: 1, max: \\'2MB\\'}, pattern: \\'image/*\\'}\"></div><label class=\"control-label has-error ng-scope colorred\" ng-if=\"add_form.profile_pic.$error.required && add_form.profile_pic.$error.pattern != true && (add_form.profile_pic.$touched || Submitted)\">{{errorMessage.image.required}}</label> <label class=\"control-label has-error ng-scope colorred\" ng-if=\"add_form.profile_pic.$error.pattern\">{{errorMessage.image.pdfFile}}</label> <label class=\"control-label has-error ng-scope colorred\" ng-if=\"add_form.profile_pic.$error.maxSize\">{{errorMessage.image.maxSize}}</label></div></div></div><div class=\"col-md-6\"></div></div><div class=\"row\"><div class=\"col-md-6\"><div class=\"form-group row clearfix\"><label for=\"inputFirstName\" class=\"col-sm-3 control-label\">First Name<code>*</code></label><div class=\"col-sm-9\"><input type=\"text\" class=\"form-control\" ng-model=\"formscope.first_name\" placeholder=\"Please enter first name\" name=\"first_name\" chars=\"letters\" required-error-message=\"{{errorMessage.first_name.required}}\" minlength-error-message=\"{{errorMessage.first_name.minlength}}\" maxlength-error-message=\"{{errorMessage.first_name.maxlength}}\" validator=\"required, minlength=2, maxlength=100\" valid-method=\"blur\"></div></div><div class=\"form-group row clearfix\"><label for=\"inputFirstName\" class=\"col-sm-3 control-label\">Middle Name</label><div class=\"col-sm-9\"><input type=\"text\" class=\"form-control\" ng-model=\"formscope.middle_name\" placeholder=\"Please enter middle name\" name=\"middle_name\" chars=\"letters\"></div></div><div class=\"form-group row clearfix\"><label for=\"inputLastName\" class=\"col-sm-3 control-label\">Last Name<code>*</code></label><div class=\"col-sm-9\"><input type=\"text\" class=\"form-control\" ng-model=\"formscope.last_name\" placeholder=\"Please enter Last name\" name=\"last_name\" chars=\"letters\" required-error-message=\"{{errorMessage.last_name.required}}\" minlength-error-message=\"{{errorMessage.last_name.minlength}}\" maxlength-error-message=\"{{errorMessage.last_name.maxlength}}\" validator=\"required, minlength=2, maxlength=100\" valid-method=\"blur\"></div></div></div><div class=\"col-md-6\"><div class=\"form-group row clearfix\"><label class=\"col-sm-3 control-label\">Gender<code>*</code></label><div class=\"col-sm-9\"><select chosen=\"\" ng-model=\"formscope.gender\" name=\"gender\" ng-options=\"company.value as company.label for company in genderOption\" class=\"form-control\" required-error-message=\"{{errorMessage.gender.required}}\" validator=\"required\" valid-method=\"blur\" validation-group=\"gender_error_message\"></select><span id=\"gender_error_message\"></span></div></div><div class=\"form-group row clearfix\"><label for=\"inputOccupation\" class=\"col-sm-3 control-label\">Date of Birth (YYYY-MM-DD)<code>*</code></label><div class=\"col-sm-9\"><input my-date=\"\" type=\"text\" class=\"form-control\" ng-model=\"formscope.dob\" placeholder=\"Please select the birth date\" name=\"dob\" required-error-message=\"{{errorMessage.dob.required}}\" validator=\"required\" valid-method=\"blur\"></div></div></div></div><h3 class=\"with-line\">Contact Information</h3><div class=\"row\"><div class=\"col-md-6\"><div class=\"form-group row clearfix\"><label for=\"inputRoom\" class=\"col-sm-3 control-label\">Mobile<code>*</code></label><div class=\"col-sm-9\"><input type=\"text\" class=\"form-control\" ng-model=\"formscope.mobile\" placeholder=\"Please enter your mobile number\" phone-input=\"\" name=\"mobile\" required-error-message=\"{{errorMessage.mobile.required}}\" minlength-error-message=\"{{errorMessage.mobile.minlength}}\" maxlength-error-message=\"{{errorMessage.mobile.maxlength}}\" validator=\"required, minlength=2, maxlength=20\" valid-method=\"blur\"></div></div><div class=\"form-group row clearfix\"><label for=\"inputEmail3\" class=\"col-sm-3 control-label\">Email</label><div class=\"col-sm-9\"><span>{{formscope.email}}</span></div></div></div><div class=\"col-md-6\"><div class=\"form-group row clearfix\"><label for=\"inputPhone\" class=\"col-sm-3 control-label\">Phone Number</label><div class=\"col-sm-9\"><input type=\"text\" class=\"form-control\" ng-model=\"formscope.phone_number\" placeholder=\"Please enter your phone number\" phone-input=\"\" name=\"phone_number\"></div></div></div></div><h3 class=\"with-line\">Address Information</h3><div class=\"row\"><div class=\"col-md-6\"><div class=\"form-group row clearfix\"><label for=\"inputEmail3\" class=\"col-sm-3 control-label\">Street 1<code>*</code></label><div class=\"col-sm-9\"><input type=\"text\" class=\"form-control\" ng-model=\"formscope.address\" placeholder=\"Please enter Street 1\" name=\"address\" chars=\"text\" required-error-message=\"{{errorMessage.address.required}}\" minlength-error-message=\"{{errorMessage.address.minlength}}\" maxlength-error-message=\"{{errorMessage.address.maxlength}}\" validator=\"required, minlength=2, maxlength=200\" valid-method=\"blur\"></div></div><div class=\"form-group row clearfix\"><label for=\"inputEmail3\" class=\"col-sm-3 control-label\">Street 2</label><div class=\"col-sm-9\"><input type=\"text\" class=\"form-control\" ng-model=\"formscope.address1\" placeholder=\"Please enter Street 2\" name=\"address1\" chars=\"text\"></div></div><div class=\"form-group row clearfix\"><label for=\"inputPhone\" class=\"col-sm-3 control-label\">Country<code>*</code></label><div class=\"col-sm-9\"><select chosen=\"\" ng-model=\"formscope.country_id\" name=\"country_id\" ng-options=\"country.id as country.country_name for country in countries\" class=\"form-control\" required-error-message=\"{{errorMessage.country_id.required}}\" validator=\"required\" valid-method=\"blur\" validation-group=\"country_error_message\"></select><span id=\"country_error_message\"></span></div></div></div><div class=\"col-md-6\"><div class=\"form-group row clearfix\"><label for=\"inputPhone\" class=\"col-sm-3 control-label\">State<code>*</code></label><div class=\"col-sm-9\"><input type=\"text\" class=\"form-control\" ng-model=\"formscope.state\" placeholder=\"Please enter state name\" name=\"state\" chars=\"text\" required-error-message=\"{{errorMessage.state.required}}\" minlength-error-message=\"{{errorMessage.state.minlength}}\" maxlength-error-message=\"{{errorMessage.state.maxlength}}\" validator=\"required, minlength=2, maxlength=100\" valid-method=\"blur\"></div></div><div class=\"form-group row clearfix\"><label for=\"inputPhone\" class=\"col-sm-3 control-label\">City<code>*</code></label><div class=\"col-sm-9\"><input type=\"text\" class=\"form-control\" ng-model=\"formscope.city\" placeholder=\"Please enter city name\" name=\"city\" chars=\"text\" required-error-message=\"{{errorMessage.city.required}}\" minlength-error-message=\"{{errorMessage.city.minlength}}\" maxlength-error-message=\"{{errorMessage.city.maxlength}}\" validator=\"required, minlength=2, maxlength=100\" valid-method=\"blur\"></div></div><div class=\"form-group row clearfix\"><label for=\"inputPhone\" class=\"col-sm-3 control-label\">Zip Code<code>*</code></label><div class=\"col-sm-9\"><input type=\"text\" placeholder=\"Please enter zip code\" class=\"form-control\" name=\"zip_code\" ng-model=\"formscope.zip_code\" chars=\"numbers\" required-error-message=\"{{errorMessage.zip_code.required}}\" minlength-error-message=\"{{errorMessage.zip_code.minlength}}\" maxlength-error-message=\"{{errorMessage.zip_code.maxlength}}\" validator=\"required, minlength=2, maxlength=6\" valid-method=\"blur\"></div></div></div></div><div class=\"row\"><div class=\"col-md-12\"><div class=\"form-group row clearfix\"><button type=\"submit\" ng-disabled=\"isSubmitted\" class=\"btn btn-primary btn-with-icon save-profile\" align=\"center\">{{btnName}}</button></div></div></div></form><h3 class=\"with-line\">Change Password</h3><form class=\"form-validation\" ng-submit=\"change_password(password_form)\" role=\"form\" name=\"password_form\"><div class=\"row\"><div class=\"col-md-6\"><div class=\"form-group row clearfix\"><label for=\"inputPassword\" class=\"col-sm-4 control-label\">Current Password<code>*</code></label><div class=\"col-sm-8\"><input type=\"password\" placeholder=\"Please enter current password\" class=\"form-control\" ng-model=\"changepassformscope.password\" name=\"password\" required-error-message=\"{{errorMessage.password.required}}\" minlength-error-message=\"{{errorMessage.password.minlength}}\" maxlength-error-message=\"{{errorMessage.password.maxlength}}\" validator=\"required, minlength=6, maxlength=16\" valid-method=\"blur\"></div></div></div><div class=\"col-md-6\"><div class=\"form-group row clearfix\"><label for=\"inputPassword\" class=\"col-sm-4 control-label\">New Password<code>*</code></label><div class=\"col-sm-8\"><input type=\"password\" placeholder=\"Please enter new password\" class=\"form-control\" ng-model=\"changepassformscope.new_password\" name=\"new_password\" required-error-message=\"{{errorMessage.new_password.required}}\" minlength-error-message=\"{{errorMessage.new_password.minlength}}\" maxlength-error-message=\"{{errorMessage.new_password.maxlength}}\" validator=\"required, minlength=6, maxlength=16\" valid-method=\"blur\"></div></div></div></div><div class=\"row\"><div class=\"col-md-6\"><div class=\"form-group row clearfix\"><label for=\"inputConfirmPassword\" class=\"col-sm-4 control-label\">Confirm Password<code>*</code></label><div class=\"col-sm-8\"><input type=\"password\" class=\"form-control\" id=\"inputConfirmPassword\" placeholder=\"Please enter confirm password\" ng-model=\"changepassformscope.confirm_password\" name=\"confirm_password\" required-error-message=\"{{errorMessage.confirm_password.required}}\" validator=\"required, confirmPassword\" valid-method=\"blur\"></div></div></div><div class=\"col-md-12\"><div class=\"form-group row clearfix\"><button type=\"submit\" ng-disabled=\"isSubmitted\" class=\"btn btn-primary btn-with-icon save-profile\" align=\"center\">Change</button></div></div></div></form><h3 class=\"with-line\" ng-if=\"havePermission(\\'availabilities\\',\\'update\\');\">Change Availability Status</h3><form ng-if=\"havePermission(\\'availabilities\\',\\'update\\');\" class=\"form-validation\" ng-submit=\"change_availability(availability_form)\" role=\"form\" name=\"availability_form\"><div class=\"row\"><div class=\"col-md-6 form-group\"><label>Availability<code>*</code></label><div class=\"input-demo radio-demo row\"><div class=\"col-md-3\"><label class=\"radio-inline custom-radio nowrap\"><input type=\"radio\" ng-model=\"formscopestatus.status\" name=\"type\" id=\"inlineRadio1\" value=\"1\"> <span>Unavailable</span></label></div><div class=\"col-md-2\"><label class=\"radio-inline custom-radio nowrap\"><input type=\"radio\" ng-model=\"formscopestatus.status\" name=\"type\" id=\"inlineRadio2\" value=\"2\"> <span>Available</span></label></div></div></div></div><div class=\"row\"><div class=\"col-md-6 form-group\"><label>Comment</label> <textarea class=\"form-control\" placeholder=\"Please enter comment\" ng-model=\"formscopestatus.comment\" name=\"comment\"></textarea></div></div><div class=\"row\"><div class=\"col-md-12\"><div class=\"form-group row clearfix\"><button type=\"submit\" ng-disabled=\"isSubmitted\" class=\"btn btn-primary btn-with-icon save-profile\" align=\"center\">Change</button></div></div></div></form></div></div>');\n$templateCache.put('app/pages/users/login.html','<main class=\"auth-main\"><div class=\"auth-block\"><h1>Sign in to Tour Management</h1><form class=\"form-horizontal\"><div class=\"form-group\"><label for=\"inputEmail3\" class=\"col-sm-2 control-label\">Email</label><div class=\"col-sm-10\"><input type=\"email\" class=\"form-control\" id=\"inputEmail3\" placeholder=\"Email\"></div></div><div class=\"form-group\"><label for=\"inputPassword3\" class=\"col-sm-2 control-label\">Password</label><div class=\"col-sm-10\"><input type=\"password\" class=\"form-control\" id=\"inputPassword3\" placeholder=\"Password\"></div></div><div class=\"form-group\"><div class=\"col-sm-offset-2 col-sm-10\"><button type=\"submit\" class=\"btn btn-default btn-auth\">Sign in</button> <a href=\"\" class=\"forgot-pass\">Forgot password?</a></div></div></form></div></main>');\n$templateCache.put('app/pages/users/mailModal.html','<div class=\"modal-content\" ng-if=\"displayEditor\"><div class=\"modal-header\"><h4 class=\"modal-title text-center\" id=\"myModalLabel\">Mail Confirmation</h4></div><div class=\"modal-body\"><div><label>Mail Subject</label> <input type=\"text\" placeholder=\"Please enter mail subject\" ng-model=\"formscope.mailSubject\" class=\"form-control\"></div><div style=\"margin-top: 10px;\"><label style=\"display: block;\">Mail Body</label><text-angular placeholder=\"Please enter mail body\" ng-model=\"formscope.mailContent\" ta-toolbar=\"[[\\'h1\\',\\'h2\\',\\'h3\\',\\'h4\\',\\'h5\\',\\'h6\\',\\'p\\'],[\\'bold\\',\\'italics\\',\\'underline\\']]\"></text-angular></div></div><div class=\"modal-footer\"><div class=\"row col-md-12 text-center\"><a type=\"submit\" ng-click=\"sendMail()\" class=\"btn btn-success\">Send Mail</a> <a type=\"submit\" ng-click=\"donotsendMail()\" class=\"btn btn-danger\">Do Not Send Mail</a></div></div></div>');\n$templateCache.put('app/pages/users/view.html','<div class=\"widgets\"><div class=\"row\"><div class=\"col-md-12\"><div ba-panel=\"\" ba-panel-title=\"{{ activePageTitle }} Listing\"><div class=\"form-group select-page-size-wrap\"><button class=\"btn btn-primary\" ng-if=\"havePermission(\\'users\\',\\'create\\');\" ui-sref=\"users.add\">Add</button></div><div class=\"horizontal-scroll\"><table datatable=\"\" dt-instance=\"dtInstance\" dt-options=\"dtOptions\" dt-columns=\"dtColumns\" class=\"row-border hover\"></table></div></div></div></div></div>');\n$templateCache.put('app/pages/users/viewdetails (copy).html','<div ba-panel=\"\" ba-panel-class=\"profile-page\"><div class=\"panel-content\"><div class=\"progress-info\"><b>{{formscope.roles.name}}</b> User</div><h3 class=\"with-line\">General Information</h3><div class=\"row\"><div class=\"col-md-6\"><div class=\"form-group row clearfix\"><label for=\"inputFirstName\" class=\"col-sm-3 control-label\">Picture</label><div class=\"col-sm-9\"><div class=\"userpic\"><div class=\"userpic-wrapper\"><img ng-src=\"{{ imageUrl }}\"></div></div></div></div></div><div class=\"col-md-6\"></div></div><div class=\"row\"><div class=\"col-md-6\"><div class=\"form-group row clearfix\"><label for=\"inputFirstName\" class=\"col-sm-3 control-label\">First Name</label><div class=\"col-sm-9\"><input type=\"text\" class=\"form-control\" id=\"inputFirstName\" disabled=\"\" value=\"{{formscope.first_name}}\"></div></div><div class=\"form-group row clearfix\"><label for=\"inputLastName\" class=\"col-sm-3 control-label\">Last Name</label><div class=\"col-sm-9\"><input type=\"text\" class=\"form-control\" id=\"inputLastName\" disabled=\"\" value=\"{{formscope.last_name}}\"></div></div></div><div class=\"col-md-6\"><div class=\"form-group row clearfix\"><label class=\"col-sm-3 control-label\">Gender</label><div class=\"col-sm-9\"><select ng-model=\"formscope.gender\" name=\"gender\" disabled=\"\" ng-options=\"company.value as company.label for company in genderOption\" class=\"form-control\"></select></div></div><div class=\"form-group row clearfix\"><label for=\"inputOccupation\" class=\"col-sm-3 control-label\">Birth Date</label><div class=\"col-sm-9\"><div class=\"\" disable=\"true\" ng-disabled=\"true\" moment-picker=\"formscope.dob\" min-date=\"minDateMoment\" format=\"DD-MMMM-YYYY\"><input class=\"form-control\" readonly=\"\" name=\"dob\" ng-model=\"formscope.dob\"></div></div></div></div></div><h3 class=\"with-line\">Contact Information</h3><div class=\"row\"><div class=\"col-md-6\"><div class=\"form-group row clearfix\"><label for=\"inputEmail3\" class=\"col-sm-3 control-label\">Email</label><div class=\"col-sm-9\"><input type=\"email\" class=\"form-control\" id=\"inputEmail3\" disabled=\"\" value=\"{{formscope.email}}\"></div></div><div class=\"form-group row clearfix\"><label for=\"inputRoom\" class=\"col-sm-3 control-label\">Address</label><div class=\"col-sm-9\"><textarea placeholder=\"Please enter address\" disabled=\"\" class=\"form-control\" ng-model=\"formscope.address\" name=\"address\"></textarea></div></div></div><div class=\"col-md-6\"><div class=\"form-group row clearfix\"><label for=\"inputPhone\" class=\"col-sm-3 control-label\">Phone</label><div class=\"col-sm-9\"><input type=\"text\" class=\"form-control\" ng-model=\"formscope.phone_number\" id=\"inputPhone\" phone-input=\"\" disabled=\"\" value=\"{{formscope.phone_number}}\"></div></div><div class=\"form-group row clearfix\"><label for=\"inputPhone\" class=\"col-sm-3 control-label\">Mobile</label><div class=\"col-sm-9\"><input type=\"text\" class=\"form-control\" ng-model=\"formscope.mobile\" disabled=\"\" phone-input=\"\" name=\"mobile\" value=\"{{formscope.mobile}}\"></div></div></div></div></div></div>');\n$templateCache.put('app/pages/users/viewdetails.html','<div class=\"widgets\"><div class=\"viewTourMain\"><div class=\"message\"><div class=\"row\"><div class=\"col-md-12\"><div ba-panel=\"\" ba-panel-class=\"\"><div class=\"person-info\"><button ui-sref=\"users.list\" type=\"button\" class=\"back-button btn btn-default btn-with-icon pull-right\"><i class=\"ion-chevron-left\"></i>Back</button> <img ng-src=\"{{ imageUrl }}\" class=\"human-picture\" style=\"margin-top: -3%;\"></div><div class=\"row\"><div class=\"form-group col-lg-6 col-md-12 col-sm-12\"><h3 class=\"with-line\">General Information</h3><div class=\"form-group row clearfix\"><label class=\"col-xs-3\">Name:</label><div class=\"col-xs-9\">{{formscope.name || \\'-\\'}}</div></div><div class=\"form-group row clearfix\"><label class=\"col-xs-3\">Gender:</label><div class=\"col-xs-9\">{{showGender(formscope.gender) || \\'-\\'}}</div></div><div class=\"form-group row clearfix\"><label class=\"col-xs-3\">Birth Date:</label><div class=\"col-xs-9\">{{formscope.dob | amDateFormat:\\'DD, MMMM YYYY\\' || \\'-\\'}}</div></div></div><div class=\"form-group col-lg-6 col-md-12 col-sm-12\"><h3 class=\"with-line\">Contact Information</h3><div class=\"form-group row clearfix\"><label class=\"col-xs-3\">Email:</label><div class=\"col-xs-9\">{{formscope.email || \\'-\\'}}</div></div><div class=\"form-group row clearfix\"><label class=\"col-xs-3\">Mobile:</label><div class=\"col-xs-9\">{{formscope.mobile || \\'-\\'}}</div></div><div class=\"form-group row clearfix\"><label class=\"col-xs-3\">Phone Number:</label><div class=\"col-xs-9\">{{formscope.phone_number || \\'-\\'}}</div></div></div></div><div class=\"row\"><div class=\"form-group col-lg-6 col-md-12 col-sm-12\"><h3 class=\"with-line\">Address Information</h3><div class=\"form-group row clearfix\"><label class=\"col-xs-3\">Street 1:</label><div class=\"col-xs-9\">{{formscope.address || \\'-\\'}}</div></div><div class=\"form-group row clearfix\"><label class=\"col-xs-3\">Street 2:</label><div class=\"col-xs-9\">{{formscope.address1 || \\'-\\'}}</div></div><div class=\"form-group row clearfix\"><label class=\"col-xs-3\">City:</label><div class=\"col-xs-9\">{{formscope.city || \\'-\\'}}</div></div><div class=\"form-group row clearfix\"><label class=\"col-xs-3\">State:</label><div class=\"col-xs-9\">{{formscope.state || \\'-\\'}}</div></div><div class=\"form-group row clearfix\"><label class=\"col-xs-3\">Country:</label><div class=\"col-xs-9\">{{formscope.country.country_name || \\'-\\'}}</div></div><div class=\"form-group row clearfix\"><label class=\"col-xs-3\">Zip Code:</label><div class=\"col-xs-9\">{{formscope.zip_code || \\'-\\'}}</div></div></div><div class=\"form-group col-lg-6 col-md-12 col-sm-12\"><h3 class=\"with-line\">Professional Information</h3><div class=\"form-group row clearfix\"><label class=\"col-xs-3\">User Type:</label><div class=\"col-xs-9\">{{formscope.role_name || \\'-\\'}}</div></div><div class=\"form-group row clearfix\"><label class=\"col-xs-3\">Join Date:</label><div class=\"col-xs-9\">{{formscope.created_at | amDateFormat:\\'DD, MMMM YYYY\\' || \\'-\\'}}</div></div></div></div></div></div></div></div></div></div>');\n$templateCache.put('app/pages/categories/locations/add.html','<div class=\"row\"><div class=\"col-md-6\"><div ba-panel=\"\" ba-panel-title=\"{{pageName}}\" ba-panel-class=\"with-scroll\"><form ng-submit=\"add_data(add_form)\" role=\"form\" name=\"add_form\"><div class=\"form-group\"><label>Name<code>*</code></label> <input type=\"text\" ng-model=\"formscope.name\" name=\"name\" class=\"form-control\" placeholder=\"Please enter info session name\" focus-me=\"\" required-error-message=\"{{errorMessage.name.required}}\" minlength-error-message=\"{{errorMessage.name.minlength}}\" maxlength-error-message=\"{{errorMessage.name.maxlength}}\" validator=\"required, minlength=2, maxlength=50\" valid-method=\"watch\" chars=\"letters\"></div><div class=\"form-group\"><label>Description</label> <textarea class=\"form-control\" placeholder=\"Please enter description\" ng-model=\"formscope.description\" name=\"description\" maxlength-error-message=\"{{errorMessage.description.maxlength}}\" validator=\"maxlength=500\" valid-method=\"blur\" chars=\"alpha-numeric\"></textarea></div><div class=\"form-group\"><label>Status</label><select chosen=\"\" ng-model=\"formscope.status\" name=\"status\" ng-options=\"company.value as company.text for company in statusData\" class=\"form-control\"></select></div><button type=\"submit\" ng-disabled=\"isSubmitted\" class=\"btn btn-success\" align=\"center\">{{btnName}}</button> <a type=\"submit\" ui-sref=\"categories.locations.list\" class=\"btn btn-info\" align=\"center\">Cancel</a></form></div></div></div>');\n$templateCache.put('app/pages/categories/locations/view.html','<div class=\"widgets\"><div class=\"row\"><div class=\"col-md-12\"><div ba-panel=\"\" ba-panel-title=\"{{ activePageTitle }} Listing\"><div class=\"form-group select-page-size-wrap\"><button class=\"btn btn-primary\" ng-if=\"havePermission(\\'locations\\',\\'create\\');\" ui-sref=\"categories.locations.add\">Add</button></div><div class=\"horizontal-scroll\"><table datatable=\"\" dt-instance=\"dtInstance\" dt-options=\"dtOptions\" dt-columns=\"dtColumns\" class=\"row-border hover\"></table></div></div></div></div></div>');\n$templateCache.put('app/pages/categories/mealcategories/add.html','<div class=\"row\"><div class=\"col-md-6\"><div ba-panel=\"\" ba-panel-title=\"{{pageName}}\" ba-panel-class=\"with-scroll\"><form ng-submit=\"add_data(add_form)\" role=\"form\" name=\"add_form\"><div class=\"form-group\"><label>Name<code>*</code></label> <input type=\"text\" ng-model=\"formscope.name\" name=\"name\" class=\"form-control\" placeholder=\"Please enter meal category name\" required-error-message=\"{{errorMessage.name.required}}\" minlength-error-message=\"{{errorMessage.name.minlength}}\" maxlength-error-message=\"{{errorMessage.name.maxlength}}\" focus-me=\"\" validator=\"required, minlength=2, maxlength=50\" valid-method=\"blur\" chars=\"letters\"></div><div class=\"form-group\"><label>Description</label> <textarea class=\"form-control\" placeholder=\"Please enter description\" ng-model=\"formscope.description\" name=\"description\" maxlength-error-message=\"{{errorMessage.description.maxlength}}\" validator=\"maxlength=500\" valid-method=\"blur\" chars=\"alpha-numeric\"></textarea></div><div class=\"form-group\"><label>Status</label><select chosen=\"\" ng-model=\"formscope.status\" name=\"status\" ng-options=\"status.value as status.text for status in statusData\" class=\"form-control\"></select></div><button type=\"submit\" ng-disabled=\"isSubmitted\" class=\"btn btn-success\" align=\"center\">{{btnName}}</button> <a type=\"submit\" ui-sref=\"mealsvalue.mealcategories.list\" class=\"btn btn-info\" align=\"center\">Cancel</a></form></div></div></div>');\n$templateCache.put('app/pages/categories/mealcategories/view.html','<div class=\"widgets\"><div class=\"row\"><div class=\"col-md-12\"><div ba-panel=\"\" ba-panel-title=\"Meal Categories Listing\"><div class=\"form-group select-page-size-wrap\"><button class=\"btn btn-primary\" ng-if=\"havePermission(\\'mealcategories\\',\\'create\\');\" ui-sref=\"mealsvalue.mealcategories.add\">Add</button></div><div class=\"horizontal-scroll\"><table datatable=\"\" dt-instance=\"dtInstance\" dt-options=\"dtOptions\" dt-columns=\"dtColumns\" class=\"row-border hover\"></table></div></div></div></div></div>');\n$templateCache.put('app/pages/categories/meals/add.html','<div class=\"row\"><div class=\"col-md-6\"><div ba-panel=\"\" ba-panel-title=\"{{pageName}}\" ba-panel-class=\"with-scroll\"><form ng-submit=\"add_data(add_form)\" role=\"form\" name=\"add_form\"><div class=\"form-group\"><label>Name<code>*</code></label> <input type=\"text\" ng-model=\"formscope.name\" name=\"name\" class=\"form-control\" placeholder=\"Please enter meals name\" focus-me=\"\" required-error-message=\"{{errorMessage.name.required}}\" minlength-error-message=\"{{errorMessage.name.minlength}}\" maxlength-error-message=\"{{errorMessage.name.maxlength}}\" validator=\"required, minlength=2, maxlength=50\" valid-method=\"blur\" chars=\"letters\"></div><div class=\"form-group\"><label>Description</label> <textarea class=\"form-control\" placeholder=\"Please enter description\" ng-model=\"formscope.description\" name=\"description\" maxlength-error-message=\"{{errorMessage.description.maxlength}}\" validator=\"maxlength=500\" valid-method=\"blur\" chars=\"alpha-numeric\"></textarea></div><div class=\"form-group\"><label>Status</label><select chosen=\"\" ng-model=\"formscope.status\" name=\"status\" ng-options=\"company.value as company.text for company in statusData\" class=\"form-control\"></select></div><button type=\"submit\" ng-disabled=\"isSubmitted\" class=\"btn btn-success\" align=\"center\">{{btnName}}</button> <a type=\"submit\" ui-sref=\"mealsvalue.meals.list\" class=\"btn btn-info\" align=\"center\">Cancel</a></form></div></div></div>');\n$templateCache.put('app/pages/categories/meals/view.html','<div class=\"widgets\"><div class=\"row\"><div class=\"col-md-12\"><div ba-panel=\"\" ba-panel-title=\"{{ activePageTitle }} Listing\"><div class=\"form-group select-page-size-wrap\"><button class=\"btn btn-primary\" ng-if=\"havePermission(\\'meals\\',\\'create\\');\" ui-sref=\"mealsvalue.meals.add\">Add</button></div><div class=\"horizontal-scroll\"><table datatable=\"\" dt-instance=\"dtInstance\" dt-options=\"dtOptions\" dt-columns=\"dtColumns\" class=\"row-border hover\"></table></div></div></div></div></div>');\n$templateCache.put('app/pages/categories/mealservicelocations/add.html','<div class=\"row\"><div class=\"col-md-6\"><div ba-panel=\"\" ba-panel-title=\"{{pageName}}\" ba-panel-class=\"with-scroll\"><form ng-submit=\"add_data(add_form)\" role=\"form\" name=\"add_form\"><div class=\"form-group\"><label>Name<code>*</code></label> <input type=\"text\" ng-model=\"formscope.name\" name=\"name\" class=\"form-control\" placeholder=\"Please enter service location\" required-error-message=\"{{errorMessage.name.required}}\" focus-me=\"\" minlength-error-message=\"{{errorMessage.name.minlength}}\" maxlength-error-message=\"{{errorMessage.name.maxlength}}\" validator=\"required, minlength=2, maxlength=50\" valid-method=\"blur\" chars=\"letters\"></div><div class=\"form-group\"><label>Description</label> <textarea class=\"form-control\" placeholder=\"Please enter description\" ng-model=\"formscope.description\" name=\"description\" maxlength-error-message=\"{{errorMessage.description.maxlength}}\" validator=\"maxlength=500\" valid-method=\"blur\" chars=\"alpha-numeric\"></textarea></div><div class=\"form-group\"><label>Status</label><select chosen=\"\" ng-model=\"formscope.status\" name=\"status\" ng-options=\"status.value as status.text for status in statusData\" class=\"form-control\"></select></div><button type=\"submit\" ng-disabled=\"isSubmitted\" class=\"btn btn-success\" align=\"center\">{{btnName}}</button> <a type=\"submit\" ui-sref=\"mealsvalue.mealservicelocations.list\" class=\"btn btn-info\" align=\"center\">Cancel</a></form></div></div></div>');\n$templateCache.put('app/pages/categories/mealservicelocations/view.html','<div class=\"widgets\"><div class=\"row\"><div class=\"col-md-12\"><div ba-panel=\"\" ba-panel-title=\"Meal Service Locations Listing\"><div class=\"form-group select-page-size-wrap\"><button class=\"btn btn-primary\" ng-if=\"havePermission(\\'mealservicelocations\\',\\'create\\');\" ui-sref=\"mealsvalue.mealservicelocations.add\">Add</button></div><div class=\"horizontal-scroll\"><table datatable=\"\" dt-instance=\"dtInstance\" dt-options=\"dtOptions\" dt-columns=\"dtColumns\" class=\"row-border hover\"></table></div></div></div></div></div>');\n$templateCache.put('app/pages/categories/mealservicetypes/add.html','<div class=\"row\"><div class=\"col-md-6\"><div ba-panel=\"\" ba-panel-title=\"{{pageName}}\" ba-panel-class=\"with-scroll\"><form ng-submit=\"add_data(add_form)\" role=\"form\" name=\"add_form\"><div class=\"form-group\"><label>Name<code>*</code></label> <input type=\"text\" ng-model=\"formscope.name\" name=\"name\" class=\"form-control\" placeholder=\"Please enter service type\" required-error-message=\"{{errorMessage.name.required}}\" focus-me=\"\" minlength-error-message=\"{{errorMessage.name.minlength}}\" maxlength-error-message=\"{{errorMessage.name.maxlength}}\" validator=\"required, minlength=2, maxlength=50\" valid-method=\"blur\" chars=\"letters\"></div><div class=\"form-group\"><label>Description</label> <textarea class=\"form-control\" placeholder=\"Please enter description\" ng-model=\"formscope.description\" name=\"description\" maxlength-error-message=\"{{errorMessage.description.maxlength}}\" validator=\"maxlength=500\" valid-method=\"blur\" chars=\"alpha-numeric\"></textarea></div><div class=\"form-group\"><label>Type<code>*</code></label><div class=\"input-demo radio-demo row\"><div class=\"col-md-2\"><label class=\"radio-inline custom-radio nowrap\"><input type=\"radio\" ng-model=\"formscope.type\" name=\"type\" id=\"inlineRadio1\" value=\"1\"> <span>Free</span></label></div><div class=\"col-md-2\"><label class=\"radio-inline custom-radio nowrap\"><input type=\"radio\" ng-model=\"formscope.type\" name=\"type\" id=\"inlineRadio2\" value=\"2\"> <span>Paid</span></label></div></div></div><div class=\"form-group\" ng-if=\"formscope.type == \\'2\\'\"><label>Cost (Per Person)<code>*</code></label> <input type=\"text\" ng-model=\"formscope.cost\" name=\"cost\" class=\"form-control\" placeholder=\"Please enter cost\" chars=\"only-numbers\" required-error-message=\"{{errorMessage.cost.required}}\" minlength-error-message=\"{{errorMessage.cost.minlength}}\" maxlength-error-message=\"{{errorMessage.cost.maxlength}}\" validator=\"required, minlength=1, maxlength=5\" valid-method=\"blur\"></div><div class=\"form-group\"><label>Status</label><select chosen=\"\" ng-model=\"formscope.status\" name=\"status\" ng-options=\"status.value as status.text for status in statusData\" class=\"form-control\"></select></div><button type=\"submit\" ng-disabled=\"isSubmitted\" class=\"btn btn-success\" align=\"center\">{{btnName}}</button> <a type=\"submit\" ui-sref=\"mealsvalue.mealservicetypes.list\" class=\"btn btn-info\" align=\"center\">Cancel</a></form></div></div></div>');\n$templateCache.put('app/pages/categories/mealservicetypes/view.html','<div class=\"widgets\"><div class=\"row\"><div class=\"col-md-12\"><div ba-panel=\"\" ba-panel-title=\"Meal Service Types Listing\"><div class=\"form-group select-page-size-wrap\"><button class=\"btn btn-primary\" ng-if=\"havePermission(\\'mealservicetypes\\',\\'create\\');\" ui-sref=\"mealsvalue.mealservicetypes.add\">Add</button></div><div class=\"horizontal-scroll\"><table datatable=\"\" dt-instance=\"dtInstance\" dt-options=\"dtOptions\" dt-columns=\"dtColumns\" class=\"row-border hover\"></table></div></div></div></div></div>');\n$templateCache.put('app/pages/categories/momentos/add.html','<div class=\"row\"><div class=\"col-md-6\"><div ba-panel=\"\" ba-panel-title=\"{{pageName}}\" ba-panel-class=\"with-scroll\"><form ng-submit=\"add_data(add_form)\" role=\"form\" name=\"add_form\"><div class=\"form-group\"><label>Name<code>*</code></label> <input type=\"text\" ng-model=\"formscope.name\" name=\"name\" class=\"form-control\" placeholder=\"Please enter momento name\" required-error-message=\"{{errorMessage.name.required}}\" focus-me=\"\" minlength-error-message=\"{{errorMessage.name.minlength}}\" maxlength-error-message=\"{{errorMessage.name.maxlength}}\" validator=\"required, minlength=2, maxlength=50\" valid-method=\"blur\" chars=\"letters\"></div><div class=\"form-group\"><label>Description</label> <textarea class=\"form-control\" placeholder=\"Please enter description\" ng-model=\"formscope.description\" name=\"description\" maxlength-error-message=\"{{errorMessage.description.maxlength}}\" validator=\"maxlength=500\" valid-method=\"blur\" chars=\"alpha-numeric\"></textarea></div><div class=\"form-group\"><label>Status</label><select chosen=\"\" ng-model=\"formscope.status\" name=\"status\" ng-options=\"company.value as company.text for company in statusData\" class=\"form-control\"></select></div><button type=\"submit\" ng-disabled=\"isSubmitted\" class=\"btn btn-success\" align=\"center\">{{btnName}}</button> <a type=\"submit\" ui-sref=\"categories.momentos.list\" class=\"btn btn-info\" align=\"center\">Cancel</a></form></div></div></div>');\n$templateCache.put('app/pages/categories/momentos/view.html','<div class=\"widgets\"><div class=\"row\"><div class=\"col-md-12\"><div ba-panel=\"\" ba-panel-title=\"{{ activePageTitle }} Listing\"><div class=\"form-group select-page-size-wrap\"><button class=\"btn btn-primary\" ng-if=\"havePermission(\\'momentos\\',\\'create\\');\" ui-sref=\"categories.momentos.add\">Add</button></div><div class=\"horizontal-scroll\"><table datatable=\"\" dt-instance=\"dtInstance\" dt-options=\"dtOptions\" dt-columns=\"dtColumns\" class=\"row-border hover\"></table></div></div></div></div></div>');\n$templateCache.put('app/pages/categories/organizations/add.html','<div class=\"row\"><div class=\"col-md-6\"><div ba-panel=\"\" ba-panel-title=\"{{pageName}}\" ba-panel-class=\"with-scroll\"><form ng-submit=\"add_data(add_form)\" role=\"form\" name=\"add_form\"><div class=\"form-group\"><label>Name<code>*</code></label> <input type=\"text\" ng-model=\"formscope.name\" name=\"name\" class=\"form-control\" placeholder=\"Please enter organization type\" required-error-message=\"{{errorMessage.name.required}}\" focus-me=\"\" minlength-error-message=\"{{errorMessage.name.minlength}}\" maxlength-error-message=\"{{errorMessage.name.maxlength}}\" validator=\"required, minlength=2, maxlength=50\" valid-method=\"blur\" chars=\"letters\"></div><div class=\"form-group\"><label>Description</label> <textarea class=\"form-control\" placeholder=\"Please enter description\" ng-model=\"formscope.description\" name=\"description\" maxlength-error-message=\"{{errorMessage.description.maxlength}}\" validator=\"maxlength=500\" valid-method=\"blur\" chars=\"alpha-numeric\"></textarea></div><div class=\"form-group\"><label>Status</label><select chosen=\"\" ng-model=\"formscope.status\" name=\"status\" ng-options=\"company.value as company.text for company in statusData\" class=\"form-control\"></select></div><button type=\"submit\" ng-disabled=\"isSubmitted\" class=\"btn btn-success\" align=\"center\">{{btnName}}</button> <a type=\"submit\" ui-sref=\"categories.organizations.list\" class=\"btn btn-info\" align=\"center\">Cancel</a></form></div></div></div>');\n$templateCache.put('app/pages/categories/organizations/view.html','<div class=\"widgets\"><div class=\"row\"><div class=\"col-md-12\"><div ba-panel=\"\" ba-panel-title=\"{{ activePageTitle }} Listing\"><div class=\"form-group select-page-size-wrap\"><button class=\"btn btn-primary\" ng-if=\"havePermission(\\'organizations\\',\\'create\\');\" ui-sref=\"categories.organizations.add\">Add</button></div><div class=\"horizontal-scroll\"><table datatable=\"\" dt-instance=\"dtInstance\" dt-options=\"dtOptions\" dt-columns=\"dtColumns\" class=\"row-border hover\"></table></div></div></div></div></div>');\n$templateCache.put('app/pages/categories/tourtypes/add.html','<div class=\"row\"><div class=\"col-md-6\"><div ba-panel=\"\" ba-panel-title=\"{{pageName}}\" ba-panel-class=\"with-scroll\"><form ng-submit=\"add_data(add_form)\" role=\"form\" name=\"add_form\"><div class=\"form-group\"><label>Name<code>*</code></label> <input type=\"text\" ng-model=\"formscope.name\" name=\"name\" class=\"form-control\" placeholder=\"Please enter tour type\" required-error-message=\"{{errorMessage.name.required}}\" focus-me=\"\" minlength-error-message=\"{{errorMessage.name.minlength}}\" maxlength-error-message=\"{{errorMessage.name.maxlength}}\" validator=\"required, minlength=2, maxlength=50\" valid-method=\"blur\" chars=\"letters\"></div><div class=\"form-group\"><label>Status</label><select chosen=\"\" ng-model=\"formscope.status\" name=\"status\" ng-options=\"company.value as company.text for company in statusData\" class=\"form-control\"></select></div><button type=\"submit\" ng-disabled=\"isSubmitted\" class=\"btn btn-success\" align=\"center\">{{btnName}}</button> <a type=\"submit\" ui-sref=\"categories.tourtypes.list\" class=\"btn btn-info\" align=\"center\">Cancel</a></form></div></div></div>');\n$templateCache.put('app/pages/categories/tourtypes/taskdetails.html','<div class=\"widgets\"><div class=\"row\"><div class=\"col-md-12\"><div ba-panel=\"\" ba-panel-title=\"Tour Type: {{tourtype.name}}\" ba-panel-class=\"with-scroll\"><div class=\"add-row-editable-table\"><button ng-if=\"havePermission(\\'tourtypes\\',\\'create\\');\" class=\"btn btn-primary\" ng-click=\"addTask()\">{{btnName}}</button> <button ui-sref=\"categories.tourtypes.list\" type=\"button\" class=\"back-button btn btn-default btn-with-icon pull-right\"><i class=\"ion-chevron-left\"></i>Tour type</button></div><table class=\"table table-bordered table-hover table-condensed\"><tr><td></td><td>Name</td><td>Status</td><td>Actions</td></tr><tr ng-repeat=\"user in tourtype.defaulttask\" class=\"editable-row\"><td>{{$index+1}}</td><td><span editable-text=\"user.task\" e-chars=\"alpha-numeric\" e-name=\"task\" e-form=\"rowform\" e-required=\"\" onbeforesave=\"checkTask($data)\">{{ user.task || \\'empty\\' }}</span></td><td class=\"select-td\"><span editable-select=\"user.status\" e-name=\"status\" e-form=\"rowform\" e-selectpicker=\"\" e-ng-options=\"s.value as s.text for s in statuses\" onbeforesave=\"checkStatus($data)\">{{ showStatus(user) }}</span></td><td><form onbeforesave=\"add_data($data, $index, user.id)\" role=\"form\" editable-form=\"\" name=\"rowform\" ng-show=\"rowform.$visible\" class=\"form-buttons form-inline\" shown=\"inserted == user\"><button type=\"submit\" ng-disabled=\"rowform.$waiting\" class=\"btn btn-primary editable-table-button btn-xs\">Save</button><button ng-if=\"user.id == null\" type=\"button\" ng-disabled=\"rowform.$waiting\" ng-click=\"cancelRow($index)\" class=\"btn btn-default editable-table-button btn-xs\">Cancel</button> <button ng-if=\"user.id != null\" type=\"button\" ng-disabled=\"rowform.$waiting\" ng-click=\"rowform.$cancel()\" class=\"btn btn-default editable-table-button btn-xs\">Cancel</button></form><div class=\"buttons\" ng-show=\"!rowform.$visible\"><button class=\"btn btn-primary editable-table-button btn-xs\" ng-click=\"rowform.$show()\">Edit</button> <button class=\"btn btn-danger editable-table-button btn-xs\" ng-confirm-click=\"Are you sure to delete this task?\" confirmed-click=\"removeTask(user.id, $index)\">Delete</button></div></td></tr></table></div></div></div></div>');\n$templateCache.put('app/pages/categories/tourtypes/view.html','<div class=\"widgets\"><div class=\"row\"><div class=\"col-md-12\"><div ba-panel=\"\" ba-panel-title=\"{{ activePageTitle }} Listing\"><div class=\"form-group select-page-size-wrap\"><button class=\"btn btn-primary\" ng-if=\"havePermission(\\'tourtypes\\',\\'create\\');\" ui-sref=\"categories.tourtypes.add\">Add</button></div><div class=\"horizontal-scroll\"><table datatable=\"\" dt-instance=\"dtInstance\" dt-options=\"dtOptions\" dt-columns=\"dtColumns\" class=\"row-border hover\"></table></div></div></div></div></div>');\n$templateCache.put('app/pages/categories/transports/add.html','<div class=\"row\"><div class=\"col-md-6\"><div ba-panel=\"\" ba-panel-title=\"{{pageName}}\" ba-panel-class=\"with-scroll\"><form ng-submit=\"add_data(add_form)\" role=\"form\" name=\"add_form\"><div class=\"form-group\"><label>Name<code>*</code></label> <input type=\"text\" ng-model=\"formscope.name\" name=\"name\" class=\"form-control\" placeholder=\"Please enter transport name\" required-error-message=\"{{errorMessage.name.required}}\" focus-me=\"\" minlength-error-message=\"{{errorMessage.name.minlength}}\" maxlength-error-message=\"{{errorMessage.name.maxlength}}\" validator=\"required, minlength=2, maxlength=50\" valid-method=\"blur\" chars=\"letters\"></div><div class=\"form-group\"><label>Description</label> <textarea class=\"form-control\" placeholder=\"Please enter description\" ng-model=\"formscope.description\" name=\"description\" maxlength-error-message=\"{{errorMessage.description.maxlength}}\" validator=\"maxlength=500\" valid-method=\"blur\" chars=\"alpha-numeric\"></textarea></div><div class=\"form-group\"><label>Status</label><select chosen=\"\" ng-model=\"formscope.status\" name=\"status\" ng-options=\"company.value as company.text for company in statusData\" class=\"form-control\"></select></div><button type=\"submit\" ng-disabled=\"isSubmitted\" class=\"btn btn-success\" align=\"center\">{{btnName}}</button> <a type=\"submit\" ui-sref=\"categories.transports.list\" class=\"btn btn-info\" align=\"center\">Cancel</a></form></div></div></div>');\n$templateCache.put('app/pages/categories/transports/view.html','<div class=\"widgets\"><div class=\"row\"><div class=\"col-md-12\"><div ba-panel=\"\" ba-panel-title=\"{{ activePageTitle }} Listing\"><div class=\"form-group select-page-size-wrap\"><button class=\"btn btn-primary\" ng-if=\"havePermission(\\'transports\\',\\'create\\');\" ui-sref=\"categories.transports.add\">Add</button></div><div class=\"horizontal-scroll\"><table datatable=\"\" dt-instance=\"dtInstance\" dt-options=\"dtOptions\" dt-columns=\"dtColumns\" class=\"row-border hover\"></table></div></div></div></div></div>');\n$templateCache.put('app/pages/categories/visitors/add.html','<div class=\"row\"><div class=\"col-md-6\"><div ba-panel=\"\" ba-panel-title=\"{{pageName}}\" ba-panel-class=\"with-scroll\"><form ng-submit=\"add_data(add_form)\" role=\"form\" name=\"add_form\"><div class=\"form-group\"><label>Name<code>*</code></label> <input type=\"text\" ng-model=\"formscope.name\" name=\"name\" class=\"form-control\" placeholder=\"Please enter visitor type\" required-error-message=\"{{errorMessage.name.required}}\" focus-me=\"\" minlength-error-message=\"{{errorMessage.name.minlength}}\" maxlength-error-message=\"{{errorMessage.name.maxlength}}\" validator=\"required, minlength=2, maxlength=50\" valid-method=\"blur\" chars=\"letters\"></div><div class=\"form-group\"><label>Description</label> <textarea class=\"form-control\" placeholder=\"Please enter description\" ng-model=\"formscope.description\" name=\"description\" maxlength-error-message=\"{{errorMessage.description.maxlength}}\" validator=\"maxlength=500\" valid-method=\"blur\" chars=\"alpha-numeric\"></textarea></div><div class=\"form-group\"><label>Status</label><select chosen=\"\" ng-model=\"formscope.status\" name=\"status\" ng-options=\"company.value as company.text for company in statusData\" class=\"form-control\"></select></div><button type=\"submit\" ng-disabled=\"isSubmitted\" class=\"btn btn-success\" align=\"center\">{{btnName}}</button> <a type=\"submit\" ui-sref=\"categories.visitors.list\" class=\"btn btn-info\" align=\"center\">Cancel</a></form></div></div></div>');\n$templateCache.put('app/pages/categories/visitors/view.html','<div class=\"widgets\"><div class=\"row\"><div class=\"col-md-12\"><div ba-panel=\"\" ba-panel-title=\"{{ activePageTitle }} Listing\"><div class=\"form-group select-page-size-wrap\"><button class=\"btn btn-primary\" ng-if=\"havePermission(\\'visitors\\',\\'create\\');\" ui-sref=\"categories.visitors.add\">Add</button></div><div class=\"horizontal-scroll\"><table datatable=\"\" dt-instance=\"dtInstance\" dt-options=\"dtOptions\" dt-columns=\"dtColumns\" class=\"row-border hover\"></table></div></div></div></div></div>');\n$templateCache.put('app/pages/dashboard/dashboardCalendar/dashboardCalendar.html','<div id=\"calendar\" class=\"blurCalendar\"></div>');\n$templateCache.put('app/pages/roles/modal/showPermissions.html','<div class=\"box\"><div class=\"box-body\"><div ng-if=\"role.permissions.length > 0\"><input type=\"text\" class=\"form-control\" ng-model=\"myQuery\" placeholder=\"Search permissions\"><div ivh-treeview=\"role.permissions\" ivh-treeview-expand-to-depth=\"1\" ivh-treeview-use-checkboxes=\"false\" ivh-treeview-filter=\"myQuery\"></div></div><div ng-if=\"role.permissions.length == 0\">No any permissions</div></div></div>');\n$templateCache.put('app/pages/users/widgets/form.html','<div class=\"ng-cloak\" ng-controller=\"UsersCtrl as selectpickerVm\"><form><div class=\"form-group col-md-6\"><label for=\"input01\">First Name</label> <input type=\"text\" class=\"form-control\" id=\"input01\" placeholder=\"Please enter first name\"></div><div class=\"form-group col-md-6\"><label for=\"input01\">Last Name</label> <input type=\"text\" class=\"form-control\" id=\"input01\" placeholder=\"Please enter Last name\"></div><div class=\"form-group col-md-12\"><label for=\"input01\">Email</label> <input type=\"text\" class=\"form-control\" id=\"input01\" placeholder=\"Please enter email\"></div><div class=\"form-group col-md-12\"><label for=\"input02\">Password</label> <input type=\"password\" class=\"form-control\" id=\"input02\" placeholder=\"Please enter password\"></div><div class=\"form-group col-md-12\"><label for=\"input02\">Confirm Password</label> <input type=\"password\" class=\"form-control\" id=\"input02\" placeholder=\"Please enter confirm password\"></div><div class=\"form-group col-md-12\"><label for=\"input04\">Phone Number</label> <input type=\"text\" class=\"form-control\" id=\"input04\" placeholder=\"Please enter your phone number\"></div><div class=\"form-group col-md-12\"><label for=\"textarea01\">Address</label> <textarea placeholder=\"Please enter address\" class=\"form-control\" id=\"textarea01\"></textarea></div><div class=\"form-group col-md-12\"><label for=\"textarea01\">Gender</label><ui-select ng-model=\"selectpickerVm.gender.selected\" class=\"btn-group bootstrap-select form-control\" ng-disabled=\"false\" append-to-body=\"true\" search-enabled=\"false\"><ui-select-match placeholder=\"Please select gender\"><span>{{$select.selected.label}}</span></ui-select-match><ui-select-choices repeat=\"standardItem in genderOption\"><span ng-bind-html=\"standardItem.label\"></span></ui-select-choices></ui-select></div><div class=\"form-group col-md-12\"><label for=\"textarea01\">User Type</label><ui-select ng-model=\"selectpickerVm.user_type.selected\" class=\"btn-group bootstrap-select form-control\" ng-disabled=\"false\" append-to-body=\"true\" search-enabled=\"false\"><ui-select-match placeholder=\"Please select type\"><span>{{$select.selected.label}}</span></ui-select-match><ui-select-choices repeat=\"standardItem in userTypeOption\"><span ng-bind-html=\"standardItem.label\"></span></ui-select-choices></ui-select></div></form></div>');\n$templateCache.put('app/theme/components/baSidebar/ba-sidebar.html','<aside class=\"al-sidebar\" ng-swipe-right=\"$baSidebarService.setMenuCollapsed(false)\" ng-swipe-left=\"$baSidebarService.setMenuCollapsed(true)\" ng-mouseleave=\"hoverElemTop=selectElemTop\"><ul class=\"al-sidebar-list\" slimscroll=\"{height: \\'{{menuHeight}}px\\'}\" slimscroll-watch=\"menuHeight\"><li ng-repeat=\"item in ::menuItems\" class=\"al-sidebar-list-item\" ng-class=\"::{\\'with-sub-menu\\': item.subMenu}\" ui-sref-active=\"selected\" ba-sidebar-toggling-item=\"item\"><a ng-mouseenter=\"hoverItem($event, item)\" ui-state=\"item.stateRef || \\'\\'\" ng-href=\"{{::(item.fixedHref ? item.fixedHref: \\'\\')}}\" ng-if=\"::!item.subMenu\" class=\"al-sidebar-list-link\"><i class=\"{{ ::item.icon }}\"></i><span>{{ ::item.title }}</span></a> <a ng-mouseenter=\"hoverItem($event, item)\" ng-if=\"::item.subMenu\" class=\"al-sidebar-list-link\" ba-ui-sref-toggler=\"\"><i class=\"{{ ::item.icon }}\"></i><span>{{ ::item.title }}</span> <b class=\"fa fa-angle-down\" ui-sref-active=\"fa-angle-up\" ng-if=\"::item.subMenu\"></b></a><ul ng-if=\"::item.subMenu\" class=\"al-sidebar-sublist\" ng-class=\"{\\'slide-right\\': item.slideRight}\" ba-ui-sref-toggling-submenu=\"\"><li ng-repeat=\"subitem in ::item.subMenu\" ng-class=\"::{\\'with-sub-menu\\': subitem.subMenu}\" ui-sref-active=\"selected\" ba-sidebar-toggling-item=\"subitem\" class=\"ba-sidebar-sublist-item\"><a ng-mouseenter=\"hoverItem($event, item)\" ng-if=\"::subitem.subMenu\" ba-ui-sref-toggler=\"\" class=\"al-sidebar-list-link subitem-submenu-link\"><span>{{ ::subitem.title }}</span> <b class=\"fa\" ng-class=\"{\\'fa-angle-up\\': subitem.expanded, \\'fa-angle-down\\': !subitem.expanded}\" ng-if=\"::subitem.subMenu\"></b></a><ul ng-if=\"::subitem.subMenu\" class=\"al-sidebar-sublist subitem-submenu-list\" ng-class=\"{expanded: subitem.expanded, \\'slide-right\\': subitem.slideRight}\" ba-ui-sref-toggling-submenu=\"\"><li ng-mouseenter=\"hoverItem($event, item)\" ng-repeat=\"subSubitem in ::subitem.subMenu\" ui-sref-active=\"selected\"><a ng-mouseenter=\"hoverItem($event, item)\" href=\"\" ng-if=\"::subSubitem.disabled\" class=\"al-sidebar-list-link\">{{ ::subSubitem.title }}</a> <a ng-mouseenter=\"hoverItem($event, item)\" ui-state=\"subSubitem.stateRef || \\'\\'\" ng-if=\"::!subSubitem.disabled\" ng-href=\"{{::(subSubitem.fixedHref ? subSubitem.fixedHref: \\'\\')}}\">{{::subSubitem.title }}</a></li></ul><a ng-mouseenter=\"hoverItem($event, item)\" href=\"\" ng-if=\"::(!subitem.subMenu && subitem.disabled)\" class=\"al-sidebar-list-link\">{{ ::subitem.title }}</a> <a ng-mouseenter=\"hoverItem($event, item)\" target=\"{{::(subitem.blank ? \\'_blank\\' : \\'_self\\')}}\" ng-if=\"::(!subitem.subMenu && !subitem.disabled)\" ui-state=\"subitem.stateRef || \\'\\'\" ng-href=\"{{::(subitem.fixedHref ? subitem.fixedHref: \\'\\')}}\">{{ ::subitem.title}}</a></li></ul></li></ul><div class=\"sidebar-hover-elem\" ng-style=\"{top: hoverElemTop + \\'px\\', height: hoverElemHeight + \\'px\\'}\" ng-class=\"{\\'show-hover-elem\\': showHoverElem }\"></div></aside>');\n$templateCache.put('app/theme/components/baWizard/baWizard.html','<div class=\"ba-wizard\"><div class=\"ba-wizard-navigation-container\"><div ng-repeat=\"t in $baWizardController.tabs\" class=\"ba-wizard-navigation {{$baWizardController.tabNum == $index ? \\'active\\' : \\'\\'}}\" ng-click=\"$baWizardController.selectTab($index)\">{{t.title}}</div></div><div class=\"progress ba-wizard-progress\"><div class=\"progress-bar progress-bar-danger active\" role=\"progressbar\" aria-valuemin=\"0\" aria-valuemax=\"100\" ng-style=\"{width: $baWizardController.progress + \\'%\\'}\"></div></div><div class=\"steps\" ng-transclude=\"\"></div><nav><ul class=\"pager ba-wizard-pager\"><li class=\"previous\"><button ng-disabled=\"$baWizardController.isFirstTab()\" ng-click=\"$baWizardController.previousTab()\" type=\"button\" class=\"btn btn-primary\"><span aria-hidden=\"true\">&larr;</span> previous</button></li><li class=\"next\"><button ng-disabled=\"$baWizardController.isLastTab()\" ng-click=\"$baWizardController.nextTab()\" type=\"button\" class=\"btn btn-primary\">next <span aria-hidden=\"true\">&rarr;</span></button></li></ul></nav></div>');\n$templateCache.put('app/theme/components/baWizard/baWizardStep.html','<section ng-show=\"selected\" class=\"step\" ng-transclude=\"\"></section>');\n$templateCache.put('app/theme/components/backTop/backTop.html','<i class=\"fa fa-angle-up back-top\" id=\"backTop\" title=\"Back to Top\"></i>');\n$templateCache.put('app/theme/components/contentTop/contentTop.html','<div class=\"content-top clearfix\"><h1 class=\"al-title\">{{ activePageTitle }}</h1><ul class=\"breadcrumb al-breadcrumb\"><li><a href=\"#/dashboard\">Home</a></li><li>{{ activePageTitle }}</li></ul></div>');\n$templateCache.put('app/theme/components/msgCenter/msgCenter.html','<div ng-if=\"auth_user\"><cc-auto-refresh-fn refresh-fn=\"refreshList()\" refresh-interval=\"refreshOpts.interval\" refresh-model=\"list\" refresh-paused=\"refreshOpts.paused\" refresh-busy=\"refreshBusy\" refresh-on-refreshed=\"setLastRefreshed(eventArgs)\"></cc-auto-refresh-fn></div><ul class=\"al-msg-center clearfix\"><li uib-dropdown=\"\"><a href=\"\" uib-dropdown-toggle=\"\"><i class=\"fa fa-bell-o\"></i> <span ng-if=\"notification_old_count != 0\">{{notification_old_count}}</span><div class=\"notification-ring\"></div></a><div uib-dropdown-menu=\"\" class=\"top-dropdown-menu\"><i class=\"dropdown-arr\"></i><div class=\"header clearfix\"><strong>Notifications</strong> <a ng-click=\"markReadTopNotification()\" ng-if=\"notification_old_count != 0\" href=\"\">Mark All as Read</a></div><div class=\"msg-list\"><a href=\"\" class=\"clearfix cursorDefault\" ng-repeat=\"msg in notification_old_data\"><div class=\"img-area\"><img ng-if=\"msg.user.image != \\'\\'\" ng-class=\"{\\'photo-msg-item\\' : !msg.user.image}\" ng-src=\"{{imagePath}}{{msg.user.id}}/{{msg.user.image}}\"> <img ng-if=\"msg.user.image == \\'\\'\" ng-class=\"{\\'photo-msg-item\\' : !msg.user.image}\" ng-src=\"{{::( msg.user.image || dummyImage )}}\"></div><div class=\"msg-area\"><div>{{msg.message}}</div><span am-time-ago=\"msg.created_at | amUtc | amLocal\"></span></div></a></div><a ui-sref=\"notifications\">See all notifications</a></div></li></ul>');\n$templateCache.put('app/theme/components/pageTop/pageTop.html','<div class=\"page-top clearfix\" scroll-position=\"scrolled\" max-height=\"50\" ng-class=\"{\\'scrolled\\': scrolled}\"><a href=\"#/dashboard\" class=\"al-logo clearfix col-lg-1\"><img src=\"{{logoImage}}\"></a> <a href=\"\" class=\"collapse-menu-link ion-navicon\" ba-sidebar-toggle-menu=\"\"></a><div class=\"user-profile clearfix\"><div class=\"al-user-profile\" uib-dropdown=\"\"><a uib-dropdown-toggle=\"\" class=\"profile-toggle-link\"><img ng-src=\"{{profilePicture}}\"></a><ul class=\"top-dropdown-menu profile-dropdown\" uib-dropdown-menu=\"\"><li><i class=\"dropdown-arr\"></i></li><li><a ui-sref=\"users.edit-profile\"><i class=\"fa fa-user\"></i>Profile</a></li><li><a href=\"\" class=\"signout\" ng-click=\"logout()\" ng-disabled=\"logoutInProgress\"><i class=\"fa fa-power-off\"></i>Sign out</a></li></ul></div><msg-center></msg-center></div></div>');\n$templateCache.put('app/theme/components/progressBarRound/progressBarRound.html','<svg class=\"center-block progress-bar-round\" width=\"200\" height=\"200\"><circle cx=\"100\" cy=\"100\" r=\"90\" fill=\"none\" stroke=\"#F8F8FF\" stroke-width=\"8\"></circle><circle cx=\"100\" cy=\"100\" r=\"90\" fill=\"none\" id=\"loader\" class=\"\" stroke=\"#209e91\" stroke-width=\"8\" stroke-dasharray=\"0,20000\" transform=\"rotate(-90,100,100)\" stroke-linecap=\"round\"></circle><text text-anchor=\"middle\" class=\"loading\" x=\"100\" y=\"90\">Loading...</text><text class=\"percentage\" text-anchor=\"middle\" x=\"100\" y=\"130\">{{progress}}%</text></svg>');\n$templateCache.put('app/theme/components/widgets/widgets.html','<div class=\"widgets\"><div ng-repeat=\"widgetBlock in ngModel\" ng-class=\"{\\'row\\': widgetBlock.widgets.length > 1}\"><div ng-repeat=\"widgetCol in widgetBlock.widgets\" ng-class=\"{\\'col-md-6\\': widgetBlock.widgets.length === 2}\" ng-model=\"widgetCol\" class=\"widgets-block\"><div ba-panel=\"\" ba-panel-title=\"{{::widget.title}}\" ng-repeat=\"widget in widgetCol\" ba-panel-class=\"with-scroll {{widget.panelClass}}\"><div ng-include=\"widget.url\"></div></div></div></div></div>');\n$templateCache.put('app/theme/inputs/baSwitcher/baSwitcher.html','<label class=\"switcher-container\"><input type=\"checkbox\" ng-model=\"switcherValue\"><div class=\"switcher\" ng-class=\"::switcherStyle\"><div class=\"handle-container\"><span class=\"handle handle-on\">ON</span> <span class=\"handle\"></span> <span class=\"handle handle-off\">OFF</span></div></div></label>');}]);"],"sourceRoot":"/source/"}